/////////////////////////////////////////////////////////////////////////////////////////////////////////
//BEGIN Macros
/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO bash_log BEGIN //whenever this macro is invoked, it moves the contents of EET/temp/bash.debug to the real log.
	LOCAL_SET ln=0
	LOCAL_SPRINT log ~~
	ACTION_IF FILE_EXISTS ~EET/temp/bash.debug~ AND NOT FILE_SIZE ~EET/temp/bash.debug~ 0 BEGIN //don't do this if no log is available now.
		COPY + ~EET/temp/bash.debug~ ~EET/temp/bash.debug~
			ln=BUFFER_LENGTH
			READ_ASCII 0 log (ln)
			DELETE_BYTES 0 ln
			PATCH_LOG ~%log%~
			SPRINT log ~~
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO EET_WRITE_SSET BEGIN //Workaround for regexp glitch in Gort's WRITE_SOUNDSET
	COPY_EXISTING ~%npc%~ ~override~
		PATCH_IF SOURCE_SIZE > 0x2d3 BEGIN
			FOR (j1 = 0; j1 < 100; j1 += 1) BEGIN
				READ_LONG (0xa4 + j1 * 4) srf
				nsrf = EVALUATE_BUFFER ~%soundset%_%j1%~
				PATCH_IF (overwrite = 0) AND (srf = (0 - 1)) BEGIN //Soft writing
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END ELSE PATCH_IF (overwrite = 1) AND NOT (nsrf = (0 - 1)) BEGIN //Forced writing
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END ELSE PATCH_IF overwrite = 2 BEGIN //Overwrite regardless
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END
			END
		END
	BUT_ONLY
END
/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO read_trans_array_from_2da BEGIN
	LOCAL_SPRINT fl#r2en_trans ""
	LOCAL_SET i = 0
	LOCAL_SPRINT id ""
	LOCAL_SPRINT string ""

	READ_2DA_ENTRIES_NOW fl#r2en_trans 3
	FOR (i = 0; i < fl#r2en_trans; i = i + 1) BEGIN
		READ_2DA_ENTRY_FORMER fl#r2en_trans i 0 id
		READ_2DA_ENTRY_FORMER fl#r2en_trans i 2 string
		TO_UPPER id
		PATCH_IF "%id%" STRING_MATCHES_REGEXP "^@" = 0 BEGIN
			INNER_PATCH_SAVE string "%string%" BEGIN
				REPLACE_TEXTUALLY "@" ""
				REPLACE_TEXTUALLY "###" " "
				REPLACE_TEXTUALLY ~"~ ~~ //"
				REPLACE_TEXTUALLY "~" ""
			END
			SPRINT $TRA("%id%") "%string%"
			PATCH_PRINT ~variable set: TRA_%id% = %string%~
		END
	END
END
//OUTER_SPRINT $TRA("%id%") "%string%"
//OUTER_SPRINT value $TRA("%id%")

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO ~PCU_core_init~ BEGIN

	<<<<<<<< Tempfile
a>>>>>>>>

	//FOR variables
	OUTER_SET count = 0
	OUTER_SET cntrow = 0
	OUTER_SET cnt = 0
	OUTER_SET cntare = 0
	OUTER_SET cntcre = 0
	OUTER_SET cntwav = 0

	//reporting variables
	OUTER_SET are_check = 0
	OUTER_SET baf_check = 0
	OUTER_SET bcs_check = 0
	OUTER_SET cre_check = 0
	OUTER_SET d_check = 0
	OUTER_SET dlg_check = 0
	OUTER_SET eff_check = 0
	OUTER_SET gam_check = 0
	OUTER_SET itm_check = 0
	OUTER_SET spl_check = 0
	OUTER_SET sto_check = 0
	OUTER_SET tra_check = 0
	OUTER_SET tp2_check = 0
	OUTER_SET vvc_check = 0
	OUTER_SET wed_check = 0
	OUTER_SET wmp_check = 0
	OUTER_SET ignore_check = 0
	OUTER_SET ren_check = 0

	//parsing variables
	//OUTER_SET create_directory = 0
	//OUTER_SET first_directory = 0
	//OUTER_SPRINT prev_directory_name ""

END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~PCU_core_init2~ BEGIN
	SET detected = 0
	SET byteoff = 0
	SET detectbytes = 0
	READ_2DA_ENTRY "%count%" 0 1 "patch_name"
	INNER_PATCH "%patch_name%" BEGIN
		REPLACE_TEXTUALLY ~\?~ ~ ~

		//determine the full path of the resource
		SET bytes = 0
		FOR ( byteoff=0; byteoff<999; byteoff+=1) BEGIN
			READ_BYTE "%byteoff%" "detectbytes" ELSE 999
			PATCH_IF NOT ("%detectbytes%" = 999) BEGIN
				SET bytes = "%byteoff%" + 1
			END
			PATCH_IF ("%detectbytes%" = 999) BEGIN
				READ_ASCII 0x0 "patch_name" ("%bytes%")
				SET byteoff = 999
			END
		END

		//determine the extension on the resource
		SET bytes = 0
		FOR ( byteoff=0; byteoff<999; byteoff+=1) BEGIN
			READ_BYTE "%byteoff%" "detectbytes" ELSE 999
			PATCH_IF NOT ("%detectbytes%" = 999) BEGIN
				SET bytes = "%byteoff%" + 1
			END
			PATCH_IF ("%detectbytes%" = 999) BEGIN
				SPRINT "extension_name" ""
				FOR ( byteoff="%bytes%";byteoff>0; byteoff="%byteoff%"-1) BEGIN
					READ_BYTE ("%byteoff%" - 1) "character"
					PATCH_IF ( "%character%" = 0x2e) BEGIN //checks for the '.' character
						READ_ASCII (("%byteoff%"-1)+1) "extension_name" ("%bytes%" - "%byteoff%")
						SET byteoff = 0
					END
				END
				SET byteoff = 999
			END
		END

		//determine the length of the file name
		SET bytes = 0
		SET file_length = 0
		FOR ( byteoff=0; byteoff<999; byteoff+=1) BEGIN
			READ_BYTE "%byteoff%" "detectbytes" ELSE 999
			PATCH_IF NOT ("%detectbytes%" = 999) BEGIN
				SET bytes = "%byteoff%" + 1
			END
			PATCH_IF ("%detectbytes%" = 999) BEGIN
				FOR ( byteoff="%bytes%";byteoff>0; byteoff="%byteoff%"-1) BEGIN
					READ_BYTE ("%byteoff%" - 1) "character"
					PATCH_IF ( "%character%" = 0x2f) BEGIN //checks for the '/' character
						SET file_length = ("%bytes%" - "%byteoff%")
						SET byteoff = 0
					END
				END
				PATCH_IF ("%file_length%"=0) BEGIN
					SET file_length = "%bytes%"
				END
				SET byteoff = 999
			END
		END

		//determine the directory path of the resource
		SET bytes = 0
		FOR ( byteoff=0; byteoff<999; byteoff+=1) BEGIN
			READ_BYTE "%byteoff%" "detectbytes" ELSE 999
			PATCH_IF ("%detectbytes%" = 0x2f) BEGIN //checks for the '/' character
				SET bytes = ("%byteoff%" + 1) - 1
			END
			PATCH_IF ("%detectbytes%" = 999) BEGIN
				READ_ASCII 0x0 "directory_name" ("%bytes%")
				SPRINT "directory_name" "%directory_name%" //MKDIR doesn't like ascString so convert to String
				SET directory_length = "%bytes%"
				SET byteoff = 999
			END
		END

		//determine if detected directory path is the same as the previous entry
		/*PATCH_IF ( "%first_directory%" = 1 ) AND (( "%prev_directory_name%" STRING_EQUAL_CASE "%directory_name%" ) = 1) BEGIN
			SET create_directory = 0
		END
		ELSE BEGIN
			SET create_directory = 1
		END
		SET first_directory = 1*/

	END

END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~PCU_core_patch~ BEGIN

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//GAM patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.GAM$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching gam version 1.1 file %patch_name%...~

		///////////////////////
		//NPCS
		///////////////////////
		READ_LONG 0x30 npcs_off
		READ_LONG 0x34 npcs_num
		SET "idx" = 0
		WHILE ("%idx%" < "%npcs_num%") BEGIN

			///////////////////////
			//0xc CRE resref
			///////////////////////
			READ_ASCII (0xc + npcs_off + (idx * 0x160)) "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE (0xc + npcs_off + (idx * 0x160)) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x30 -> 0xc (%resref_index_source% => %resref_index_dest%)~
				END
			END

			///////////////////////
			//0x18 ARE resref
			///////////////////////
			READ_ASCII (0x18 + npcs_off + (idx * 0x160)) "resref_are"
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE (0x18 + npcs_off + (idx * 0x160)) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x30 -> 0x18 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			SET "idx" = "%idx%" + 1
		
		END
		
		SET gam_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//ARE patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "AREAV1.0")=1) AND (SOURCE_SIZE > 0x11b) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching area version 1.0 file %patch_name%...~

		///////////////////////
		//0x8 WED resref
		///////////////////////
		READ_ASCII 0x8 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x8 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x8 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////
		//0x18 north ARE resref
		///////////////////////
		READ_ASCII 0x18 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x18 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x18 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////
		//0x24 east ARE resref
		///////////////////////
		READ_ASCII 0x24 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x24 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x24 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////
		//0x30 south ARE resref
		///////////////////////
		READ_ASCII 0x30 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x30 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////
		//0x3c west ARE resref
		///////////////////////
		READ_ASCII 0x3c "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x3c "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x3c (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////
		//0x94 BCS resref
		///////////////////////
		READ_ASCII 0x94 "resref_bcs"
		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x94 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x94 (%resref_index_source% => %resref_index_dest%)~
			END
		END
		READ_ASCII 0x94 "resref_bcs" (1)
		PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "_")=1) BEGIN
			DELETE_BYTES 0x94 0x1
			INSERT_BYTES (0x94+0x7) 0x1
		END

		///////////////////////
		//Actors
		///////////////////////
		READ_LONG 0x54 "actors_off"
		READ_SHORT 0x58 "actors_cnt"
		FOR (cnt=0; cnt<"%actors_cnt%"; cnt=cnt+1) BEGIN

			//0x48 area-specific creature DLG resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x48) "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%actors_off%"+0x110*cnt+0x48) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x48 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x50 area-specific creature override BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x50) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%actors_off%"+0x110*cnt+0x50) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x50 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x58 area-specific creature class BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x58) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%actors_off%"+0x110*cnt+0x58) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x58 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x60 area-specific creature race BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x60) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%actors_off%"+0x110*cnt+0x60) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x60 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x68 area-specific creature general BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x68) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%actors_off%"+0x110*cnt+0x68) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x68 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x70 area-specific creature default BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x70) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%actors_off%"+0x110*cnt+0x70) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x70 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x78 area-specific creature specific BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x78) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%actors_off%"+0x110*cnt+0x78) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x80 CRE resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x80) "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%actors_off%"+0x110*cnt+0x80) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x80 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		///////////////////////////////////////
		//Info points, trigger points, and exit
		///////////////////////////////////////
		READ_LONG 0x5c "info_off"
		READ_SHORT 0x5a "info_cnt"
		FOR (cnt=0; cnt<"%info_cnt%"; cnt=cnt+1) BEGIN

			//0x0 trigger name (may contains area numbers for doors)
			READ_ASCII ("%info_off%"+0xc4*cnt) "resref_door" (8)
			FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%info_off%"+0xc4*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%info_off%"+0xc4*cnt) "resref_door" (6)
			FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%info_off%"+0xc4*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%info_off%"+0xc4*cnt) "resref_door" (7)
			FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%info_off%"+0xc4*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%info_off%"+0xc4*cnt) "resref_door" (5)
			FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%info_off%"+0xc4*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x38 destination ARE resref
			READ_ASCII ("%info_off%"+0xc4*cnt+0x38) "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%info_off%"+0xc4*cnt+0x38) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x38 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x7c region BCS resref
			READ_ASCII ("%info_off%"+0xc4*cnt+0x7c) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%info_off%"+0xc4*cnt+0x7c) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x7c (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0xbc trigger DLG resref for prox triggers
			READ_ASCII ("%info_off%"+0xc4*cnt+0xbc) "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%info_off%"+0xc4*cnt+0xbc) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0xbc (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Entrances
		//////////////
		READ_LONG 0x68 "entry_off"
		READ_SHORT 0x6c "entry_cnt"
		FOR (cnt=0; cnt<"%entry_cnt%"; cnt=cnt+1) BEGIN

			//0x0 entrance name (contains area numbers)
			READ_ASCII ("%entry_off%"+0x68*cnt) "resref_exit" (8)
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%entry_off%"+0x68*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x68 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%entry_off%"+0x68*cnt) "resref_exit" (6)
			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%entry_off%"+0x68*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x68 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%entry_off%"+0x68*cnt) "resref_exit" (7)
			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%entry_off%"+0x68*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x68 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%entry_off%"+0x68*cnt) "resref_exit" (5)
			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%entry_off%"+0x68*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x68 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Spawn points
		//////////////
		READ_LONG 0x60 "spawn_off"
		READ_SHORT 0x64 "spawn_cnt"
		FOR (cnt=0; cnt<"%spawn_cnt%"; cnt=cnt+1) BEGIN

			//0x24 spawn CRE resref 1
			//0x2c spawn CRE resref 2
			//0x34 spawn CRE resref 3
			//0x3c spawn CRE resref 4
			//0x44 spawn CRE resref 5
			//0x4c spawn CRE resref 6
			//0x54 spawn CRE resref 7
			//0x5c spawn CRE resref 8
			//0x64 spawn CRE resref 9
			//0x6c spawn CRE resref 10
			FOR (cntcre=0; cntcre<10; cntcre=cntcre+1) BEGIN
				READ_ASCII ("%spawn_off%"+0xc8*cnt+0x24+0x8*cntcre) "resref_cre"
				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%spawn_off%"+0xc8*cnt+0x24+0x8*cntcre) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x60 -> 0x24-0x6c (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

		END

		////////////
		//Containers
		////////////
		READ_LONG 0x70 "contain_off"
		READ_SHORT 0x74 "contain_cnt"
		FOR (cnt=0; cnt<"%contain_cnt%"; cnt=cnt+1) BEGIN

			//0x48 trap BCS resref
			READ_ASCII ("%contain_off%"+0xc0*cnt+0x48) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%contain_off%"+0xc0*cnt+0x48) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x70 -> 0x48 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%contain_off%"+0xc4*cnt+0x48) "resref_bcs" (1)
			PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "_")=1) BEGIN
				DELETE_BYTES ("%contain_off%"+0xc0*cnt+0x48) 0x1
				INSERT_BYTES ("%contain_off%"+0xc0*cnt+0x48+0x7) 0x1
			END

			//0x58 creature CRE resref
			READ_ASCII ("%contain_off%"+0xc0*cnt+0x58) "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%contain_off%"+0xc0*cnt+0x58) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x70 -> 0x58 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x78 key ITM resref
			READ_ASCII ("%contain_off%"+0xc0*cnt+0x78) "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%contain_off%"+0xc0*cnt+0x78) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x70 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%contain_off%"+0xc4*cnt+0x78) "resref_itm" (1)
			PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "_")=1) BEGIN
				DELETE_BYTES ("%contain_off%"+0xc0*cnt+0x78) 0x1
				INSERT_BYTES ("%contain_off%"+0xc0*cnt+0x78+0x7) 0x1
			END

		END

		/////////////////
		//Container Items
		/////////////////
		READ_LONG 0x78 "citem_off"
		READ_SHORT 0x76 "citem_cnt"
		FOR (cnt=0; cnt<"%citem_cnt%"; cnt=cnt+1) BEGIN

			//0x0 ITM resref
			READ_ASCII ("%citem_off%"+0x14*cnt) "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%citem_off%"+0x14*cnt) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x78 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////
		//Ambients
		//////////
		READ_LONG 0x84 "ambient_off"
		READ_SHORT 0x82 "ambient_cnt"
		FOR (cnt=0; cnt<"%ambient_cnt%"; cnt=cnt+1) BEGIN

			//0x30 ambient WAV resref 1
			//0x38 ambient WAV resref 2
			//0x40 ambient WAV resref 3
			//0x48 ambient WAV resref 4
			//0x50 ambient WAV resref 5
			//0x58 ambient WAV resref 6
			//0x60 ambient WAV resref 7
			//0x68 ambient WAV resref 8
			//0x70 ambient WAV resref 9
			//0x78 ambient WAV resref 10
			FOR (cntwav=0; cntwav<10; cntwav=cntwav+1) BEGIN
				READ_ASCII ("%ambient_off%"+0xd4*cnt+0x30+0x8*cntwav) "resref_wav"
				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%ambient_off%"+0xd4*cnt+0x30+0x8*cntwav) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x84 -> 0x30-0x78 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

		END

		///////
		//Doors
		///////
		READ_LONG 0xa8 "door_off"
		READ_SHORT 0xa4 "door_cnt"
		FOR (cnt=0; cnt<"%door_cnt%"; cnt=cnt+1) BEGIN

			//0x58 door open WAV resref
			READ_ASCII ("%door_off%"+0xc8*cnt+0x58) "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%door_off%"+0xc8*cnt+0x58) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0x58 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x60 door close WAV resref
			READ_ASCII ("%door_off%"+0xc8*cnt+0x60) "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%door_off%"+0xc8*cnt+0x60) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0x60 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x78 key ITM resref
			READ_ASCII ("%door_off%"+0xc8*cnt+0x78) "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%door_off%"+0xc8*cnt+0x78) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x80 open BCS resref
			READ_ASCII ("%door_off%"+0xc8*cnt+0x80) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%door_off%"+0xc8*cnt+0x80) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0x80 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0xb8 open DLG resref
			READ_ASCII ("%door_off%"+0xc8*cnt+0xb8) "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%door_off%"+0xc8*cnt+0xb8) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0xb8 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		////////////
		//Animations
		////////////
		READ_LONG 0xb0 "anim_off"
		READ_SHORT 0xac "anim_cnt"
		FOR (cnt=0; cnt<"%anim_cnt%"; cnt=cnt+1) BEGIN


			//0x28 BAM resref
			READ_ASCII ("%anim_off%"+0x4c*cnt+0x28) "resref_bam"
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%anim_off%"+0x4c*cnt+0x28) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xb0 -> 0x28 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		///////
		//Songs
		///////
		READ_LONG 0xbc "song_off"

		//0x0 area day song dword
		READ_LONG ("%song_off%"+0x00) "dword_mus"
		FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
			SPRINT name_source "dword_mus_source%i%"
			SPRINT name_dest "dword_mus_dest%i%"
			SPRINT dword_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT dword_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
				WRITE_SHORT ("%song_off%"+0x00) "%dword_index_dest%"
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x0 (%dword_index_source% => %dword_index_dest%)~
			END
		END

		//0x04 area night song dword
		READ_LONG ("%song_off%"+0x04) "dword_mus"
		FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
			SPRINT name_source "dword_mus_source%i%"
			SPRINT name_dest "dword_mus_dest%i%"
			SPRINT dword_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT dword_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
				WRITE_SHORT ("%song_off%"+0x04) "%dword_index_dest%"
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x04 (%dword_index_source% => %dword_index_dest%)~
			END
		END

		//0x08 area win song dword
		READ_LONG ("%song_off%"+0x08) "dword_mus"
		FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
			SPRINT name_source "dword_mus_source%i%"
			SPRINT name_dest "dword_mus_dest%i%"
			SPRINT dword_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT dword_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
				WRITE_SHORT ("%song_off%"+0x08) "%dword_index_dest%"
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x08 (%dword_index_source% => %dword_index_dest%)~
			END
		END

		//0x0c area battle song dword
		READ_LONG ("%song_off%"+0x0c) "dword_mus"
		FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
			SPRINT name_source "dword_mus_source%i%"
			SPRINT name_dest "dword_mus_dest%i%"
			SPRINT dword_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT dword_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
				WRITE_SHORT ("%song_off%"+0x0c) "%dword_index_dest%"
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x0c (%dword_index_source% => %dword_index_dest%)~
			END
		END

		//0x10 area lose song dword
		READ_LONG ("%song_off%"+0x10) "dword_mus"
		FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
			SPRINT name_source "dword_mus_source%i%"
			SPRINT name_dest "dword_mus_dest%i%"
			SPRINT dword_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT dword_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
				WRITE_SHORT ("%song_off%"+0x10) "%dword_index_dest%"
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x10 (%dword_index_source% => %dword_index_dest%)~
			END
		END

		//0x28 area ambient WAV resref
		//0x30 area ambient WAV resref
		FOR (cntwav=0; cntwav<2; cntwav=cntwav+1) BEGIN
			READ_ASCII ("%song_off%"+0x28+0x8*cntwav) "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%song_off%"+0x28+0x8*cntwav) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x28-0x30 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		/*READ_ASCII ("%song_off%"+0x28) "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE ("%song_off%"+0x28) "%resref_index_dest%" #16
			END
		END*/

		//0x3c area ambient WAV resref
		//0x44 area ambient WAV resref
		FOR (cntwav=0; cntwav<2; cntwav=cntwav+1) BEGIN
			READ_ASCII ("%song_off%"+0x3c+0x8*cntwav) "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%song_off%"+0x3c+0x8*cntwav) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x3c-0x44 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END
		
		/*READ_ASCII ("%song_off%"+0x3c) "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE ("%song_off%"+0x3c) "%resref_index_dest%" #16
			END
		END*/

		//////////////////////
		//Rest spawn creatures
		//////////////////////
		READ_LONG 0xc0 "rest_off"

		//0x48 CRE resref 1
		//0x50 CRE resref 2
		//0x58 CRE resref 3
		//0x60 CRE resref 4
		//0x68 CRE resref 5
		//0x70 CRE resref 6
		//0x78 CRE resref 7
		//0x80 CRE resref 8
		//0x88 CRE resref 9
		//0x90 CRE resref 10
		FOR (cntcre=0; cntcre<10; cntcre=cntcre+1) BEGIN
			READ_ASCII ("%rest_off%"+0x48+0x8*cntcre) "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%rest_off%"+0x48+0x8*cntcre) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc0 -> 0x48-0x90 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		SET are_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//BAF patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.BAF$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching script source file %patch_name%...~

		//area resrefs
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
		END

		//door names
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		//entrance names
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		//"_" prepended resrefs
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
		END

		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
		END

		FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_cre_source%i%"
			SPRINT name_dest "resref_cre_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
		END

		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
		END

		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
		END

		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
		END

		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
		END

		FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_sto_source%i%"
			SPRINT name_dest "resref_sto_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
		END

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
		END

		FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_mve_source%i%"
			SPRINT name_dest "resref_mve_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
		END

		FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_2da_source%i%"
			SPRINT name_dest "resref_2da_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
		END

		FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_var_source%i%"
			SPRINT name_dest "resref_var_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
		END

		LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		REPLACE_TEXTUALLY ~\(Allegiance(.*,\)ANYONE)~ ~\10)~//workaround for weidu compiler bug

		SET baf_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//BCS patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "SC
CR
CO")=1) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching compiled script file %patch_name%...~

		DECOMPILE_AND_PATCH BEGIN

			//area resrefs
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			END

			//door names
			FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			//entrance names
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			//"_" prepended resrefs
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			END

			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			END

			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			END

			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			END

			FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dv_source%i%"
				SPRINT name_dest "resref_dv_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			END

			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			END

			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			END

			FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_sto_source%i%"
				SPRINT name_dest "resref_sto_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			END

			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			END

			FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mve_source%i%"
				SPRINT name_dest "resref_mve_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
			END

			FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_2da_source%i%"
				SPRINT name_dest "resref_2da_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
			END

			FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_var_source%i%"
				SPRINT name_dest "resref_var_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
			END

			LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

			REPLACE_TEXTUALLY ~\(Allegiance(.*,\)ANYONE)~ ~\10)~//workaround for weidu compiler bug

		END

		SET bcs_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//CRE patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "CRE V1.0")=1) /*AND (SOURCE_SIZE > 0x2d3)*/ BEGIN

		//Checks whether a CRE file is well-formed or not, fixes some common bugs, and reports whether the CRE file is still broken or not.
		LPF ~FJ_CRE_VALIDITY~ RET vl=valid END
		PATCH_IF vl BEGIN
		
			PATCH_PRINT ~%cntcurrent%/%cntrow% Patching creature version 1.0 file %patch_name%...~

			////////////////////////////////
			//0x34 small portrait BMP resref
			////////////////////////////////
			READ_ASCII 0x34 "resref_bmp"
			FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bmp_source%i%"
				SPRINT name_dest "resref_bmp_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bmp%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x34 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x34 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x3c large portrait BMP resref
			////////////////////////////////
			READ_ASCII 0x3c "resref_bmp"
			FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bmp_source%i%"
				SPRINT name_dest "resref_bmp_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bmp%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x3c "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x3c (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x248 override BCS resref
			////////////////////////////////
			READ_ASCII 0x248 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x248 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x248 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x250 class BCS resref
			////////////////////////////////
			READ_ASCII 0x250 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x250 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x250 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x258 race BCS resref
			////////////////////////////////
			READ_ASCII 0x258 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x258 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x258 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x260 general BCS resref
			////////////////////////////////
			READ_ASCII 0x260 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x260 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x260 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x268 default BCS resref
			////////////////////////////////
			READ_ASCII 0x268 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x268 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x268 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//////////////////////
			//0x280 Death Variable
			//////////////////////
			READ_ASCII 0x280 "resref_dv"
			FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dv_source%i%"
				SPRINT name_dest "resref_dv_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dv%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x280 "%resref_index_dest%" #32
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x280 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x2cc DLG resref
			////////////////////////////////
			READ_ASCII 0x2cc "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x2cc "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2cc (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//////////////
			//Known Spells
			//////////////
			READ_LONG 0x2a0 "kspell_off"
			READ_SHORT 0x2a4 "kspell_cnt"
			FOR (cnt=0; cnt<"%kspell_cnt%"; cnt=cnt+1) BEGIN

				//0x0 SPL resref
				READ_ASCII ("%kspell_off%"+0xc*cnt) "resref_spl"
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%kspell_off%"+0xc*cnt) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2a0 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
					END
				END

			END

			//////////////////
			//Memorised Spells
			//////////////////
			READ_LONG 0x2b0 "mspell_off"
			READ_SHORT 0x2b4 "mspell_cnt"
			FOR (cnt=0; cnt<"%mspell_cnt%"; cnt=cnt+1) BEGIN

				//0x0 SPL resref
				READ_ASCII ("%mspell_off%"+0xc*cnt) "resref_spl"
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%mspell_off%"+0xc*cnt) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2b0 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
					END
				END

			END

			//////////////
			//Items
			//////////////
			READ_LONG 0x2bc "item_off"
			READ_SHORT 0x2c0 "item_cnt"
			FOR (cnt=0; cnt<"%item_cnt%"; cnt=cnt+1) BEGIN

				//0x0 ITM resref
				READ_ASCII ("%item_off%"+0x14*cnt) "resref_itm"
				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%item_off%"+0x14*cnt) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2bc -> 0x0 (%resref_index_source% => %resref_index_dest%)~
					END
				END

			END

			SET cre_check += 1
			SET checked = 1

		END
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//D patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.D$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching dialog source file %patch_name%...~

		//area resrefs
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
		END

		//door names
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		//entrance names
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		//"_" prepended resrefs
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
		END

		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
		END

		FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_cre_source%i%"
			SPRINT name_dest "resref_cre_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
		END

		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			LAUNCH_PATCH_MACRO ~D_DLG_replace~
		END

		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
		END

		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
		END

		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
		END

		FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_sto_source%i%"
			SPRINT name_dest "resref_sto_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
		END

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
		END

		FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_mve_source%i%"
			SPRINT name_dest "resref_mve_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
		END

		FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_2da_source%i%"
			SPRINT name_dest "resref_2da_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
		END

		FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_var_source%i%"
			SPRINT name_dest "resref_var_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
		END

		FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlgext_source%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			LAUNCH_PATCH_MACRO ~D_DLGext_replace~
		END

		LAUNCH_PATCH_MACRO ~D_traifyDLG_replace~
		LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		SET d_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//DLG patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "DLG V1.0")=1) AND (SOURCE_SIZE > 0x33) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching dialog version 1.0 file %patch_name%...~

		//////////////
		//Responses
		//////////////
		READ_LONG 0x14 "resp_off"
		READ_SHORT 0x10 "resp_cnt"
		FOR (cnt=0; cnt<"%resp_cnt%"; cnt=cnt+1) BEGIN

			//0x14 next dialogue DLG resref
			READ_ASCII ("%resp_off%"+0x20*cnt+0x14) "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%resp_off%"+0x20*cnt+0x14) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x14 -> 0x14 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			READ_ASCII ("%resp_off%"+0x20*cnt+0x14) "resref_dlg" (1)
			PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "_")=1) BEGIN
				DELETE_BYTES ("%resp_off%"+0x20*cnt+0x14) 0x1
				INSERT_BYTES ("%resp_off%"+0x20*cnt+0x14+0x7) 0x1
			END

		END

		DECOMPILE_AND_PATCH BEGIN

			//area resrefs
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			END

			//door names
			FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			//entrance names
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
			END

			//"_" prepended resrefs
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			END

			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			END

			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			END

			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
				LAUNCH_PATCH_MACRO ~D_DLG_replace~
			END

			FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dv_source%i%"
				SPRINT name_dest "resref_dv_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			END

			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			END

			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			END

			FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_sto_source%i%"
				SPRINT name_dest "resref_sto_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			END

			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			END

			FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mve_source%i%"
				SPRINT name_dest "resref_mve_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
			END

			FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_2da_source%i%"
				SPRINT name_dest "resref_2da_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
			END

			FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_var_source%i%"
				SPRINT name_dest "resref_var_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
			END

			FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlgext_source%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				LAUNCH_PATCH_MACRO ~D_DLGext_replace~
			END

			LAUNCH_PATCH_MACRO ~D_traifyDLG_replace~
			LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		END

		SET dlg_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//EFF patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "EFF V2.0")=1) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching effect version 2.0 file %patch_name%...~

		/////////////////////
		//0x30 effect resref
		//0x78 effect resref2
		/////////////////////

		//0x14 resource resref
		//2DA - 0x7f Monster Summoning, 0xd6 Select Spell
		//EFF - 0xb1 Use EFF File, 0xf8 Set Melee Effect, 0xf9 Set Ranged Effect, 0x110 Apply Effect on Condition, 0x11b Use EFF File (II)
		//VVC - 0xd7 Play 3D Effect, 0x128 Immunity to Specific Animation

		READ_SHORT 0x10 "fx_type"
		READ_ASCII 0x30 "resref"
		READ_ASCII 0x78 "resref2"

		PATCH_IF ( "%fx_type%" = 0xd7) BEGIN //Play 3D Effect
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0xd7 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0xd7 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x6b) BEGIN //Change Portrait
			FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bmp_source%i%"
				SPRINT name_dest "resref_bmp_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x6b -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x6b -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x52) BEGIN //Set AI Script
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x52 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x52 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x43) //Summon Creature
		OR ( "%fx_type%" = 0x87) //Polymorph into Specific
		OR ( "%fx_type%" = 0x97) //Replace Creature
		OR ( "%fx_type%" = 0xa8) BEGIN //Remove Creature
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x43/0x87/0x97/0xa8 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x43/0x87/0x97/0xa8 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x6f) //Create Item in Magical Weapon Slot
		OR ( "%fx_type%" = 0x70) //Remove Item
		OR ( "%fx_type%" = 0x7a) //Create Inventory Item
		OR ( "%fx_type%" = 0x7b) //Remove Inventory Item
		OR ( "%fx_type%" = 0x8f) //Create Item in Slot
		OR ( "%fx_type%" = 0xb4) //Cannot Use Item
		OR ( "%fx_type%" = 0xff) BEGIN //Create Inventory Item (days)
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x6f/0x70/0x7a/0x7b/0x8f/0xb4/0xff -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x6f/0x70/0x7a/0x7b/0x8f/0xb4/0xff -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x98) BEGIN //Play Movie
			FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mve_source%i%"
				SPRINT name_dest "resref_mve_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x98 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x98 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x92) //Cast Spell (at Creature)
		OR ( "%fx_type%" = 0x93) //Learn Spell
		OR ( "%fx_type%" = 0x94) //Cast Spell (at Point)
		OR ( "%fx_type%" = 0xab) //Give Innate Ability
		OR ( "%fx_type%" = 0xac) //Remove Spell
		OR ( "%fx_type%" = 0xb7) //Apply Effect Itemtype (SPL ResRef?)
		OR ( "%fx_type%" = 0xce) //Protection from Spell
		OR ( "%fx_type%" = 0xcf) //Bounce Specified Spell
		OR ( "%fx_type%" = 0xe8) //Cast Spell on Condition
		OR ( "%fx_type%" = 0xfb) //Change Bard Song Effect
		OR ( "%fx_type%" = 0xfc) //Set Trap
		OR ( "%fx_type%" = 0x100) //Spell Sequencer Active (SPL ResRef?)
		OR ( "%fx_type%" = 0x102) //Spell Sequencer Activation
		OR ( "%fx_type%" = 0x139) BEGIN //HLA Denotation
			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x92/0x93/0x94/0xab/0xac/0xb7/0xce/0xcf/0xe8/0xfb/0xfc/0x100/0x102/0x139 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x92/0x93/0x94/0xab/0xac/0xb7/0xce/0xcf/0xe8/0xfb/0xfc/0x100/0x102/0x139 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0xae) BEGIN //Play Sound
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0xae -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0xae -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		//////////////////////////////
		//0x94 source spell SPL resref
		//////////////////////////////
		READ_ASCII 0x94 "resref_spl"
		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x94 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x94 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		SET eff_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//ITM patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "ITM V1  ")=1) AND (SOURCE_SIZE > 0x71) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching item version 1.0 file %patch_name%...~

		////////////////////////////////
		//0x10 replacement ITM resref
		////////////////////////////////
		READ_ASCII 0x10 "resref_itm"
		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x10 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x3a inventory icon BAM resref
		////////////////////////////////
		READ_ASCII 0x3a "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x3a "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x3a (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x44 ground icon BAM resref
		////////////////////////////////
		READ_ASCII 0x44 "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x44 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x44 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x58 description icon BAM resref
		////////////////////////////////
		READ_ASCII 0x58 "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x58 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x58 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		//////////////
		//Abilities
		//////////////
		READ_LONG 0x64 "abil_off"
		READ_SHORT 0x68 "abil_cnt"
		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN


			//0x4 memorised icon BAM resref
			READ_ASCII ("%abil_off%"+0x38*cnt+0x4) "resref_bam"
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%abil_off%"+0x38*cnt+0x4) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x64 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Effects
		//////////////
		READ_LONG 0x6a "fx_off"
		READ_SHORT 0x70 "fx_cnt"

		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%abil_off%"+0x38*cnt+0x1e) "fx_num"
			SET fx_cnt += fx_num //gauge the total number of effects by summing global effects and the effects of each ability
		END

		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN

			//0x14 resource resref
			//2DA - 0x7f Monster Summoning, 0xd6 Select Spell
			//EFF - 0xb1 Use EFF File, 0xf8 Set Melee Effect, 0xf9 Set Ranged Effect, 0x110 Apply Effect on Condition, 0x11b Use EFF File (II)
			//VVC - 0xd7 Play 3D Effect, 0x128 Immunity to Specific Animation

			READ_SHORT ("%fx_off%"+0x30*cnt) "fx_type"
			READ_ASCII ("%fx_off%"+0x30*cnt+0x14) "resref"

			PATCH_IF ( "%fx_type%" = 0xd7) BEGIN //Play 3D Effect
				FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bam_source%i%"
					SPRINT name_dest "resref_bam_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0xd7 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x6b) BEGIN //Change Portrait
				FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bmp_source%i%"
					SPRINT name_dest "resref_bmp_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x6b -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x52) BEGIN //Set AI Script
				FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bcs_source%i%"
					SPRINT name_dest "resref_bcs_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x52 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x43) //Summon Creature
			OR ( "%fx_type%" = 0x87) //Polymorph into Specific
			OR ( "%fx_type%" = 0x97) //Replace Creature
			OR ( "%fx_type%" = 0xa8) BEGIN //Remove Creature
				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x43/0x87/0x97/0xa8 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x6f) //Create Item in Magical Weapon Slot
			OR ( "%fx_type%" = 0x70) //Remove Item
			OR ( "%fx_type%" = 0x7a) //Create Inventory Item
			OR ( "%fx_type%" = 0x7b) //Remove Inventory Item
			OR ( "%fx_type%" = 0x8f) //Create Item in Slot
			OR ( "%fx_type%" = 0xb4) //Cannot Use Item
			OR ( "%fx_type%" = 0xff) BEGIN //Create Inventory Item (days)
				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x6f/0x70/0x7a/0x7b/0x8f/0xb4/0xff -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x98) BEGIN //Play Movie
				FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_mve_source%i%"
					SPRINT name_dest "resref_mve_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x98 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x92) //Cast Spell (at Creature)
			OR ( "%fx_type%" = 0x93) //Learn Spell
			OR ( "%fx_type%" = 0x94) //Cast Spell (at Point)
			OR ( "%fx_type%" = 0xab) //Give Innate Ability
			OR ( "%fx_type%" = 0xac) //Remove Spell
			OR ( "%fx_type%" = 0xb7) //Apply Effect Itemtype (SPL ResRef?)
			OR ( "%fx_type%" = 0xce) //Protection from Spell
			OR ( "%fx_type%" = 0xcf) //Bounce Specified Spell
			OR ( "%fx_type%" = 0xe8) //Cast Spell on Condition
			OR ( "%fx_type%" = 0xfb) //Change Bard Song Effect
			OR ( "%fx_type%" = 0xfc) //Set Trap
			OR ( "%fx_type%" = 0x100) //Spell Sequencer Active (SPL ResRef?)
			OR ( "%fx_type%" = 0x102) //Spell Sequencer Activation
			OR ( "%fx_type%" = 0x139) BEGIN //HLA Denotation
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x92/0x93/0x94/0xab/0xac/0xb7/0xce/0xcf/0xe8/0xfb/0xfc/0x100/0x102/0x139 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0xae) BEGIN //Play Sound
				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0xae -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

		END

		SET itm_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//SPL patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "SPL V1  ")=1) AND (SOURCE_SIZE > 0x71) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching spell version 1.0 file %patch_name%...~

		////////////////////////////////
		//0x10 casting sound WAV resref
		////////////////////////////////
		READ_ASCII 0x10 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x10 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x3a spellbook icon BAM resref
		////////////////////////////////
		READ_ASCII 0x3a "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x3a "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x3a (%resref_index_source% => %resref_index_dest%)~
			END
		END

		//////////////
		//Abilities
		//////////////
		READ_LONG 0x64 "abil_off"
		READ_SHORT 0x68 "abil_cnt"
		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN

			//0x4 memorised icon BAM resref
			READ_ASCII ("%abil_off%"+0x28*cnt+0x4) "resref_bam"
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%abil_off%"+0x28*cnt+0x4) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x64 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Effects
		//////////////
		READ_LONG 0x6a "fx_off"
		READ_SHORT 0x70 "fx_cnt"

		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%abil_off%"+0x28*cnt+0x1e) "fx_num"
			SET fx_cnt += fx_num //gauge the total number of effects by summing global effects and the effects of each ability
		END

		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN

			//0x14 resource resref
			//2DA - 0x7f Monster Summoning, 0xd6 Select Spell
			//EFF - 0xb1 Use EFF File, 0xf8 Set Melee Effect, 0xf9 Set Ranged Effect, 0x110 Apply Effect on Condition, 0x11b Use EFF File (II)
			//VVC - 0xd7 Play 3D Effect, 0x128 Immunity to Specific Animation

			READ_SHORT ("%fx_off%"+0x30*cnt) "fx_type"
			READ_ASCII ("%fx_off%"+0x30*cnt+0x14) "resref"

			PATCH_IF ( "%fx_type%" = 0xd7) BEGIN //Play 3D Effect
				FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bam_source%i%"
					SPRINT name_dest "resref_bam_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0xd7 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x6b) BEGIN //Change Portrait
				FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bmp_source%i%"
					SPRINT name_dest "resref_bmp_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x6b -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x52) BEGIN //Set AI Script
				FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bcs_source%i%"
					SPRINT name_dest "resref_bcs_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x52 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x43) //Summon Creature
			OR ( "%fx_type%" = 0x87) //Polymorph into Specific
			OR ( "%fx_type%" = 0x97) //Replace Creature
			OR ( "%fx_type%" = 0xa8) BEGIN //Remove Creature
				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x43/0x87/0x97/0xa8 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x6f) //Create Item in Magical Weapon Slot
			OR ( "%fx_type%" = 0x70) //Remove Item
			OR ( "%fx_type%" = 0x7a) //Create Inventory Item
			OR ( "%fx_type%" = 0x7b) //Remove Inventory Item
			OR ( "%fx_type%" = 0x8f) //Create Item in Slot
			OR ( "%fx_type%" = 0xb4) //Cannot Use Item
			OR ( "%fx_type%" = 0xff) BEGIN //Create Inventory Item (days)
				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x6f/0x70/0x7a/0x7b/0x8f/0xb4/0xff -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x98) BEGIN //Play Movie
				FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_mve_source%i%"
					SPRINT name_dest "resref_mve_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x98 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x92) //Cast Spell (at Creature)
			OR ( "%fx_type%" = 0x93) //Learn Spell
			OR ( "%fx_type%" = 0x94) //Cast Spell (at Point)
			OR ( "%fx_type%" = 0xab) //Give Innate Ability
			OR ( "%fx_type%" = 0xac) //Remove Spell
			OR ( "%fx_type%" = 0xb7) //Apply Effect Itemtype (SPL ResRef?)
			OR ( "%fx_type%" = 0xce) //Protection from Spell
			OR ( "%fx_type%" = 0xcf) //Bounce Specified Spell
			OR ( "%fx_type%" = 0xe8) //Cast Spell on Condition
			OR ( "%fx_type%" = 0xfb) //Change Bard Song Effect
			OR ( "%fx_type%" = 0xfc) //Set Trap
			OR ( "%fx_type%" = 0x100) //Spell Sequencer Active (SPL ResRef?)
			OR ( "%fx_type%" = 0x102) //Spell Sequencer Activation
			OR ( "%fx_type%" = 0x139) BEGIN //HLA Denotation
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x92/0x93/0x94/0xab/0xac/0xb7/0xce/0xcf/0xe8/0xfb/0xfc/0x100/0x102/0x139 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0xae) BEGIN //Play Sound
				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0xae -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

		END

		SET spl_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//STO patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "STORV1.0")=1) AND (SOURCE_SIZE > 0x9b) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching store version 1.0 file %patch_name%...~

		////////////////////////////////
		//0x44 tavern rumours DLG resref
		////////////////////////////////
		READ_ASCII 0x44 "resref_dlg"
		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x44 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x44 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x54 temple rumours DLG resref
		////////////////////////////////
		READ_ASCII 0x54 "resref_dlg"
		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x54 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		//////////////
		//Items for Sale
		//////////////
		READ_LONG 0x34 "item_off"
		READ_SHORT 0x38 "item_cnt"
		FOR (cnt=0; cnt<"%item_cnt%"; cnt=cnt+1) BEGIN

			//0x0 ITM resref
			READ_ASCII ("%item_off%"+0x1c*cnt) "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%item_off%"+0x1c*cnt) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x34 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Drinks for Sale
		//////////////
		READ_LONG 0x4c "drink_off"
		READ_SHORT 0x50 "drink_cnt"
		FOR (cnt=0; cnt<"%drink_cnt%"; cnt=cnt+1) BEGIN

			//0x0 special rumour DLG resref
			READ_ASCII ("%drink_off%"+0x14*cnt) "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%drink_off%"+0x14*cnt) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x4c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Cures for Sale
		//////////////
		READ_LONG 0x70 "cure_off"
		READ_SHORT 0x74 "cure_cnt"
		FOR (cnt=0; cnt<"%cure_cnt%"; cnt=cnt+1) BEGIN

			//0x0 SPL resref
			READ_ASCII ("%cure_off%"+0xc*cnt) "resref_spl"
			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%cure_off%"+0xc*cnt) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x70 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		SET sto_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//TRA patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TRA$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WeiDU translation file %patch_name%...~

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(\[\)%resref_index_source%\(\]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <WAV> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END

		SET tra_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//TP2/TPH/TPP patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TP2$")=0) 
	OR (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TPH$")=0)
	OR (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TPP$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WeiDU script file %patch_name%...~

		//area resrefs
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.ARE\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <ARE> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.ARE\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <ARE> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <ARE> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <ARE> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END

		//door names
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <door> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		//entrance names
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <entrance> (%resref_index_source% => %resref_index_dest%)~ END ~"%resref_index_dest%~
		END

		//"_" prepended resrefs
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.BAM\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BAM> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.BAM\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BAM> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BAM> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BAM> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.BAF\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BCS> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.BCS\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BCS> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.BCS\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BCS> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BCS> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BCS> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_cre_source%i%"
			SPRINT name_dest "resref_cre_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.CRE\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <CRE> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.CRE\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <CRE> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <CRE> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <CRE> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.DLG\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <DLG> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.D\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <DLG> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.DLG\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <DLG> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <DLG> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <DLG> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <DV> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <DV> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.ITM\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <ITM> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.ITM\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <ITM> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <ITM> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <ITM> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.SPL\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <SPL> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.SPL\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <SPL> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <SPL> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <SPL> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_sto_source%i%"
			SPRINT name_dest "resref_sto_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.STO\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <STO> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.STO\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <STO> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <STO> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <STO> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.WAV\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <WAV> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.WAV\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <WAV> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <WAV> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <WAV> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(\[\)%resref_index_source%\(\]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <WAV> (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
		END
//%~
		SET tp2_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//VVC patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "VVC V1.0")=1) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching VVC version 1.0 file %patch_name%...~

		//////////////////////////
		//0x8 animation BAM resref
		//////////////////////////
		READ_ASCII 0x8 "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x8 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x8 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x78 starting sound WAV resref
		////////////////////////////////
		READ_ASCII 0x78 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x78 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x80 duration sound WAV resref
		////////////////////////////////
		READ_ASCII 0x80 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x80 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x80 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		/////////////////////////////////
		//0x94 ending sound WAV resref(?)
		/////////////////////////////////
		READ_ASCII 0x94 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE 0x94 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x94 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		SET vvc_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//WED patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "WED V1.3")=1) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WED version 1.3 file %patch_name%...~

		//////////
		//Overlays
		//////////
		READ_LONG 0x8 "overlays_num"
		READ_LONG 0x10 "overlays_off"
		FOR ( cnt=0; cnt<"%overlays_num%"; cnt +=1) BEGIN

			//0x4 tileset TIS resref
			READ_ASCII ("%overlays_off%"+0xa*cnt+0x4) "resref_tis"
			FOR (i=1; i<="%resref_tis_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_tis_source%i%"
				SPRINT name_dest "resref_tis_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_tis%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%overlays_off%"+0xa*cnt+0x4) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x8 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		SET wed_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//WMP patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "WMAPV1.0")=1) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching worldmap version 1.0 file %patch_name%...~

		// possibility of more than one world map?
		//	READ_LONG 0x8 "mapentry_num"
		READ_LONG 0xc "mapentry_off"

		/////////////////////////////
		//0x0 map resource MOS resref
		/////////////////////////////
		READ_ASCII ("%mapentry_off%") "resref_mos"
		FOR (i=1; i<="%resref_mos_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_mos_source%i%"
			SPRINT name_dest "resref_mos_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_mos%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE ("%mapentry_off%") "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc -> 0x0 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////////
		//0x30 map icons BAM resref
		///////////////////////////
		READ_ASCII ("%mapentry_off%"+0x30) "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_ASCIIE ("%mapentry_off%"+0x30) "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc -> 0x30 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////
		//Map entry area entries
		////////////////////////
		READ_LONG ("%mapentry_off%"+0x20) "areaentry_num"
		READ_LONG ("%mapentry_off%"+0x24) "areaentry_off"
		FOR ( j=0; j<"%areaentry_num%";j=j+1) BEGIN

			//0x0 area short name (contains area numbers)
			READ_ASCII ("%areaentry_off%"+0xf0*j) "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%areaentry_off%"+0xf0*j) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x24 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x8 area content ARE resref
			READ_ASCII ("%areaentry_off%"+0xf0*j+0x8) "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%areaentry_off%"+0xf0*j+0x8) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x24 -> 0x8 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x10 area long name (contains area numbers)
			READ_ASCII ("%areaentry_off%"+0xf0*j+0x10) "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%areaentry_off%"+0xf0*j+0x10) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x24 -> 0x10 (%resref_index_source% => %resref_index_dest%)~
				END
			END		

			//0x48 loading screen MOS resref
			READ_ASCII ("%areaentry_off%"+0xf0*j+0x48) "resref_mos"
			FOR (i=1; i<="%resref_mos_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mos_source%i%"
				SPRINT name_dest "resref_mos_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_mos%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%areaentry_off%"+0xf0*j+0x48) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x24 -> 0x48 (%resref_index_source% => %resref_index_dest%)~
				END
			END	

		END

		//////////////////////
		//Map entry area links
		//////////////////////
		READ_LONG ("%mapentry_off%"+0x28) "arealink_off"
		READ_LONG ("%mapentry_off%"+0x2c) "arealink_num"

		FOR ( j=0; j<"%arealink_num%";j=j+1) BEGIN

			//0x4 entrance name (contains area numbers)
			READ_ASCII ("%arealink_off%"+0xd8*j+0x4) "resref_exit" (8)
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%arealink_off%"+0xd8*j+0x4) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x28 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%arealink_off%"+0xd8*j+0x4) "resref_exit" (6)
			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%arealink_off%"+0xd8*j+0x4) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x28 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%arealink_off%"+0xd8*j+0x4) "resref_exit" (7)
			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%arealink_off%"+0xd8*j+0x4) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x28 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%arealink_off%"+0xd8*j+0x4) "resref_exit" (5)
			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_ASCIIE ("%arealink_off%"+0xd8*j+0x4) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x28 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END	

			//0x2c random encounter ARE resref 1
			//0x34 random encounter ARE resref 2
			//0x3c random encounter ARE resref 3
			//0x44 random encounter ARE resref 4
			//0x4c random encounter ARE resref 5
			FOR (cntare=0; cntare<5; cntare=cntare+1) BEGIN
				READ_ASCII ("%arealink_off%"+0xd8*j+0x2c+0x8*cntare) "resref_are"
				FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_are_source%i%"
					SPRINT name_dest "resref_are_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_ASCIIE ("%arealink_off%"+0xd8*j+0x2c+0x8*cntare) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2c/0x34/0x3c/0x44/0x4c (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

		END

		SET wmp_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//0-byte files
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "Ignoring 0 byte file")=1) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% %filetype% %patch_name%...~

		SET ignore_check += 1
		SET checked = 1

	END

END
/////////////////////////////////////////////////////////////////////////////////////////////////////////

/*DEFINE_ACTION_MACRO ~full_patch~ BEGIN

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//Renaming of files
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	COPY + ~%patch_dir%/%patch_name%~ ~%patch_dir%/%patch_name%~
		SPRINT source "%SOURCE_FILE%"
		SPRINT source_dir "%SOURCE_DIRECTORY%"
		SPRINT target_dir "%DEST_DIRECTORY%"
		INNER_ACTION BEGIN
			COPY - ~Tempfile~ ~Tempfile~
				INSERT_BYTES 0x0 ("%file_length%" - 1)
				WRITE_ASCIIE 0x0 "%source%"

				FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_are_source%i%"
					SPRINT name_dest "resref_are_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.ARE\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(HT\.BMP\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(LM\.BMP\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(SR\.BMP\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.WED\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bam_source%i%"
					SPRINT name_dest "resref_bam_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.BAM\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bcs_source%i%"
					SPRINT name_dest "resref_bcs_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.BCS\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.BAF\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.CRE\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_dlg_source%i%"
					SPRINT name_dest "resref_dlg_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.D\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.DLG\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.ITM\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_mos_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_mos_source%i%"
					SPRINT name_dest "resref_mos_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.MOS\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_mve_source%i%"
					SPRINT name_dest "resref_mve_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.MVE\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.SPL\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_sto_source%i%"
					SPRINT name_dest "resref_sto_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.STO\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_tis_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_tis_source%i%"
					SPRINT name_dest "resref_tis_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.TIS\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.TIZ\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\(\.WAV\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <> (%resref_index_source% => %resref_index_dest%)~ END ~%resref_index_dest%\1~
				END

				//determine target file name
				SET bytes = 0
				FOR ( byteoff=0; byteoff<999; byteoff+=1) BEGIN
					READ_BYTE "%byteoff%" "detectbytes" ELSE 999
					PATCH_IF NOT ("%detectbytes%" = 999) BEGIN
						SET bytes = "%byteoff%" + 1
					END
					PATCH_IF ("%detectbytes%" = 999) BEGIN
						READ_ASCII 0x0 "target" ("%bytes%")
						SET byteoff = 999
					END
				END

				DELETE_BYTES 0x0 ("%bytes%" - 1)

				PATCH_IF (("%source%" STRING_COMPARE "%target%")!=0) BEGIN
					PATCH_IF ("%checked%" = 0) BEGIN
						PATCH_PRINT ~%cntcurrent%/%cntrow% Renaming %source% to %target%...~
					END ELSE BEGIN
						PATCH_PRINT ~Renaming %source% to %target%...~
					END
					INNER_ACTION BEGIN
						COPY + ~%source_dir%/%source%~ ~%target_dir%/%target%~
						APPEND ~Rename.txt~ ~%source_dir%/%source%~
					END
					SET ren_check += 1
					SET checked = 1
				END
			//BUT_ONLY
		END
	//BUT_ONLY
END*/

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO ~PCU_core_complete~ BEGIN

//COPY + ~override/Rename.txt~ ~override/Rename.txt~
//REPLACE_TEXTUALLY ~/~ ~\\~ //to make compatible with DOS commands

	/*PATCH_*/PRINT ~Conversion complete. Statistics:
ARE %are_check%
BAF %baf_check%
BCS %bcs_check%
CRE %cre_check%
D	%d_check%
DLG %dlg_check%
EFF %eff_check%
GAM %gam_check%
ITM %itm_check%
SPL %spl_check%
STO %sto_check%
TP* %tp2_check%
TRA %tra_check%
VVC %vvc_check%
WED %wed_check%
WMP %wmp_check%

%ignore_check% files ignored.
%ren_check% files renamed.~

END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_ARE_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Global("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Global (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalGT("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GlobalGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalLT("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GlobalLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalTimerExact("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GlobalTimerExact (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalTimerExpired("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GlobalTimerExpired (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalTimerNotExpired("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GlobalTimerNotExpired (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AreaCheck("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AreaCheck (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AreaCheckObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AreaCheckObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~

	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetGlobal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveArea("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LeaveArea (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IncrementGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: IncrementGlobal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetGlobalTimer("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetGlobalTimer (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddexperiencePartyGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AddexperiencePartyGlobal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RevealAreaOnMap("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: RevealAreaOnMap (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetMasterArea("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetMasterArea (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobal("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveGlobal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveBetweenAreas("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveBetweenAreas (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaMove("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EscapeAreaMove (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SaveLocation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SaveLocation (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SaveObjectLocation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SaveObjectLocation (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HideAreaOnMap("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HideAreaOnMap (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CopyGroundPilesTo("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CopyGroundPilesTo (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RealSetGlobalTimer("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: RealSetGlobalTimer (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaObjectMove("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EscapeAreaObjectMove (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToSavedLocationn("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveToSavedLocationn (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToSavedLocation("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveToSavedLocation (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DeathMatchPositionGlobal("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DeathMatchPositionGlobal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DeathMatchPositionArea("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DeathMatchPositionArea (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DeathMatchPositionLocal("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DeathMatchPositionLocal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalsTo("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveGlobalsTo (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalsTo("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveGlobalsTo (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetTokenGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetTokenGlobal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetEncounterProbability("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetEncounterProbability (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetEncounterProbability("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetEncounterProbability (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAEntry("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LeaveAreaLUAEntry (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAPanicEntry("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LeaveAreaLUAPanicEntry (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureAtLocation("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureAtLocation (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateItemGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateItemGlobal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUA("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LeaveAreaLUA (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAPanic("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LeaveAreaLUAPanic (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveBetweenAreasEffect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveBetweenAreasEffect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BAM_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateVisualEffect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateVisualEffect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateVisualEffectObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateVisualEffectObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectEffect("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectEffect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopyEffect("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectCopyEffect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUA("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LeaveAreaLUA (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAPanic("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LeaveAreaLUAPanic (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveBetweenAreasEffect("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveBetweenAreasEffect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BCS_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAIScript("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeAIScript (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartCutscene("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartCutscene (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BMP_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StaticPalette("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StaticPalette (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_CRE_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreature("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreature (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAnimation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeAnimation (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAnimationNoEffect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeAnimationNoEffect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureImpassable("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureImpassable (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureDoor("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureDoor (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectDoor("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectDoor (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectOffScreen("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectOffScreen (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureOffScreen("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureOffScreen (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopy("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectCopy (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectOffset("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectOffset (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureCopyPoint("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureCopyPoint (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureImpassableAllowOverlap("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureImpassableAllowOverlap (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureAtLocation("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureAtLocation (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectEffect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectEffect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopyEffect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectCopyEffect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_DV_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ActionOverride("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ActionOverride (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Attack("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Attack (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(BackStab("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: BackStab (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Dialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Dialogue (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Dialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Dialog (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GetItem("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GetItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItem("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GiveItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveOrder("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GiveOrder (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LayHands("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LayHands (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveToObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickPockets("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PickPockets (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RunAwayFrom("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: RunAwayFrom (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Spell("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Spell (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItem("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: UseItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItemSlot("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: UseItemSlot (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Formation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Formation (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveViewObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveViewObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ClickLButtonObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ClickLButtonObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ClickRButtonObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ClickRButtonObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DoubleClickLButtonObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DoubleClickLButtonObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DoubleClickRButtonObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DoubleClickRButtonObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SendTrigger("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SendTrigger (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CallLightning("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CallLightning (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ProtectObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ProtectObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GroupAttack("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GroupAttack (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackNoSound("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AttackNoSound (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleSet("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoraleSet (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleInc("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoraleInc (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleDec("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoraleDec (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackOneRound("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AttackOneRound (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpell("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ForceSpell (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Deactivate("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Deactivate (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Activate("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Activate (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CutSceneId("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CutSceneId (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Kill("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Kill (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(VerbalConstant("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: VerbalConstant (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ClearActions("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ClearActions (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackReevaluate("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AttackReevaluate (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialog("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialog (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogue("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogue (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PlayerDialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PlayerDialog (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PlayerDialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PlayerDialogue (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItemCreate("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GiveItemCreate (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartStore("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartStore (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayString("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DisplayString (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAIType("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeAIType (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeEnemyAlly("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeEnemyAlly (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeGeneral("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeGeneral (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeRace("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeRace (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeClass("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeClass (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeSpecifics("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeSpecifics (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeGender("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeGender (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAlignment("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ChangeAlignment (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplySpell("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ApplySpell (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Interact("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Interact (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObjectFollow("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveToObjectFollow (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpell("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReallyForceSpell (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RunAwayFromNoInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: RunAwayFromNoInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellNoDec("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellNoDec (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveGlobal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueNoSet("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogueNoSet (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoSet("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogNoSet (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObjectNoInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveToObjectNoInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FollowObjectFormation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: FollowObjectFormation (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FaceObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: FaceObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObjectOffScreen("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveGlobalObjectOffScreen (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObjectOffScreen("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveGlobalObjectOffScreen (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellDead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReallyForceSpellDead (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Calm("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Calm (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SaveObjectLocation("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SaveObjectLocation (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetTokenObject("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetTokenObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetGabber("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetGabber (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopy("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectCopy (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectOffset("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectOffset (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddXPObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AddXPObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringNoName("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DisplayStringNoName (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DialogueForceInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DialogueForceInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DialogForceInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DialogForceInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogInterrupt("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueInterrupt("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogueInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueNoSetInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogueNoSetInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoSetInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogNoSetInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringHead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DisplayStringHead (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PolymorphCopy("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PolymorphCopy (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(VerbalConstantHead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: VerbalConstantHead (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateVisualEffectObject("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateVisualEffectObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectEffect("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectEffect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopyEffect("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureObjectCopyEffect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EscapeAreaObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaObjectMove("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EscapeAreaObjectMove (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakeItemReplace("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: TakeItemReplace (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PolymorphCopyBase("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PolymorphCopyBase (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveGlobalObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObject("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoveGlobalObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverride("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogOverride (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverrideInterrupt("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogOverrideInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureCopyPoint("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateCreatureCopyPoint (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplyDamage("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ApplyDamage (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplyDamagePercent("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ApplyDamagePercent (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringWait("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DisplayStringWait (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRange("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ForceSpellRange (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetPlayerSound("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetPlayerSound (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FakeEffectExpiryCheck("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: FakeEffectExpiryCheck (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoName("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogNoName (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ForceSpellRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplySpellRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ApplySpellRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReallyForceSpellRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellNoDecRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellNoDecRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellDeadRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReallyForceSpellDeadRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRangeRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ForceSpellRangeRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringHeadDead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DisplayStringHeadDead (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringNoNameHead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DisplayStringNoNameHead (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~

	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackedBy("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AttackedBy (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Help("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Help (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Joins("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Joins (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Leaves("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Leaves (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReceivedOrder("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReceivedOrder (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Said("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Said (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TurnedBy("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: TurnedBy (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Alignment("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Alignment (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Allegiance("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Allegiance (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Class("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Class (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Exists("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Exists (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(General("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: General (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HP("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HP (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HPGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HPLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LOS("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LOS (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Morale("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Morale (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoraleGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: MoraleLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Race("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Race (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Range("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Range (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Reputation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Reputation (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReputationGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReputationGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReputationLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReputationLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(See("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: See (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Specifics("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Specifics (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HitBy("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HitBy (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TargetUnreachable("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: TargetUnreachable (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreature("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumCreature (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumCreatureLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumCreatureGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPPercent("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HPPercent (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPPercentLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HPPercentLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPPercentGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HPPercentGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Heard("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Heard (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StateCheck("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StateCheck (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NotStateCheck("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NotStateCheck (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Reaction("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Reaction (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReactionGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReactionGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReactionLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReactionLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InParty("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InParty (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CheckStat("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CheckStat (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CheckStatGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CheckStatGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CheckStatLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CheckStatLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Died("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Died (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Killed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Killed (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Entered("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Entered (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Gender("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Gender (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Dead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Dead (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Opened("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Opened (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Closed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Closed (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Detected("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Detected (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Reset("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Reset (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Disarmed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Disarmed (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Unlocked("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Unlocked (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumTimesInteracted("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumTimesInteracted (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumTimesInteractedGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumTimesInteractedGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumTimesInteractedLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumTimesInteractedLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickPocketFailed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PickPocketFailed (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StealFailed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StealFailed (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisarmFailed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DisarmFailed (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickLockFailed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PickLockFailed (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItem("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HasItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InteractingWith("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InteractingWith (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InWeaponRange("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InWeaponRange (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasWeaponEquiped("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HasWeaponEquiped (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Happiness("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Happiness (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HappinessGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HappinessGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HappinessLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HappinessLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Clicked("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Clicked (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumDead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumDead (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumDeadGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumDeadGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumDeadLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumDeadLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Detect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Detect (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItems("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumItems (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsGT("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumItemsGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsLT("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumItemsLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsOverMe("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: IsOverMe (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquiped("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HasItemEquiped (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureVsParty("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumCreatureVsParty (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureVsPartyLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumCreatureVsPartyLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureVsPartyGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumCreatureVsPartyGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PartyMemberDied("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PartyMemberDied (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InPartySlot("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InPartySlot (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCast("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellCast (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InLine("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InLine (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InLine("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InLine (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Level("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Level (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LevelGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LevelGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LevelLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LevelLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Summoned("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Summoned (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ObjectActionListEmpty("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ObjectActionListEmpty (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(OnScreen("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: OnScreen (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InActiveArea("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InActiveArea (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastOnMe("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellCastOnMe (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Name("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Name (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Name("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Name (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastPriest("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellCastPriest (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastInnate("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellCastInnate (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsValidForPartyDialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: IsValidForPartyDialog (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IfValidForPartyDialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: IfValidForPartyDialog (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsValidForPartyDialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: IsValidForPartyDialogue (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IfValidForPartyDialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: IfValidForPartyDialogue (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasBounceEffects("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HasBounceEffects (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasImmunityEffects("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HasImmunityEffects (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemSlot("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HasItemSlot (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PersonalSpaceDistance("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PersonalSpaceDistance (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InMyGroup("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InMyGroup (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Kit("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Kit (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsGabber("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: IsGabber (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsActive("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: IsActive (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CharName("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CharName (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CharName("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CharName (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FallenRanger("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: FallenRanger (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FallenPaladin("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: FallenPaladin (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InventoryFull("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InventoryFull (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquipedReal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HasItemEquipedReal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(XP("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: XP (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(XPGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: XPGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(XPLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: XPLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InMyArea("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InMyArea (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InPartyAllowDead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: InPartyAllowDead (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AreaCheckObject("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AreaCheckObject (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(WalkedToTrigger("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: WalkedToTrigger (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_DLG_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialog (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogue (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetDialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetDialog (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetDialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SetDialogue (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogueInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverride("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogOverride (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverrideInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogOverrideInterrupt (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoName("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartDialogNoName (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_ITM_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Acquired("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Acquired (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Unusable("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Unusable (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PartyHasItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PartyHasItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HasItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Contains("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Contains (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItems("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumItems (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumItemsGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumItemsLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsParty("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumItemsParty (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsPartyGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumItemsPartyGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsPartyLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: NumItemsPartyLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquiped("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HasItemEquiped (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PartyHasItemIdentified("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PartyHasItemIdentified (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquipedReal("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HasItemEquipedReal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~

	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DropItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DropItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EquipItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EquipItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GetItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GetItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GiveItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: UseItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItemSlot("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: UseItemSlot (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItemPoint("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: UseItemPoint (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: TakePartyItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItemCreate("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GiveItemCreate (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DestroyItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DestroyItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItemAll("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: TakePartyItemAll (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItemRange("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: TakePartyItemRange (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItemNum("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: TakePartyItemNum (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickUpItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PickUpItem (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakeItemReplace("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: TakeItemReplace (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakeItemReplace("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: TakeItemReplace (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringHeadOwner("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: DisplayStringHeadOwner (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateItemGlobal("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CreateItemGlobal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_SPL_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HaveSpellRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: HaveSpellRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~

	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddSpecialAbility("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AddSpecialAbility (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellPointRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellPointRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ForceSpellRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellPointRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ForceSpellPointRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplySpellRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ApplySpellRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReallyForceSpellRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellNoDecRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellNoDecRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellPointNoDecRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SpellPointNoDecRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellDeadRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReallyForceSpellDeadRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRangeRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ForceSpellRangeRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellPointRangeRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ForceSpellPointRangeRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellPointRES("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ReallyForceSpellPointRES (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_STO_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartStore("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartStore (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_WAV_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PlaySound("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: PlaySound (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_DLG_replace~ BEGIN
	//ResRefs bounded by ~ or "
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(BEGIN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: BEGIN (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: APPEND (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND_EARLY[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: APPEND_EARLY (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_TOP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EXTEND_TOP (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_BOTTOM[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EXTEND_BOTTOM (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_STATE_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ADD_STATE_TRIGGER (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ADD_TRANS_TRIGGER (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_ACTION[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ADD_TRANS_ACTION (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(SET_WEIGHT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SET_WEIGHT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_SAY[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_SAY (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_STATE_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_STATE_TRIGGER (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_TRIGGER_TEXT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_TRIGGER_TEXT_REGEXP (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_ACTION_TEXT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_ACTION_TEXT_REGEXP (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_ACTION_TEXT_PROCESS (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_ACTION_TEXT_PROCESS_REGEXP (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: INTERJECT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: INTERJECT_COPY_TRANS (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: INTERJECT_COPY_TRANS (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: I_C_T (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: I_C_T (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(END[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: END (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTERN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EXTERN (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(COPY_TRANS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: COPY_TRANS (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPENDI[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: APPENDI (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(==[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: == (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CHAIN (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(THEN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: THEN (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	/* THEN correction is used for the beginning CHAIN */
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CHAIN (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	/* exitFilename for CHAIN2 cannot be corrected using this method */

	//ResRefs bounded by nothing
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(BEGIN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: BEGIN (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: APPEND (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND_EARLY[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: APPEND_EARLY (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_TOP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EXTEND_TOP (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_BOTTOM[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EXTEND_BOTTOM (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_STATE_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ADD_STATE_TRIGGER (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ADD_TRANS_TRIGGER (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_ACTION[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: ADD_TRANS_ACTION (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(SET_WEIGHT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SET_WEIGHT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_SAY[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_SAY (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_STATE_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_STATE_TRIGGER (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_TRIGGER_TEXT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_TRIGGER_TEXT_REGEXP (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_ACTION_TEXT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_ACTION_TEXT_REGEXP (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_ACTION_TEXT_PROCESS (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: REPLACE_ACTION_TEXT_PROCESS_REGEXP (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: INTERJECT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: INTERJECT_COPY_TRANS (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: INTERJECT_COPY_TRANS (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: I_C_T (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: I_C_T (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(END[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: END (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTERN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: EXTERN (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(COPY_TRANS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: COPY_TRANS (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPENDI[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: APPENDI (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(==[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: == (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CHAIN (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(THEN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: THEN (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	/* THEN correction is used for the beginning CHAIN */
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: CHAIN (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	/* exitFilename for CHAIN2 cannot be corrected using this method */
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_MVE_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartMovie("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: StartMovie (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_2DA_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IncrementChapter("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: IncrementChapter (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TextScreen("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: TextScreen (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_VAR_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Global("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: Global (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~//also catches SetGlobal and SetTokenGlobal
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GlobalGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GlobalLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalsEqual(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GlobalsEqual (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalsGT(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GlobalsGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalsLT(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: GlobalsLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LocalsEqual(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LocalsEqual (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LocalsGT(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LocalsGT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LocalsLT(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: LocalsLT (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IncrementGlobal("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: IncrementGlobal (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddGlobals(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: AddGlobals (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SG("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: SG (%resref_index_source% => %resref_index_dest%)~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_traifyDLG_replace~ BEGIN
	REPLACE_TEXTUALLY EXACT_MATCH ~SAY #~ ~SAY @~
	REPLACE_TEXTUALLY EXACT_MATCH ~REPLY #~ ~REPLY @~
	REPLACE_TEXTUALLY EXACT_MATCH ~JOURNAL #~ ~JOURNAL @~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_traifyBCS_replace~ BEGIN
	REPLACE_TEXTUALLY ~SetQuestDone(~ ~SetQuestDone(@~
	REPLACE_TEXTUALLY ~AddJournalEntry(~ ~AddJournalEntry(@~
	REPLACE_TEXTUALLY ~EraseJournalEntry(~ ~EraseJournalEntry(@~
	REPLACE_TEXTUALLY ~SetName(~ ~SetName(@~
	REPLACE_TEXTUALLY ~DisplayStringPoint(~ ~DisplayStringPoint(@~
	REPLACE_TEXTUALLY ~\(DisplayString(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(SetToken(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringNoName(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHeadOwner(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringWait(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(SetPlayerSound([^,]*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(RemoveMapNote(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHeadDead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringNoNameHead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~@-1~ ~-1~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_DLGext_replace~ BEGIN
	REPLACE_TEXTUALLY ~~~~~\(EXTERN[ ]+[~"]+\)%resref_index_source%\([~"]+[ ]\)~~~~~ ~\1%resref_index_source%\2s~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////
//END Macros
/////////////////////////////////////////////////////////////////////////////////////////////////////////
