/////////////////////////////////////////////////////////////////////////////////////////////////////////
//BEGIN Macros
/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO bash_log BEGIN //whenever this macro is invoked, it moves the contents of EET/temp/bash.debug to the real log.
	LOCAL_SET ln=0
	LOCAL_SPRINT log ~~
	ACTION_IF FILE_EXISTS ~EET/temp/bash.debug~ AND NOT FILE_SIZE ~EET/temp/bash.debug~ 0 BEGIN //don't do this if no log is available now.
		COPY + ~EET/temp/bash.debug~ ~EET/temp/bash.debug~
			ln=BUFFER_LENGTH
			READ_ASCII 0 log (ln)
			DELETE_BYTES 0 ln
			PATCH_LOG ~%log%~
			SPRINT log ~~
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO EET_WRITE_SSET BEGIN //Workaround for regexp glitch in Gort's WRITE_SOUNDSET
	COPY_EXISTING ~%npc%~ ~override~
		PATCH_IF SOURCE_SIZE > 0x2d3 BEGIN
			FOR (j1 = 0; j1 < 100; j1 += 1) BEGIN
				READ_LONG (0xa4 + j1 * 4) srf
				nsrf = EVALUATE_BUFFER ~%soundset%_%j1%~
				PATCH_IF (overwrite = 0) AND (srf = (0 - 1)) BEGIN //Soft writing
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END ELSE PATCH_IF (overwrite = 1) AND NOT (nsrf = (0 - 1)) BEGIN //Forced writing
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END ELSE PATCH_IF overwrite = 2 BEGIN //Overwrite regardless
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END
			END
		END
	BUT_ONLY
END
/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO read_trans_array_from_2da BEGIN
	LOCAL_SPRINT fl#r2en_trans ""
	LOCAL_SET i = 0
	LOCAL_SPRINT id ""
	LOCAL_SPRINT string ""

	READ_2DA_ENTRIES_NOW fl#r2en_trans 3
	FOR (i = 0; i < fl#r2en_trans; i = i + 1) BEGIN
		READ_2DA_ENTRY_FORMER fl#r2en_trans i 0 id
		READ_2DA_ENTRY_FORMER fl#r2en_trans i 2 string
		TO_UPPER id
		PATCH_IF "%id%" STRING_MATCHES_REGEXP "^@" = 0 BEGIN
			INNER_PATCH_SAVE string "%string%" BEGIN
				REPLACE_TEXTUALLY "@" ""
				REPLACE_TEXTUALLY "###" " "
				REPLACE_TEXTUALLY ~"~ ~~ //"
				REPLACE_TEXTUALLY "~" ""
			END
			SPRINT $TRA("%id%") "%string%"
			PATCH_PRINT ~variable set: TRA_%id% = %string%~
		END
	END
END
//OUTER_SPRINT $TRA("%id%") "%string%"
//OUTER_SPRINT value $TRA("%id%")

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO ~PCU_core_init~ BEGIN

	<<<<<<<< Tempfile
a>>>>>>>>

	//FOR variables
	OUTER_SET count = 0
	OUTER_SET cntrow = 0
	OUTER_SET cnt = 0
	OUTER_SET cntare = 0
	OUTER_SET cntcre = 0
	OUTER_SET cntwav = 0

	//reporting variables
	OUTER_SET are_check = 0
	OUTER_SET baf_check = 0
	OUTER_SET bcs_check = 0
	OUTER_SET cre_check = 0
	OUTER_SET d_check = 0
	OUTER_SET dlg_check = 0
	OUTER_SET eff_check = 0
	OUTER_SET gam_check = 0
	OUTER_SET itm_check = 0
	OUTER_SET spl_check = 0
	OUTER_SET sto_check = 0
	OUTER_SET tra_check = 0
	OUTER_SET tp2_check = 0
	OUTER_SET vvc_check = 0
	OUTER_SET wed_check = 0
	OUTER_SET wmp_check = 0
	OUTER_SET ignore_check = 0
	OUTER_SET ren_check = 0

	//parsing variables
	//OUTER_SET create_directory = 0
	//OUTER_SET first_directory = 0
	//OUTER_SPRINT prev_directory_name ""

END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~PCU_core_init2~ BEGIN
	SET detected = 0
	SET byteoff = 0
	SET detectbytes = 0
	READ_2DA_ENTRY "%count%" 0 1 "patch_name"
	INNER_PATCH "%patch_name%" BEGIN
		REPLACE_TEXTUALLY ~\?~ ~ ~

		//determine the full path of the resource
		SET bytes = 0
		FOR ( byteoff=0; byteoff<999; byteoff+=1) BEGIN
			READ_BYTE "%byteoff%" "detectbytes" ELSE 999
			PATCH_IF NOT ("%detectbytes%" = 999) BEGIN
				SET bytes = "%byteoff%" + 1
			END
			PATCH_IF ("%detectbytes%" = 999) BEGIN
				READ_ASCII 0x0 "patch_name" ("%bytes%")
				SET byteoff = 999
			END
		END

		//determine the extension on the resource
		SET bytes = 0
		FOR ( byteoff=0; byteoff<999; byteoff+=1) BEGIN
			READ_BYTE "%byteoff%" "detectbytes" ELSE 999
			PATCH_IF NOT ("%detectbytes%" = 999) BEGIN
				SET bytes = "%byteoff%" + 1
			END
			PATCH_IF ("%detectbytes%" = 999) BEGIN
				SPRINT "extension_name" ""
				FOR ( byteoff="%bytes%";byteoff>0; byteoff="%byteoff%"-1) BEGIN
					READ_BYTE ("%byteoff%" - 1) "character"
					PATCH_IF ( "%character%" = 0x2e) BEGIN //checks for the '.' character
						READ_ASCII (("%byteoff%"-1)+1) "extension_name" ("%bytes%" - "%byteoff%")
						SET byteoff = 0
					END
				END
				SET byteoff = 999
			END
		END

		//determine the length of the file name
		SET bytes = 0
		SET file_length = 0
		FOR ( byteoff=0; byteoff<999; byteoff+=1) BEGIN
			READ_BYTE "%byteoff%" "detectbytes" ELSE 999
			PATCH_IF NOT ("%detectbytes%" = 999) BEGIN
				SET bytes = "%byteoff%" + 1
			END
			PATCH_IF ("%detectbytes%" = 999) BEGIN
				FOR ( byteoff="%bytes%";byteoff>0; byteoff="%byteoff%"-1) BEGIN
					READ_BYTE ("%byteoff%" - 1) "character"
					PATCH_IF ( "%character%" = 0x2f) BEGIN //checks for the '/' character
						SET file_length = ("%bytes%" - "%byteoff%")
						SET byteoff = 0
					END
				END
				PATCH_IF ("%file_length%"=0) BEGIN
					SET file_length = "%bytes%"
				END
				SET byteoff = 999
			END
		END

		//determine the directory path of the resource
		SET bytes = 0
		FOR ( byteoff=0; byteoff<999; byteoff+=1) BEGIN
			READ_BYTE "%byteoff%" "detectbytes" ELSE 999
			PATCH_IF ("%detectbytes%" = 0x2f) BEGIN //checks for the '/' character
				SET bytes = ("%byteoff%" + 1) - 1
			END
			PATCH_IF ("%detectbytes%" = 999) BEGIN
				READ_ASCII 0x0 "directory_name" ("%bytes%")
				SPRINT "directory_name" "%directory_name%" //MKDIR doesn't like ascString so convert to String
				SET directory_length = "%bytes%"
				SET byteoff = 999
			END
		END

		//determine if detected directory path is the same as the previous entry
		/*PATCH_IF ( "%first_directory%" = 1 ) AND (( "%prev_directory_name%" STRING_EQUAL_CASE "%directory_name%" ) = 1) BEGIN
			SET create_directory = 0
		END
		ELSE BEGIN
			SET create_directory = 1
		END
		SET first_directory = 1*/

	END

END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~PCU_core_patch~ BEGIN

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//GAM patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.GAM$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching gam version 1.1 file %patch_name%...~

		///////////////////////
		//NPCS
		///////////////////////
		READ_LONG 0x30 npcs_off
		READ_LONG 0x34 npcs_num
		SET "idx" = 0
		WHILE ("%idx%" < "%npcs_num%") BEGIN

			///////////////////////
			//0xc CRE resref
			///////////////////////
			READ_ASCII (0xc + npcs_off + (idx * 0x160)) "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII (0xc + npcs_off + (idx * 0x160)) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x30 -> 0xc (%resref_index_source% => %resref_index_dest%)~
				END
			END

			///////////////////////
			//0x18 ARE resref
			///////////////////////
			READ_ASCII (0x18 + npcs_off + (idx * 0x160)) "resref_are"
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII (0x18 + npcs_off + (idx * 0x160)) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x30 -> 0x18 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			SET "idx" = "%idx%" + 1
		
		END
		
		SET gam_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//ARE patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "AREAV1.0")=1) AND (SOURCE_SIZE > 0x11b) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching area version 1.0 file %patch_name%...~

		///////////////////////
		//0x8 WED resref
		///////////////////////
		READ_ASCII 0x8 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x8 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x8 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////
		//0x18 north ARE resref
		///////////////////////
		READ_ASCII 0x18 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x18 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x18 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////
		//0x24 east ARE resref
		///////////////////////
		READ_ASCII 0x24 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x24 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x24 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////
		//0x30 south ARE resref
		///////////////////////
		READ_ASCII 0x30 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x30 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////
		//0x3c west ARE resref
		///////////////////////
		READ_ASCII 0x3c "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x3c "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x3c (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////
		//0x94 BCS resref
		///////////////////////
		READ_ASCII 0x94 "resref_bcs"
		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x94 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x94 (%resref_index_source% => %resref_index_dest%)~
			END
		END
		READ_ASCII 0x94 "resref_bcs" (1)
		PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "_")=1) BEGIN
			DELETE_BYTES 0x94 0x1
			INSERT_BYTES (0x94+0x7) 0x1
		END

		///////////////////////
		//Actors
		///////////////////////
		READ_LONG 0x54 "actors_off"
		READ_SHORT 0x58 "actors_cnt"
		FOR (cnt=0; cnt<"%actors_cnt%"; cnt=cnt+1) BEGIN

			//0x48 area-specific creature DLG resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x48) "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%actors_off%"+0x110*cnt+0x48) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x48 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlgext_source%i%"
				SPRINT name_dest "resref_dlgext_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%actors_off%"+0x110*cnt+0x48) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x48 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x50 area-specific creature override BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x50) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%actors_off%"+0x110*cnt+0x50) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x50 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x58 area-specific creature class BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x58) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%actors_off%"+0x110*cnt+0x58) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x58 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x60 area-specific creature race BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x60) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%actors_off%"+0x110*cnt+0x60) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x60 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x68 area-specific creature general BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x68) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%actors_off%"+0x110*cnt+0x68) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x68 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x70 area-specific creature default BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x70) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%actors_off%"+0x110*cnt+0x70) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x70 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x78 area-specific creature specific BCS resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x78) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%actors_off%"+0x110*cnt+0x78) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x80 CRE resref
			READ_ASCII ("%actors_off%"+0x110*cnt+0x80) "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%actors_off%"+0x110*cnt+0x80) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 -> 0x80 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		///////////////////////////////////////
		//Info points, trigger points, and exit
		///////////////////////////////////////
		READ_LONG 0x5c "info_off"
		READ_SHORT 0x5a "info_cnt"
		FOR (cnt=0; cnt<"%info_cnt%"; cnt=cnt+1) BEGIN

			//0x0 trigger name (may contains area numbers for doors)
			READ_ASCII ("%info_off%"+0xc4*cnt) "resref_door" (8)
			FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%info_off%"+0xc4*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%info_off%"+0xc4*cnt) "resref_door" (6)
			FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%info_off%"+0xc4*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%info_off%"+0xc4*cnt) "resref_door" (7)
			FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%info_off%"+0xc4*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%info_off%"+0xc4*cnt) "resref_door" (5)
			FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%info_off%"+0xc4*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x38 destination ARE resref
			READ_ASCII ("%info_off%"+0xc4*cnt+0x38) "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%info_off%"+0xc4*cnt+0x38) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x38 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x7c region BCS resref
			READ_ASCII ("%info_off%"+0xc4*cnt+0x7c) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%info_off%"+0xc4*cnt+0x7c) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0x7c (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0xbc trigger DLG resref for prox triggers
			READ_ASCII ("%info_off%"+0xc4*cnt+0xbc) "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%info_off%"+0xc4*cnt+0xbc) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0xbc (%resref_index_source% => %resref_index_dest%)~
				END
			END
			FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlgext_source%i%"
				SPRINT name_dest "resref_dlgext_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%info_off%"+0xc4*cnt+0xbc) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x5c -> 0xbc (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Entrances
		//////////////
		READ_LONG 0x68 "entry_off"
		READ_SHORT 0x6c "entry_cnt"
		FOR (cnt=0; cnt<"%entry_cnt%"; cnt=cnt+1) BEGIN

			//0x0 entrance name (contains area numbers)
			READ_ASCII ("%entry_off%"+0x68*cnt) "resref_exit" (8)
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%entry_off%"+0x68*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x68 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%entry_off%"+0x68*cnt) "resref_exit" (6)
			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%entry_off%"+0x68*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x68 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%entry_off%"+0x68*cnt) "resref_exit" (7)
			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%entry_off%"+0x68*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x68 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%entry_off%"+0x68*cnt) "resref_exit" (5)
			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%entry_off%"+0x68*cnt) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x68 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Spawn points
		//////////////
		READ_LONG 0x60 "spawn_off"
		READ_SHORT 0x64 "spawn_cnt"
		FOR (cnt=0; cnt<"%spawn_cnt%"; cnt=cnt+1) BEGIN

			//0x24 spawn CRE resref 1
			//0x2c spawn CRE resref 2
			//0x34 spawn CRE resref 3
			//0x3c spawn CRE resref 4
			//0x44 spawn CRE resref 5
			//0x4c spawn CRE resref 6
			//0x54 spawn CRE resref 7
			//0x5c spawn CRE resref 8
			//0x64 spawn CRE resref 9
			//0x6c spawn CRE resref 10
			FOR (cntcre=0; cntcre<10; cntcre=cntcre+1) BEGIN
				READ_ASCII ("%spawn_off%"+0xc8*cnt+0x24+0x8*cntcre) "resref_cre"
				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%spawn_off%"+0xc8*cnt+0x24+0x8*cntcre) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x60 -> 0x24-0x6c (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

		END

		////////////
		//Containers
		////////////
		READ_LONG 0x70 "contain_off"
		READ_SHORT 0x74 "contain_cnt"
		FOR (cnt=0; cnt<"%contain_cnt%"; cnt=cnt+1) BEGIN

			//0x48 trap BCS resref
			READ_ASCII ("%contain_off%"+0xc0*cnt+0x48) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%contain_off%"+0xc0*cnt+0x48) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x70 -> 0x48 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%contain_off%"+0xc4*cnt+0x48) "resref_bcs" (1)
			PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "_")=1) BEGIN
				DELETE_BYTES ("%contain_off%"+0xc0*cnt+0x48) 0x1
				INSERT_BYTES ("%contain_off%"+0xc0*cnt+0x48+0x7) 0x1
			END

			//0x58 creature CRE resref
			READ_ASCII ("%contain_off%"+0xc0*cnt+0x58) "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%contain_off%"+0xc0*cnt+0x58) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x70 -> 0x58 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x78 key ITM resref
			READ_ASCII ("%contain_off%"+0xc0*cnt+0x78) "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%contain_off%"+0xc0*cnt+0x78) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x70 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%contain_off%"+0xc4*cnt+0x78) "resref_itm" (1)
			PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "_")=1) BEGIN
				DELETE_BYTES ("%contain_off%"+0xc0*cnt+0x78) 0x1
				INSERT_BYTES ("%contain_off%"+0xc0*cnt+0x78+0x7) 0x1
			END

		END

		/////////////////
		//Container Items
		/////////////////
		READ_LONG 0x78 "citem_off"
		READ_SHORT 0x76 "citem_cnt"
		FOR (cnt=0; cnt<"%citem_cnt%"; cnt=cnt+1) BEGIN

			//0x0 ITM resref
			READ_ASCII ("%citem_off%"+0x14*cnt) "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%citem_off%"+0x14*cnt) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x78 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////
		//Ambients
		//////////
		READ_LONG 0x84 "ambient_off"
		READ_SHORT 0x82 "ambient_cnt"
		FOR (cnt=0; cnt<"%ambient_cnt%"; cnt=cnt+1) BEGIN

			//0x30 ambient WAV resref 1
			//0x38 ambient WAV resref 2
			//0x40 ambient WAV resref 3
			//0x48 ambient WAV resref 4
			//0x50 ambient WAV resref 5
			//0x58 ambient WAV resref 6
			//0x60 ambient WAV resref 7
			//0x68 ambient WAV resref 8
			//0x70 ambient WAV resref 9
			//0x78 ambient WAV resref 10
			FOR (cntwav=0; cntwav<10; cntwav=cntwav+1) BEGIN
				READ_ASCII ("%ambient_off%"+0xd4*cnt+0x30+0x8*cntwav) "resref_wav"
				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%ambient_off%"+0xd4*cnt+0x30+0x8*cntwav) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x84 -> 0x30-0x78 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

		END

		///////
		//Doors
		///////
		READ_LONG 0xa8 "door_off"
		READ_SHORT 0xa4 "door_cnt"
		FOR (cnt=0; cnt<"%door_cnt%"; cnt=cnt+1) BEGIN

			//0x58 door open WAV resref
			READ_ASCII ("%door_off%"+0xc8*cnt+0x58) "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%door_off%"+0xc8*cnt+0x58) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0x58 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x60 door close WAV resref
			READ_ASCII ("%door_off%"+0xc8*cnt+0x60) "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%door_off%"+0xc8*cnt+0x60) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0x60 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x78 key ITM resref
			READ_ASCII ("%door_off%"+0xc8*cnt+0x78) "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%door_off%"+0xc8*cnt+0x78) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x80 open BCS resref
			READ_ASCII ("%door_off%"+0xc8*cnt+0x80) "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%door_off%"+0xc8*cnt+0x80) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0x80 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0xb8 open DLG resref
			READ_ASCII ("%door_off%"+0xc8*cnt+0xb8) "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%door_off%"+0xc8*cnt+0xb8) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0xb8 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlgext_source%i%"
				SPRINT name_dest "resref_dlgext_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%door_off%"+0xc8*cnt+0xb8) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xa8 -> 0xb8 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		////////////
		//Animations
		////////////
		READ_LONG 0xb0 "anim_off"
		READ_SHORT 0xac "anim_cnt"
		FOR (cnt=0; cnt<"%anim_cnt%"; cnt=cnt+1) BEGIN


			//0x28 BAM resref
			READ_ASCII ("%anim_off%"+0x4c*cnt+0x28) "resref_bam"
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%anim_off%"+0x4c*cnt+0x28) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xb0 -> 0x28 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		///////
		//Songs
		///////
		READ_LONG 0xbc "song_off"

		//0x0 area day song dword
		READ_LONG ("%song_off%"+0x00) "dword_mus"
		FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
			SPRINT name_source "dword_mus_source%i%"
			SPRINT name_dest "dword_mus_dest%i%"
			SPRINT dword_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT dword_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
				WRITE_SHORT ("%song_off%"+0x00) "%dword_index_dest%"
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x0 (%dword_index_source% => %dword_index_dest%)~
			END
		END

		//0x04 area night song dword
		READ_LONG ("%song_off%"+0x04) "dword_mus"
		FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
			SPRINT name_source "dword_mus_source%i%"
			SPRINT name_dest "dword_mus_dest%i%"
			SPRINT dword_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT dword_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
				WRITE_SHORT ("%song_off%"+0x04) "%dword_index_dest%"
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x04 (%dword_index_source% => %dword_index_dest%)~
			END
		END

		//0x08 area win song dword
		READ_LONG ("%song_off%"+0x08) "dword_mus"
		FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
			SPRINT name_source "dword_mus_source%i%"
			SPRINT name_dest "dword_mus_dest%i%"
			SPRINT dword_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT dword_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
				WRITE_SHORT ("%song_off%"+0x08) "%dword_index_dest%"
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x08 (%dword_index_source% => %dword_index_dest%)~
			END
		END

		//0x0c area battle song dword
		READ_LONG ("%song_off%"+0x0c) "dword_mus"
		FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
			SPRINT name_source "dword_mus_source%i%"
			SPRINT name_dest "dword_mus_dest%i%"
			SPRINT dword_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT dword_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
				WRITE_SHORT ("%song_off%"+0x0c) "%dword_index_dest%"
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x0c (%dword_index_source% => %dword_index_dest%)~
			END
		END

		//0x10 area lose song dword
		READ_LONG ("%song_off%"+0x10) "dword_mus"
		FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
			SPRINT name_source "dword_mus_source%i%"
			SPRINT name_dest "dword_mus_dest%i%"
			SPRINT dword_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT dword_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
				WRITE_SHORT ("%song_off%"+0x10) "%dword_index_dest%"
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x10 (%dword_index_source% => %dword_index_dest%)~
			END
		END

		//0x28 area ambient WAV resref
		//0x30 area ambient WAV resref
		FOR (cntwav=0; cntwav<2; cntwav=cntwav+1) BEGIN
			READ_ASCII ("%song_off%"+0x28+0x8*cntwav) "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%song_off%"+0x28+0x8*cntwav) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x28-0x30 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		/*READ_ASCII ("%song_off%"+0x28) "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII ("%song_off%"+0x28) "%resref_index_dest%" #16
			END
		END*/

		//0x3c area ambient WAV resref
		//0x44 area ambient WAV resref
		FOR (cntwav=0; cntwav<2; cntwav=cntwav+1) BEGIN
			READ_ASCII ("%song_off%"+0x3c+0x8*cntwav) "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%song_off%"+0x3c+0x8*cntwav) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xbc -> 0x3c-0x44 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END
		
		/*READ_ASCII ("%song_off%"+0x3c) "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII ("%song_off%"+0x3c) "%resref_index_dest%" #16
			END
		END*/

		//////////////////////
		//Rest spawn creatures
		//////////////////////
		READ_LONG 0xc0 "rest_off"

		//0x48 CRE resref 1
		//0x50 CRE resref 2
		//0x58 CRE resref 3
		//0x60 CRE resref 4
		//0x68 CRE resref 5
		//0x70 CRE resref 6
		//0x78 CRE resref 7
		//0x80 CRE resref 8
		//0x88 CRE resref 9
		//0x90 CRE resref 10
		FOR (cntcre=0; cntcre<10; cntcre=cntcre+1) BEGIN
			READ_ASCII ("%rest_off%"+0x48+0x8*cntcre) "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%rest_off%"+0x48+0x8*cntcre) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc0 -> 0x48-0x90 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		SET are_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//BAF patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.BAF$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching script source file %patch_name%...~

		//area resrefs
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
		END

		//door names
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		//entrance names
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		//"_" prepended resrefs
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
		END

		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
		END

		FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_cre_source%i%"
			SPRINT name_dest "resref_cre_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
		END

		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
		END

		FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlgext_source%i%"
			SPRINT name_dest "resref_dlgext_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
		END

		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
		END

		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
		END

		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
		END

		FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_sto_source%i%"
			SPRINT name_dest "resref_sto_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
		END

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
		END

		FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_mve_source%i%"
			SPRINT name_dest "resref_mve_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
		END

		FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_2da_source%i%"
			SPRINT name_dest "resref_2da_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
		END

		FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_var_source%i%"
			SPRINT name_dest "resref_var_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
		END

		LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		REPLACE_TEXTUALLY ~\(Allegiance(.*,\)ANYONE)~ ~\10)~//workaround for weidu compiler bug

		SET baf_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//BCS patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "SC
CR
CO")=1) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching compiled script file %patch_name%...~

		DECOMPILE_AND_PATCH BEGIN

			//area resrefs
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			END

			//door names
			FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			//entrance names
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			//"_" prepended resrefs
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			END

			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			END

			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			END

			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			END

			FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlgext_source%i%"
				SPRINT name_dest "resref_dlgext_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			END

			FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dv_source%i%"
				SPRINT name_dest "resref_dv_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			END

			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			END

			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			END

			FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_sto_source%i%"
				SPRINT name_dest "resref_sto_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			END

			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			END

			FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mve_source%i%"
				SPRINT name_dest "resref_mve_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
			END

			FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_2da_source%i%"
				SPRINT name_dest "resref_2da_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
			END

			FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_var_source%i%"
				SPRINT name_dest "resref_var_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
			END

			LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

			REPLACE_TEXTUALLY ~\(Allegiance(.*,\)ANYONE)~ ~\10)~//workaround for weidu compiler bug

		END

		SET bcs_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//CRE patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "CRE V1.0")=1) /*AND (SOURCE_SIZE > 0x2d3)*/ BEGIN

		//Checks whether a CRE file is well-formed or not, fixes some common bugs, and reports whether the CRE file is still broken or not.
		LPF ~FJ_CRE_VALIDITY~ RET vl=valid END
		PATCH_IF vl BEGIN
		
			PATCH_PRINT ~%cntcurrent%/%cntrow% Patching creature version 1.0 file %patch_name%...~

			////////////////////////////////
			//0x34 small portrait BMP resref
			////////////////////////////////
			READ_ASCII 0x34 "resref_bmp"
			FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bmp_source%i%"
				SPRINT name_dest "resref_bmp_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bmp%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x34 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x34 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x3c large portrait BMP resref
			////////////////////////////////
			READ_ASCII 0x3c "resref_bmp"
			FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bmp_source%i%"
				SPRINT name_dest "resref_bmp_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bmp%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x3c "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x3c (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x248 override BCS resref
			////////////////////////////////
			READ_ASCII 0x248 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x248 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x248 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x250 class BCS resref
			////////////////////////////////
			READ_ASCII 0x250 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x250 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x250 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x258 race BCS resref
			////////////////////////////////
			READ_ASCII 0x258 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x258 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x258 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x260 general BCS resref
			////////////////////////////////
			READ_ASCII 0x260 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x260 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x260 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x268 default BCS resref
			////////////////////////////////
			READ_ASCII 0x268 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x268 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x268 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//////////////////////
			//0x280 Death Variable
			//////////////////////
			READ_ASCII 0x280 "resref_dv"
			FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dv_source%i%"
				SPRINT name_dest "resref_dv_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dv%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x280 "%resref_index_dest%" #32
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x280 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			////////////////////////////////
			//0x2cc DLG resref
			////////////////////////////////
			READ_ASCII 0x2cc "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x2cc "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2cc (%resref_index_source% => %resref_index_dest%)~
				END
			END
			FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlgext_source%i%"
				SPRINT name_dest "resref_dlgext_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x2cc "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2cc (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//////////////
			//Known Spells
			//////////////
			READ_LONG 0x2a0 "kspell_off"
			READ_SHORT 0x2a4 "kspell_cnt"
			FOR (cnt=0; cnt<"%kspell_cnt%"; cnt=cnt+1) BEGIN

				//0x0 SPL resref
				READ_ASCII ("%kspell_off%"+0xc*cnt) "resref_spl"
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%kspell_off%"+0xc*cnt) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2a0 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
					END
				END

			END

			//////////////////
			//Memorised Spells
			//////////////////
			READ_LONG 0x2b0 "mspell_off"
			READ_SHORT 0x2b4 "mspell_cnt"
			FOR (cnt=0; cnt<"%mspell_cnt%"; cnt=cnt+1) BEGIN

				//0x0 SPL resref
				READ_ASCII ("%mspell_off%"+0xc*cnt) "resref_spl"
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%mspell_off%"+0xc*cnt) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2b0 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
					END
				END

			END

			//////////////
			//Items
			//////////////
			READ_LONG 0x2bc "item_off"
			READ_SHORT 0x2c0 "item_cnt"
			FOR (cnt=0; cnt<"%item_cnt%"; cnt=cnt+1) BEGIN

				//0x0 ITM resref
				READ_ASCII ("%item_off%"+0x14*cnt) "resref_itm"
				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%item_off%"+0x14*cnt) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2bc -> 0x0 (%resref_index_source% => %resref_index_dest%)~
					END
				END

			END

			SET cre_check += 1
			SET checked = 1

		END
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//D patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.D$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching dialog source file %patch_name%...~

		//area resrefs
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
		END

		//door names
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		//entrance names
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		//"_" prepended resrefs
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
		END

		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
		END

		FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_cre_source%i%"
			SPRINT name_dest "resref_cre_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
		END

		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			LAUNCH_PATCH_MACRO ~D_DLG_replace~
		END

		FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlgext_source%i%"
			SPRINT name_dest "resref_dlgext_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			LAUNCH_PATCH_MACRO ~D_DLG_replace~
			LAUNCH_PATCH_MACRO ~D_DLGext_replace~
		END

		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
		END

		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
		END

		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
		END

		FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_sto_source%i%"
			SPRINT name_dest "resref_sto_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
		END

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
		END

		FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_mve_source%i%"
			SPRINT name_dest "resref_mve_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
		END

		FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_2da_source%i%"
			SPRINT name_dest "resref_2da_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
		END

		FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_var_source%i%"
			SPRINT name_dest "resref_var_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
		END

		LAUNCH_PATCH_MACRO ~D_traifyDLG_replace~
		LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		SET d_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//DLG patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "DLG V1.0")=1) AND (SOURCE_SIZE > 0x33) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching dialog version 1.0 file %patch_name%...~

		//////////////
		//Responses
		//////////////
		READ_LONG 0x14 "resp_off"
		READ_SHORT 0x10 "resp_cnt"
		FOR (cnt=0; cnt<"%resp_cnt%"; cnt=cnt+1) BEGIN

			//0x14 next dialogue DLG resref
			READ_ASCII ("%resp_off%"+0x20*cnt+0x14) "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%resp_off%"+0x20*cnt+0x14) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x14 -> 0x14 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlgext_source%i%"
				SPRINT name_dest "resref_dlgext_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%resp_off%"+0x20*cnt+0x14) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x14 -> 0x14 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%resp_off%"+0x20*cnt+0x14) "resref_dlg" (1)
			PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "_")=1) BEGIN
				DELETE_BYTES ("%resp_off%"+0x20*cnt+0x14) 0x1
				INSERT_BYTES ("%resp_off%"+0x20*cnt+0x14+0x7) 0x1
			END

		END

		DECOMPILE_AND_PATCH BEGIN

			//area resrefs
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			END

			//door names
			FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			//entrance names
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
			END

			//"_" prepended resrefs
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			END

			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			END

			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			END

			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
				LAUNCH_PATCH_MACRO ~D_DLG_replace~
			END

			FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlgext_source%i%"
				SPRINT name_dest "resref_dlgext_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
				LAUNCH_PATCH_MACRO ~D_DLG_replace~
				LAUNCH_PATCH_MACRO ~D_DLGext_replace~
			END

			FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dv_source%i%"
				SPRINT name_dest "resref_dv_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			END

			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			END

			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			END

			FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_sto_source%i%"
				SPRINT name_dest "resref_sto_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			END

			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			END

			FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mve_source%i%"
				SPRINT name_dest "resref_mve_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
			END

			FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_2da_source%i%"
				SPRINT name_dest "resref_2da_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
			END

			FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_var_source%i%"
				SPRINT name_dest "resref_var_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
			END

			LAUNCH_PATCH_MACRO ~D_traifyDLG_replace~
			LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		END

		SET dlg_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//EFF patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "EFF V2.0")=1) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching effect version 2.0 file %patch_name%...~

		/////////////////////
		//0x30 effect resref
		//0x78 effect resref2
		/////////////////////

		//0x14 resource resref
		//2DA - 0x7f Monster Summoning, 0xd6 Select Spell
		//EFF - 0xb1 Use EFF File, 0xf8 Set Melee Effect, 0xf9 Set Ranged Effect, 0x110 Apply Effect on Condition, 0x11b Use EFF File (II)
		//VVC - 0xd7 Play 3D Effect, 0x128 Immunity to Specific Animation

		READ_SHORT 0x10 "fx_type"
		READ_ASCII 0x30 "resref"
		READ_ASCII 0x78 "resref2"

		PATCH_IF ( "%fx_type%" = 0xd7) BEGIN //Play 3D Effect
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0xd7 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0xd7 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x6b) BEGIN //Change Portrait
			FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bmp_source%i%"
				SPRINT name_dest "resref_bmp_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x6b -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x6b -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x52) BEGIN //Set AI Script
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x52 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x52 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x43) //Summon Creature
		OR ( "%fx_type%" = 0x87) //Polymorph into Specific
		OR ( "%fx_type%" = 0x97) //Replace Creature
		OR ( "%fx_type%" = 0xa8) BEGIN //Remove Creature
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x43/0x87/0x97/0xa8 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x43/0x87/0x97/0xa8 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x6f) //Create Item in Magical Weapon Slot
		OR ( "%fx_type%" = 0x70) //Remove Item
		OR ( "%fx_type%" = 0x7a) //Create Inventory Item
		OR ( "%fx_type%" = 0x7b) //Remove Inventory Item
		OR ( "%fx_type%" = 0x8f) //Create Item in Slot
		OR ( "%fx_type%" = 0xb4) //Cannot Use Item
		OR ( "%fx_type%" = 0xff) BEGIN //Create Inventory Item (days)
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x6f/0x70/0x7a/0x7b/0x8f/0xb4/0xff -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x6f/0x70/0x7a/0x7b/0x8f/0xb4/0xff -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x98) BEGIN //Play Movie
			FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mve_source%i%"
				SPRINT name_dest "resref_mve_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x98 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x98 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0x92) //Cast Spell (at Creature)
		OR ( "%fx_type%" = 0x93) //Learn Spell
		OR ( "%fx_type%" = 0x94) //Cast Spell (at Point)
		OR ( "%fx_type%" = 0xab) //Give Innate Ability
		OR ( "%fx_type%" = 0xac) //Remove Spell
		OR ( "%fx_type%" = 0xb7) //Apply Effect Itemtype (SPL ResRef?)
		OR ( "%fx_type%" = 0xce) //Protection from Spell
		OR ( "%fx_type%" = 0xcf) //Bounce Specified Spell
		OR ( "%fx_type%" = 0xe8) //Cast Spell on Condition
		OR ( "%fx_type%" = 0xfb) //Change Bard Song Effect
		OR ( "%fx_type%" = 0xfc) //Set Trap
		OR ( "%fx_type%" = 0x100) //Spell Sequencer Active (SPL ResRef?)
		OR ( "%fx_type%" = 0x102) //Spell Sequencer Activation
		OR ( "%fx_type%" = 0x139) BEGIN //HLA Denotation
			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x92/0x93/0x94/0xab/0xac/0xb7/0xce/0xcf/0xe8/0xfb/0xfc/0x100/0x102/0x139 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0x92/0x93/0x94/0xab/0xac/0xb7/0xce/0xcf/0xe8/0xfb/0xfc/0x100/0x102/0x139 -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		PATCH_IF ( "%fx_type%" = 0xae) BEGIN //Play Sound
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0xae -> 0x30 (%resref_index_source% => %resref_index_dest%)~
				END
				PATCH_IF (("%resref2%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10=0xae -> 0x78 (%resref_index_source% => %resref_index_dest%)~
				END
			END
		END

		//////////////////////////////
		//0x94 source spell SPL resref
		//////////////////////////////
		READ_ASCII 0x94 "resref_spl"
		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x94 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x94 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		SET eff_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//ITM patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "ITM V1  ")=1) AND (SOURCE_SIZE > 0x71) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching item version 1.0 file %patch_name%...~

		////////////////////////////////
		//0x10 replacement ITM resref
		////////////////////////////////
		READ_ASCII 0x10 "resref_itm"
		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x10 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x3a inventory icon BAM resref
		////////////////////////////////
		READ_ASCII 0x3a "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x3a "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x3a (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x44 ground icon BAM resref
		////////////////////////////////
		READ_ASCII 0x44 "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x44 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x44 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x58 description icon BAM resref
		////////////////////////////////
		READ_ASCII 0x58 "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x58 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x58 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		//////////////
		//Abilities
		//////////////
		READ_LONG 0x64 "abil_off"
		READ_SHORT 0x68 "abil_cnt"
		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN


			//0x4 memorised icon BAM resref
			READ_ASCII ("%abil_off%"+0x38*cnt+0x4) "resref_bam"
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%abil_off%"+0x38*cnt+0x4) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x64 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Effects
		//////////////
		READ_LONG 0x6a "fx_off"
		READ_SHORT 0x70 "fx_cnt"

		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%abil_off%"+0x38*cnt+0x1e) "fx_num"
			SET fx_cnt += fx_num //gauge the total number of effects by summing global effects and the effects of each ability
		END

		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN

			//0x14 resource resref
			//2DA - 0x7f Monster Summoning, 0xd6 Select Spell
			//EFF - 0xb1 Use EFF File, 0xf8 Set Melee Effect, 0xf9 Set Ranged Effect, 0x110 Apply Effect on Condition, 0x11b Use EFF File (II)
			//VVC - 0xd7 Play 3D Effect, 0x128 Immunity to Specific Animation

			READ_SHORT ("%fx_off%"+0x30*cnt) "fx_type"
			READ_ASCII ("%fx_off%"+0x30*cnt+0x14) "resref"

			PATCH_IF ( "%fx_type%" = 0xd7) BEGIN //Play 3D Effect
				FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bam_source%i%"
					SPRINT name_dest "resref_bam_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0xd7 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x6b) BEGIN //Change Portrait
				FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bmp_source%i%"
					SPRINT name_dest "resref_bmp_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x6b -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x52) BEGIN //Set AI Script
				FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bcs_source%i%"
					SPRINT name_dest "resref_bcs_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x52 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x43) //Summon Creature
			OR ( "%fx_type%" = 0x87) //Polymorph into Specific
			OR ( "%fx_type%" = 0x97) //Replace Creature
			OR ( "%fx_type%" = 0xa8) BEGIN //Remove Creature
				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x43/0x87/0x97/0xa8 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x6f) //Create Item in Magical Weapon Slot
			OR ( "%fx_type%" = 0x70) //Remove Item
			OR ( "%fx_type%" = 0x7a) //Create Inventory Item
			OR ( "%fx_type%" = 0x7b) //Remove Inventory Item
			OR ( "%fx_type%" = 0x8f) //Create Item in Slot
			OR ( "%fx_type%" = 0xb4) //Cannot Use Item
			OR ( "%fx_type%" = 0xff) BEGIN //Create Inventory Item (days)
				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x6f/0x70/0x7a/0x7b/0x8f/0xb4/0xff -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x98) BEGIN //Play Movie
				FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_mve_source%i%"
					SPRINT name_dest "resref_mve_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x98 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x92) //Cast Spell (at Creature)
			OR ( "%fx_type%" = 0x93) //Learn Spell
			OR ( "%fx_type%" = 0x94) //Cast Spell (at Point)
			OR ( "%fx_type%" = 0xab) //Give Innate Ability
			OR ( "%fx_type%" = 0xac) //Remove Spell
			OR ( "%fx_type%" = 0xb7) //Apply Effect Itemtype (SPL ResRef?)
			OR ( "%fx_type%" = 0xce) //Protection from Spell
			OR ( "%fx_type%" = 0xcf) //Bounce Specified Spell
			OR ( "%fx_type%" = 0xe8) //Cast Spell on Condition
			OR ( "%fx_type%" = 0xfb) //Change Bard Song Effect
			OR ( "%fx_type%" = 0xfc) //Set Trap
			OR ( "%fx_type%" = 0x100) //Spell Sequencer Active (SPL ResRef?)
			OR ( "%fx_type%" = 0x102) //Spell Sequencer Activation
			OR ( "%fx_type%" = 0x139) BEGIN //HLA Denotation
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x92/0x93/0x94/0xab/0xac/0xb7/0xce/0xcf/0xe8/0xfb/0xfc/0x100/0x102/0x139 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0xae) BEGIN //Play Sound
				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0xae -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

		END

		SET itm_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//SPL patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "SPL V1  ")=1) AND (SOURCE_SIZE > 0x71) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching spell version 1.0 file %patch_name%...~

		////////////////////////////////
		//0x10 casting sound WAV resref
		////////////////////////////////
		READ_ASCII 0x10 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x10 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x10 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x3a spellbook icon BAM resref
		////////////////////////////////
		READ_ASCII 0x3a "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x3a "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x3a (%resref_index_source% => %resref_index_dest%)~
			END
		END

		//////////////
		//Abilities
		//////////////
		READ_LONG 0x64 "abil_off"
		READ_SHORT 0x68 "abil_cnt"
		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN

			//0x4 memorised icon BAM resref
			READ_ASCII ("%abil_off%"+0x28*cnt+0x4) "resref_bam"
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%abil_off%"+0x28*cnt+0x4) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x64 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Effects
		//////////////
		READ_LONG 0x6a "fx_off"
		READ_SHORT 0x70 "fx_cnt"

		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%abil_off%"+0x28*cnt+0x1e) "fx_num"
			SET fx_cnt += fx_num //gauge the total number of effects by summing global effects and the effects of each ability
		END

		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN

			//0x14 resource resref
			//2DA - 0x7f Monster Summoning, 0xd6 Select Spell
			//EFF - 0xb1 Use EFF File, 0xf8 Set Melee Effect, 0xf9 Set Ranged Effect, 0x110 Apply Effect on Condition, 0x11b Use EFF File (II)
			//VVC - 0xd7 Play 3D Effect, 0x128 Immunity to Specific Animation

			READ_SHORT ("%fx_off%"+0x30*cnt) "fx_type"
			READ_ASCII ("%fx_off%"+0x30*cnt+0x14) "resref"

			PATCH_IF ( "%fx_type%" = 0xd7) BEGIN //Play 3D Effect
				FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bam_source%i%"
					SPRINT name_dest "resref_bam_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0xd7 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x6b) BEGIN //Change Portrait
				FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bmp_source%i%"
					SPRINT name_dest "resref_bmp_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x6b -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x52) BEGIN //Set AI Script
				FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bcs_source%i%"
					SPRINT name_dest "resref_bcs_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x52 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x43) //Summon Creature
			OR ( "%fx_type%" = 0x87) //Polymorph into Specific
			OR ( "%fx_type%" = 0x97) //Replace Creature
			OR ( "%fx_type%" = 0xa8) BEGIN //Remove Creature
				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x43/0x87/0x97/0xa8 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x6f) //Create Item in Magical Weapon Slot
			OR ( "%fx_type%" = 0x70) //Remove Item
			OR ( "%fx_type%" = 0x7a) //Create Inventory Item
			OR ( "%fx_type%" = 0x7b) //Remove Inventory Item
			OR ( "%fx_type%" = 0x8f) //Create Item in Slot
			OR ( "%fx_type%" = 0xb4) //Cannot Use Item
			OR ( "%fx_type%" = 0xff) BEGIN //Create Inventory Item (days)
				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x6f/0x70/0x7a/0x7b/0x8f/0xb4/0xff -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x98) BEGIN //Play Movie
				FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_mve_source%i%"
					SPRINT name_dest "resref_mve_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII 0x30 "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x98 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0x92) //Cast Spell (at Creature)
			OR ( "%fx_type%" = 0x93) //Learn Spell
			OR ( "%fx_type%" = 0x94) //Cast Spell (at Point)
			OR ( "%fx_type%" = 0xab) //Give Innate Ability
			OR ( "%fx_type%" = 0xac) //Remove Spell
			OR ( "%fx_type%" = 0xb7) //Apply Effect Itemtype (SPL ResRef?)
			OR ( "%fx_type%" = 0xce) //Protection from Spell
			OR ( "%fx_type%" = 0xcf) //Bounce Specified Spell
			OR ( "%fx_type%" = 0xe8) //Cast Spell on Condition
			OR ( "%fx_type%" = 0xfb) //Change Bard Song Effect
			OR ( "%fx_type%" = 0xfc) //Set Trap
			OR ( "%fx_type%" = 0x100) //Spell Sequencer Active (SPL ResRef?)
			OR ( "%fx_type%" = 0x102) //Spell Sequencer Activation
			OR ( "%fx_type%" = 0x139) BEGIN //HLA Denotation
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0x92/0x93/0x94/0xab/0xac/0xb7/0xce/0xcf/0xe8/0xfb/0xfc/0x100/0x102/0x139 -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

			PATCH_IF ( "%fx_type%" = 0xae) BEGIN //Play Sound
				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%fx_off%"+0x30*cnt+0x14) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x6a=0xae -> 0x30 (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

		END

		SET spl_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//STO patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "STORV1.0")=1) AND (SOURCE_SIZE > 0x9b) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching store version 1.0 file %patch_name%...~

		////////////////////////////////
		//0x44 tavern rumours DLG resref
		////////////////////////////////
		READ_ASCII 0x44 "resref_dlg"
		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x44 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x44 (%resref_index_source% => %resref_index_dest%)~
			END
		END
		FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlgext_source%i%"
			SPRINT name_dest "resref_dlgext_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x44 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x44 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x54 temple rumours DLG resref
		////////////////////////////////
		READ_ASCII 0x54 "resref_dlg"
		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x54 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 (%resref_index_source% => %resref_index_dest%)~
			END
		END
		FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlgext_source%i%"
			SPRINT name_dest "resref_dlgext_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x54 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x54 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		//////////////
		//Items for Sale
		//////////////
		READ_LONG 0x34 "item_off"
		READ_SHORT 0x38 "item_cnt"
		FOR (cnt=0; cnt<"%item_cnt%"; cnt=cnt+1) BEGIN

			//0x0 ITM resref
			READ_ASCII ("%item_off%"+0x1c*cnt) "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%item_off%"+0x1c*cnt) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x34 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Drinks for Sale
		//////////////
		READ_LONG 0x4c "drink_off"
		READ_SHORT 0x50 "drink_cnt"
		FOR (cnt=0; cnt<"%drink_cnt%"; cnt=cnt+1) BEGIN

			//0x0 special rumour DLG resref
			READ_ASCII ("%drink_off%"+0x14*cnt) "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%drink_off%"+0x14*cnt) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x4c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlgext_source%i%"
				SPRINT name_dest "resref_dlgext_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%drink_off%"+0x14*cnt) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x4c -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		//////////////
		//Cures for Sale
		//////////////
		READ_LONG 0x70 "cure_off"
		READ_SHORT 0x74 "cure_cnt"
		FOR (cnt=0; cnt<"%cure_cnt%"; cnt=cnt+1) BEGIN

			//0x0 SPL resref
			READ_ASCII ("%cure_off%"+0xc*cnt) "resref_spl"
			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%cure_off%"+0xc*cnt) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x70 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		SET sto_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//TRA patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TRA$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WeiDU translation file %patch_name%...~

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			REPLACE_TEXTUALLY ~~~~~\(\[\)%resref_index_source%\(\]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		SET tra_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//TP2/TPH/TPP patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TP2$")=0) 
	OR (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TPH$")=0)
	OR (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TPP$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WeiDU script file %patch_name%...~

		//area resrefs
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.ARE\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~^%resref_index_source%\(\.ARE\)~~~~~ ~%resref_index_dest%\1~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		//door names
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		//entrance names
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			REPLACE_TEXTUALLY ~"%resref_index_source%~ ~"%resref_index_dest%~
		END

		//"_" prepended resrefs
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.BAM\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~^%resref_index_source%\(\.BAM\)~~~~~ ~%resref_index_dest%\1~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.BAF\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.BCS\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~^%resref_index_source%\(\.BCS\)~~~~~ ~%resref_index_dest%\1~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_cre_source%i%"
			SPRINT name_dest "resref_cre_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.CRE\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~^%resref_index_source%\(\.CRE\)~~~~~ ~%resref_index_dest%\1~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.DLG\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.D\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~^%resref_index_source%\(\.DLG\)~~~~~ ~%resref_index_dest%\1~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlgext_source%i%"
			SPRINT name_dest "resref_dlgext_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.DLG\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.D\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~^%resref_index_source%\(\.DLG\)~~~~~ ~%resref_index_dest%\1~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.ITM\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~^%resref_index_source%\(\.ITM\)~~~~~ ~%resref_index_dest%\1~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.SPL\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~^%resref_index_source%\(\.SPL\)~~~~~ ~%resref_index_dest%\1~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_sto_source%i%"
			SPRINT name_dest "resref_sto_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.STO\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~^%resref_index_source%\(\.STO\)~~~~~ ~%resref_index_dest%\1~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			REPLACE_TEXTUALLY ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.WAV\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~^%resref_index_source%\(\.WAV\)~~~~~ ~%resref_index_dest%\1~
			REPLACE_TEXTUALLY ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,<=+-_ ]\)~~~~~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~~~~~\(\[\)%resref_index_source%\(\]\)~~~~~ ~\1%resref_index_dest%\2~
		END
//%~
		SET tp2_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//VVC patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "VVC V1.0")=1) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching VVC version 1.0 file %patch_name%...~

		//////////////////////////
		//0x8 animation BAM resref
		//////////////////////////
		READ_ASCII 0x8 "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x8 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x8 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x78 starting sound WAV resref
		////////////////////////////////
		READ_ASCII 0x78 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x78 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x78 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////////////
		//0x80 duration sound WAV resref
		////////////////////////////////
		READ_ASCII 0x80 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x80 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x80 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		/////////////////////////////////
		//0x94 ending sound WAV resref(?)
		/////////////////////////////////
		READ_ASCII 0x94 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII 0x94 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x94 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		SET vvc_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//WED patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "WED V1.3")=1) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WED version 1.3 file %patch_name%...~

		//////////
		//Overlays
		//////////
		READ_LONG 0x8 "overlays_num"
		READ_LONG 0x10 "overlays_off"
		FOR ( cnt=0; cnt<"%overlays_num%"; cnt +=1) BEGIN

			//0x4 tileset TIS resref
			READ_ASCII ("%overlays_off%"+0xa*cnt+0x4) "resref_tis"
			FOR (i=1; i<="%resref_tis_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_tis_source%i%"
				SPRINT name_dest "resref_tis_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_tis%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%overlays_off%"+0xa*cnt+0x4) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x8 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END

		END

		SET wed_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//WMP patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "WMAPV1.0")=1) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching worldmap version 1.0 file %patch_name%...~

		// possibility of more than one world map?
		//	READ_LONG 0x8 "mapentry_num"
		READ_LONG 0xc "mapentry_off"

		/////////////////////////////
		//0x0 map resource MOS resref
		/////////////////////////////
		READ_ASCII ("%mapentry_off%") "resref_mos"
		FOR (i=1; i<="%resref_mos_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_mos_source%i%"
			SPRINT name_dest "resref_mos_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_mos%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII ("%mapentry_off%") "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc -> 0x0 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		///////////////////////////
		//0x30 map icons BAM resref
		///////////////////////////
		READ_ASCII ("%mapentry_off%"+0x30) "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
			SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
			PATCH_IF (("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
				WRITE_EVALUATED_ASCII ("%mapentry_off%"+0x30) "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc -> 0x30 (%resref_index_source% => %resref_index_dest%)~
			END
		END

		////////////////////////
		//Map entry area entries
		////////////////////////
		READ_LONG ("%mapentry_off%"+0x20) "areaentry_num"
		READ_LONG ("%mapentry_off%"+0x24) "areaentry_off"
		FOR ( j=0; j<"%areaentry_num%";j=j+1) BEGIN

			//0x0 area short name (contains area numbers)
			READ_ASCII ("%areaentry_off%"+0xf0*j) "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%areaentry_off%"+0xf0*j) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x24 -> 0x0 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x8 area content ARE resref
			READ_ASCII ("%areaentry_off%"+0xf0*j+0x8) "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%areaentry_off%"+0xf0*j+0x8) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x24 -> 0x8 (%resref_index_source% => %resref_index_dest%)~
				END
			END

			//0x10 area long name (contains area numbers)
			READ_ASCII ("%areaentry_off%"+0xf0*j+0x10) "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%areaentry_off%"+0xf0*j+0x10) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x24 -> 0x10 (%resref_index_source% => %resref_index_dest%)~
				END
			END		

			//0x48 loading screen MOS resref
			READ_ASCII ("%areaentry_off%"+0xf0*j+0x48) "resref_mos"
			FOR (i=1; i<="%resref_mos_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mos_source%i%"
				SPRINT name_dest "resref_mos_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_mos%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%areaentry_off%"+0xf0*j+0x48) "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x24 -> 0x48 (%resref_index_source% => %resref_index_dest%)~
				END
			END	

		END

		//////////////////////
		//Map entry area links
		//////////////////////
		READ_LONG ("%mapentry_off%"+0x28) "arealink_off"
		READ_LONG ("%mapentry_off%"+0x2c) "arealink_num"

		FOR ( j=0; j<"%arealink_num%";j=j+1) BEGIN

			//0x4 entrance name (contains area numbers)
			READ_ASCII ("%arealink_off%"+0xd8*j+0x4) "resref_exit" (8)
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%arealink_off%"+0xd8*j+0x4) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x28 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%arealink_off%"+0xd8*j+0x4) "resref_exit" (6)
			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%arealink_off%"+0xd8*j+0x4) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x28 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%arealink_off%"+0xd8*j+0x4) "resref_exit" (7)
			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%arealink_off%"+0xd8*j+0x4) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x28 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END
			READ_ASCII ("%arealink_off%"+0xd8*j+0x4) "resref_exit" (5)
			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
				SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
				PATCH_IF (("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
					WRITE_EVALUATED_ASCII ("%arealink_off%"+0xd8*j+0x4) "%resref_index_dest%"
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0xc+0x28 -> 0x4 (%resref_index_source% => %resref_index_dest%)~
				END
			END	

			//0x2c random encounter ARE resref 1
			//0x34 random encounter ARE resref 2
			//0x3c random encounter ARE resref 3
			//0x44 random encounter ARE resref 4
			//0x4c random encounter ARE resref 5
			FOR (cntare=0; cntare<5; cntare=cntare+1) BEGIN
				READ_ASCII ("%arealink_off%"+0xd8*j+0x2c+0x8*cntare) "resref_are"
				FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_are_source%i%"
					SPRINT name_dest "resref_are_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					PATCH_IF (("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%")=1) BEGIN
						WRITE_EVALUATED_ASCII ("%arealink_off%"+0xd8*j+0x2c+0x8*cntare) "%resref_index_dest%" #8
						PATCH_PRINT ~Patching %SOURCE_FILESPEC%: 0x2c/0x34/0x3c/0x44/0x4c (%resref_index_source% => %resref_index_dest%)~
					END
				END
			END

		END

		SET wmp_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//0-byte files
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%filetype%" STRING_EQUAL_CASE "Ignoring 0 byte file")=1) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% %filetype% %patch_name%...~

		SET ignore_check += 1
		SET checked = 1

	END

END
/////////////////////////////////////////////////////////////////////////////////////////////////////////

/*DEFINE_ACTION_MACRO ~full_patch~ BEGIN

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//Renaming of files
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	COPY + ~%patch_dir%/%patch_name%~ ~%patch_dir%/%patch_name%~
		SPRINT source "%SOURCE_FILE%"
		SPRINT source_dir "%SOURCE_DIRECTORY%"
		SPRINT target_dir "%DEST_DIRECTORY%"
		INNER_ACTION BEGIN
			COPY - ~Tempfile~ ~Tempfile~
				INSERT_BYTES 0x0 ("%file_length%" - 1)
				WRITE_EVALUATED_ASCII 0x0 "%source%"

				FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_are_source%i%"
					SPRINT name_dest "resref_are_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.ARE\)~ ~%resref_index_dest%\1~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(HT\.BMP\)~ ~%resref_index_dest%\1~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(LM\.BMP\)~ ~%resref_index_dest%\1~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(SR\.BMP\)~ ~%resref_index_dest%\1~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.WED\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bam_source%i%"
					SPRINT name_dest "resref_bam_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.BAM\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bcs_source%i%"
					SPRINT name_dest "resref_bcs_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.BCS\)~ ~%resref_index_dest%\1~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.BAF\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.CRE\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_dlg_source%i%"
					SPRINT name_dest "resref_dlg_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.D\)~ ~%resref_index_dest%\1~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.DLG\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_dlgext_source%i%"
					SPRINT name_dest "resref_dlgext_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.D\)~ ~%resref_index_dest%\1~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.DLG\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.ITM\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_mos_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_mos_source%i%"
					SPRINT name_dest "resref_mos_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.MOS\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_mve_source%i%"
					SPRINT name_dest "resref_mve_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.MVE\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.SPL\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_sto_source%i%"
					SPRINT name_dest "resref_sto_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.STO\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_tis_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_tis_source%i%"
					SPRINT name_dest "resref_tis_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.TIS\)~ ~%resref_index_dest%\1~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.TIZ\)~ ~%resref_index_dest%\1~
				END

				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVALUATE_BUFFER ~%%name_source%%~
					SPRINT resref_index_dest EVALUATE_BUFFER ~%%name_dest%%~
					REPLACE_TEXTUALLY ~^%resref_index_source%\(\.WAV\)~ ~%resref_index_dest%\1~
				END

				//determine target file name
				SET bytes = 0
				FOR ( byteoff=0; byteoff<999; byteoff+=1) BEGIN
					READ_BYTE "%byteoff%" "detectbytes" ELSE 999
					PATCH_IF NOT ("%detectbytes%" = 999) BEGIN
						SET bytes = "%byteoff%" + 1
					END
					PATCH_IF ("%detectbytes%" = 999) BEGIN
						READ_ASCII 0x0 "target" ("%bytes%")
						SET byteoff = 999
					END
				END

				DELETE_BYTES 0x0 ("%bytes%" - 1)

				PATCH_IF (("%source%" STRING_COMPARE "%target%")!=0) BEGIN
					PATCH_IF ("%checked%" = 0) BEGIN
						PATCH_PRINT ~%cntcurrent%/%cntrow% Renaming %source% to %target%...~
					END ELSE BEGIN
						PATCH_PRINT ~Renaming %source% to %target%...~
					END
					INNER_ACTION BEGIN
						COPY + ~%source_dir%/%source%~ ~%target_dir%/%target%~
						APPEND ~Rename.txt~ ~%source_dir%/%source%~
					END
					SET ren_check += 1
					SET checked = 1
				END
			//BUT_ONLY
		END
	//BUT_ONLY
END*/

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO ~PCU_core_complete~ BEGIN

//COPY + ~override/Rename.txt~ ~override/Rename.txt~
//REPLACE_TEXTUALLY ~/~ ~\\~ //to make compatible with DOS commands

	/*PATCH_*/PRINT ~Conversion complete. Statistics:
ARE %are_check%
BAF %baf_check%
BCS %bcs_check%
CRE %cre_check%
D	%d_check%
DLG %dlg_check%
EFF %eff_check%
GAM %gam_check%
ITM %itm_check%
SPL %spl_check%
STO %sto_check%
TP* %tp2_check%
TRA %tra_check%
VVC %vvc_check%
WED %wed_check%
WMP %wmp_check%

%ignore_check% files ignored.
%ren_check% files renamed.~

END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_ARE_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_TEXTUALLY ~\(Global("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GlobalGT("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GlobalLT("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GlobalTimerExact("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GlobalTimerExpired("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GlobalTimerNotExpired("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(AreaCheck("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(AreaCheckObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~

	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(SetGlobal("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LeaveArea("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(IncrementGlobal("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SetGlobalTimer("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(AddexperiencePartyGlobal("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(RevealAreaOnMap("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SetMasterArea("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveGlobal("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveBetweenAreas("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(EscapeAreaMove("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SaveLocation("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SaveObjectLocation("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HideAreaOnMap("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CopyGroundPilesTo("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(RealSetGlobalTimer("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(EscapeAreaObjectMove("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveToSavedLocationn("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveToSavedLocation("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DeathMatchPositionGlobal("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DeathMatchPositionArea("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DeathMatchPositionLocal("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveGlobalsTo("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveGlobalsTo("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SetTokenGlobal("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SetEncounterProbability("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SetEncounterProbability("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LeaveAreaLUAEntry("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LeaveAreaLUAPanicEntry("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureAtLocation("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateItemGlobal("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LeaveAreaLUA("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LeaveAreaLUAPanic("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveBetweenAreasEffect("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BAM_replace~ BEGIN
	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(CreateVisualEffect("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateVisualEffectObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectEffect("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectCopyEffect("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LeaveAreaLUA("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LeaveAreaLUAPanic("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveBetweenAreasEffect("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BCS_replace~ BEGIN
	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(ChangeAIScript("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartCutscene("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BMP_replace~ BEGIN
	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(StaticPalette("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_CRE_replace~ BEGIN
	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(CreateCreature("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ChangeAnimation("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ChangeAnimationNoEffect("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureImpassable("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureDoor("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectDoor("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectOffScreen("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureOffScreen("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectCopy("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectOffset("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureCopyPoint("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureImpassableAllowOverlap("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureAtLocation("[^"]*","[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectEffect("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectCopyEffect("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_DV_replace~ BEGIN
	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(ActionOverride("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Attack("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(BackStab("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Dialogue("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Dialog("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GetItem("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GiveItem("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GiveOrder("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LayHands("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveToObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PickPockets("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(RunAwayFrom("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Spell("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(UseItem("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(UseItemSlot("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Formation("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveViewObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ClickLButtonObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ClickRButtonObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DoubleClickLButtonObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DoubleClickRButtonObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SendTrigger("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CallLightning("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ProtectObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GroupAttack("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(AttackNoSound("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoraleSet("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoraleInc("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoraleDec("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(AttackOneRound("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ForceSpell("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Deactivate("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Activate("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CutSceneId("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Kill("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(VerbalConstant("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ClearActions("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(AttackReevaluate("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialog("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogue("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PlayerDialog("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PlayerDialogue("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GiveItemCreate("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartStore("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DisplayString("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ChangeAIType("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ChangeEnemyAlly("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ChangeGeneral("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ChangeRace("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ChangeClass("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ChangeSpecifics("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ChangeGender("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ChangeAlignment("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ApplySpell("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Interact("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveToObjectFollow("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReallyForceSpell("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(RunAwayFromNoInterrupt("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellNoDec("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveGlobal("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogueNoSet("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogNoSet("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveToObjectNoInterrupt("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(FollowObjectFormation("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(FaceObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveGlobalObjectOffScreen("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveGlobalObjectOffScreen("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReallyForceSpellDead("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Calm("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SaveObjectLocation("[^"]*","[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SetTokenObject("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SetGabber("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectCopy("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectOffset("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(AddXPObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DisplayStringNoName("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DialogueForceInterrupt("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DialogForceInterrupt("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogInterrupt("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogueInterrupt("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogueNoSetInterrupt("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogNoSetInterrupt("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DisplayStringHead("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PolymorphCopy("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(VerbalConstantHead("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateVisualEffectObject("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectEffect("[^"]*","[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureObjectCopyEffect("[^"]*","[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(EscapeAreaObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(EscapeAreaObjectMove("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(TakeItemReplace("[^"]*","[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PolymorphCopyBase("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveGlobalObject("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoveGlobalObject("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogOverride("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogOverrideInterrupt("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateCreatureCopyPoint("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ApplyDamage("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ApplyDamagePercent("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DisplayStringWait("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ForceSpellRange("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SetPlayerSound("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(FakeEffectExpiryCheck("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogNoName("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellRES("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ForceSpellRES("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ApplySpellRES("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReallyForceSpellRES("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellNoDecRES("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReallyForceSpellDeadRES("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ForceSpellRangeRES("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DisplayStringHeadDead("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DisplayStringNoNameHead("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~

	//TRIGGER.IDS
	REPLACE_TEXTUALLY ~\(AttackedBy("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Help("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Joins("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Leaves("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReceivedOrder("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Said("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(TurnedBy("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Alignment("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Allegiance("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Class("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Exists("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(General("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HP("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HPGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HPLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LOS("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Morale("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoraleGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(MoraleLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Race("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Range("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Reputation("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReputationGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReputationLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(See("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Specifics("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HitBy("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(TargetUnreachable("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumCreature("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumCreatureLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumCreatureGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HPPercent("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HPPercentLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HPPercentGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Heard("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StateCheck("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NotStateCheck("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Reaction("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReactionGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReactionLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InParty("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CheckStat("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CheckStatGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CheckStatLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Died("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Killed("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Entered("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Gender("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Dead("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Opened("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Closed("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Detected("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Reset("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Disarmed("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Unlocked("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumTimesInteracted("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumTimesInteractedGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumTimesInteractedLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PickPocketFailed("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StealFailed("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DisarmFailed("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PickLockFailed("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HasItem("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InteractingWith("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InWeaponRange("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HasWeaponEquiped("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Happiness("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HappinessGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HappinessLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Clicked("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumDead("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumDeadGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumDeadLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Detect("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumItems("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumItemsGT("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumItemsLT("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(IsOverMe("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HasItemEquiped("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumCreatureVsParty("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumCreatureVsPartyLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumCreatureVsPartyGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PartyMemberDied("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InPartySlot("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellCast("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InLine("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InLine("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Level("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LevelGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LevelLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Summoned("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ObjectActionListEmpty("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(OnScreen("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InActiveArea("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellCastOnMe("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Name("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Name("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellCastPriest("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellCastInnate("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(IsValidForPartyDialog("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(IfValidForPartyDialog("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(IsValidForPartyDialogue("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(IfValidForPartyDialogue("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HasBounceEffects("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HasImmunityEffects("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HasItemSlot("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PersonalSpaceDistance("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InMyGroup("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Kit("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(IsGabber("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(IsActive("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CharName("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CharName("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(FallenRanger("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(FallenPaladin("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InventoryFull("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HasItemEquipedReal("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(XP("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(XPGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(XPLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InMyArea("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(InPartyAllowDead("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(AreaCheckObject("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(WalkedToTrigger("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_DLG_replace~ BEGIN
	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(StartDialog("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogue("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SetDialog("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SetDialogue("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogInterrupt("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogueInterrupt("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogOverride("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogOverrideInterrupt("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(StartDialogNoName("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_ITM_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_TEXTUALLY ~\(Acquired("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Unusable("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PartyHasItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HasItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(Contains("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumItems("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumItemsGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumItemsLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumItemsParty("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumItemsPartyGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(NumItemsPartyLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HasItemEquiped("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PartyHasItemIdentified("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(HasItemEquipedReal("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~

	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(DropItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(EquipItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GetItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GiveItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(UseItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(UseItemSlot("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(UseItemPoint("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(TakePartyItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GiveItemCreate("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DestroyItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(TakePartyItemAll("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(TakePartyItemRange("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(TakePartyItemNum("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(PickUpItem("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(TakeItemReplace("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(TakeItemReplace("[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(DisplayStringHeadOwner("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(CreateItemGlobal("[^"]*","[^"]*","\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_SPL_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_TEXTUALLY ~\(HaveSpellRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~

	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(AddSpecialAbility("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellPointRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ForceSpellRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ForceSpellPointRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ApplySpellRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReallyForceSpellRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellNoDecRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SpellPointNoDecRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReallyForceSpellDeadRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ForceSpellRangeRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ForceSpellPointRangeRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(ReallyForceSpellPointRES("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_STO_replace~ BEGIN
	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(StartStore("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_WAV_replace~ BEGIN
	//ACTION.IDS
	REPLACE_TEXTUALLY ~\(PlaySound("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_DLG_replace~ BEGIN
	//ResRefs bounded by ~ or "
	REPLACE_TEXTUALLY ~~~~~\(BEGIN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(APPEND[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(APPEND_EARLY[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(EXTEND_TOP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(EXTEND_BOTTOM[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(ADD_STATE_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(ADD_TRANS_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(ADD_TRANS_ACTION[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(SET_WEIGHT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_SAY[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_STATE_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_TRIGGER_TEXT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_TRIGGER_TEXT_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_ACTION_TEXT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_ACTION_TEXT_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_ACTION_TEXT_PROCESS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_ACTION_TEXT_PROCESS_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(INTERJECT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(INTERJECT_COPY_TRANS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(INTERJECT_COPY_TRANS2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(I_C_T[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(I_C_T2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(END[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(EXTERN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(COPY_TRANS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(APPENDI[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(==[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(CHAIN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(THEN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	/* THEN correction is used for the beginning CHAIN */
	REPLACE_TEXTUALLY ~~~~~\(CHAIN2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ ~\1%resref_index_dest%\2~
	/* exitFilename for CHAIN2 cannot be corrected using this method */

	//ResRefs bounded by nothing
	REPLACE_TEXTUALLY ~~~~~\(BEGIN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(APPEND[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(APPEND_EARLY[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(EXTEND_TOP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(EXTEND_BOTTOM[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(ADD_STATE_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(ADD_TRANS_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(ADD_TRANS_ACTION[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(SET_WEIGHT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_SAY[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_STATE_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_TRIGGER_TEXT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_TRIGGER_TEXT_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_ACTION_TEXT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_ACTION_TEXT_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_ACTION_TEXT_PROCESS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(REPLACE_ACTION_TEXT_PROCESS_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(INTERJECT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(INTERJECT_COPY_TRANS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(INTERJECT_COPY_TRANS2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(I_C_T[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(I_C_T2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(END[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(EXTERN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(COPY_TRANS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(APPENDI[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(==[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(CHAIN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~~~~~\(THEN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	/* THEN correction is used for the beginning CHAIN */
	REPLACE_TEXTUALLY ~~~~~\(CHAIN2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ ~\1%resref_index_dest%\2~
	/* exitFilename for CHAIN2 cannot be corrected using this method */
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_MVE_replace~ BEGIN
	REPLACE_TEXTUALLY ~\(StartMovie("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_2DA_replace~ BEGIN
	REPLACE_TEXTUALLY ~\(IncrementChapter("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(TextScreen("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_VAR_replace~ BEGIN
	REPLACE_TEXTUALLY ~\(Global("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~//also catches SetGlobal and SetTokenGlobal
	REPLACE_TEXTUALLY ~\(GlobalGT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GlobalLT("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GlobalsEqual(.*"\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GlobalsGT(.*"\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(GlobalsLT(.*"\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LocalsEqual(.*"\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LocalsGT(.*"\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(LocalsLT(.*"\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(IncrementGlobal("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(AddGlobals(.*"\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
	REPLACE_TEXTUALLY ~\(SG("\)%resref_index_source%\("\)~ ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_DLGext_replace~ BEGIN
	REPLACE_TEXTUALLY ~~~~~\(EXTERN[ ]+[~"]+\)%resref_index_dest%\([~"]+[ ]\)~~~~~ ~\1%resref_index_dest%\2s~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_traifyDLG_replace~ BEGIN
	REPLACE_TEXTUALLY EXACT_MATCH ~SAY #~ ~SAY @~
	REPLACE_TEXTUALLY EXACT_MATCH ~REPLY #~ ~REPLY @~
	REPLACE_TEXTUALLY EXACT_MATCH ~JOURNAL #~ ~JOURNAL @~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_traifyBCS_replace~ BEGIN
	REPLACE_TEXTUALLY ~SetQuestDone(~ ~SetQuestDone(@~
	REPLACE_TEXTUALLY ~AddJournalEntry(~ ~AddJournalEntry(@~
	REPLACE_TEXTUALLY ~EraseJournalEntry(~ ~EraseJournalEntry(@~
	REPLACE_TEXTUALLY ~SetName(~ ~SetName(@~
	REPLACE_TEXTUALLY ~DisplayStringPoint(~ ~DisplayStringPoint(@~
	REPLACE_TEXTUALLY ~\(DisplayString(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(SetToken(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringNoName(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHeadOwner(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringWait(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(SetPlayerSound([^,]*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(RemoveMapNote(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHeadDead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringNoNameHead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~@-1~ ~-1~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////
//END Macros
/////////////////////////////////////////////////////////////////////////////////////////////////////////
