/////////////////////////////////////////////////////////////////////////////////////////////////////////
//BEGIN Macros
/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION ~textscreen_music~
	INT_VAR
		mus_fadeEnd = 0
		mus_delayEnd = 0
		mus_volumeInt = 1
		mus_volumeFloat = 0
		spe_delayStart = 0
		spe_volumeInt = 1
		spe_volumeFloat = 0
	STR_VAR
		sox = EVAL "EET%os_slash%bin%os_slash%%WEIDU_OS%%os_slash%sox_%os_slash%sox%exe%"
		snd2acm = EVAL "EET%os_slash%bin%os_slash%%WEIDU_OS%%os_slash%snd2acm%exe%"
		temp_dir = EVAL "EET%os_slash%temp"
		input_spe_array = ""
		input_mus = ""
		output = ""
	BEGIN
	AT_NOW ~%sox% --i -D %input_mus% >%temp_dir%\length.txt~
	OUTER_SPRINT input_spe ~~
	ACTION_PHP_EACH "%input_spe_array%" AS index => file BEGIN
		OUTER_SPRINT input_spe ~%input_spe% %file%~
		AT_NOW ~%sox% --i -D %file% >>%temp_dir%\length.txt~
	END
	COPY - ~%temp_dir%/length.txt~ ~.../length.txt~
		SET mus_int = 0
		REPLACE_EVALUATE CASE_INSENSITIVE ~^\([0-9]+\).\([0-9]+\)~ BEGIN
			PATCH_IF (mus_int = 0) BEGIN
				SET mus_int = MATCH1
				SET mus_float = MATCH2
				SET spe_int = 0
				SET spe_float = 0
				PATCH_PRINT ~mus_int = %mus_int%, mus_float = %mus_float%~
			END ELSE BEGIN
				SET spe_int = spe_int + MATCH1
				SET spe_float = spe_float + MATCH2
			END
		END ~~
		WHILE ( spe_float > 1000000 ) BEGIN
			SET spe_int = spe_int + 1
			SET spe_float = spe_float - 1000000
		END
		PATCH_PRINT ~spe_int = %spe_int%, spe_float = %spe_float%~
		SET trim_int = mus_int - spe_int - mus_fadeEnd - mus_delayEnd - spe_delayStart
		SET trim_float = mus_float - spe_float
		PATCH_IF ( trim_float < 0 ) BEGIN
			SET trim_float = 1000000 + trim_float
			SET trim_int = trim_int - 1
		END
	ACTION_IF (trim_int > 0 ) BEGIN
		OUTER_SPRINT trim_mus ~%sox% %input_mus% %temp_dir%\input_mus.wav fade 0 -%trim_int%.%trim_float% %mus_fadeEnd%~ //Parameter 1 is '0' so there is no fade in. Parameter 2 removes the last %trim_int%.%trim_float% seconds Parameter 3 uses a %mus_fadeEnd% fade
		PRINT ~trim_int = %trim_int%, trim_float = %trim_float%~
	END ELSE BEGIN
		OUTER_SPRINT trim_mus ~~
		PRINT ~mus file not trimmed~
		COPY_LARGE + ~%input_mus%~ ~%temp_dir%/input_mus.wav~
	END
	ACTION_IF ~%WEIDU_OS%~ STRING_EQUAL_CASE ~win32~ BEGIN
		OUTER_SPRINT bash_cmd ~~
		OUTER_SPRINT bash_ext ~bat~
	END ELSE BEGIN
		OUTER_SPRINT bash_cmd ~#!/bin/bash~
		OUTER_SPRINT bash_ext ~bash~
	END
<<<<<<<< .../sox.cmd
%bash_cmd%

%trim_mus%
%sox% %input_spe% %temp_dir%%os_slash%out_speech.wav channels 1 rate 22050 vol %spe_volumeInt%.%spe_volumeFloat%
%sox% %temp_dir%%os_slash%input_mus.wav %temp_dir%%os_slash%out_mus.wav channels 1 rate 22050 vol %mus_volumeInt%.%mus_volumeFloat%
%sox% -m %temp_dir%%os_slash%out_mus.wav "|%sox% %temp_dir%%os_slash%out_speech.wav -p pad %spe_delayStart%" %output%
%snd2acm% -wav %output% %output%.acm
>>>>>>>>
	COPY + ~.../sox.cmd~ ~%temp_dir%/sox.%bash_ext%~ EVALUATE_BUFFER
	ACTION_IF ~%WEIDU_OS%~ STR_CMP ~win32~ BEGIN
		AT_NOW ~chmod 755 %temp_dir%/sox.bash~
	END
	AT_NOW ~CALL %temp_dir%%os_slash%sox.%bash_ext%~
	OUTER_INNER_PATCH_SAVE output_dir ~%output%~ BEGIN
		REPLACE_TEXTUALLY ~\\~ ~/~
		REPLACE_TEXTUALLY ~/[^/]+$~ ~~
	END
	OUTER_INNER_PATCH_SAVE output_file ~%output%~ BEGIN
		REPLACE_TEXTUALLY ~\\~ ~/~
		REPLACE_TEXTUALLY ~^.*/~ ~~
	END
	PRINT ~output_dir = %output_dir%, output_file = %output_file%~
	ACTION_BASH_FOR ~%output_dir%~ ~^%output_file%$~ BEGIN 
		OUTER_SET wavsize = BASH_FOR_SIZE + 8
	END
	COPY ~EET/base/dummy.wavc~ ~EET/base/dummy.wavc~ //Read the constant in wavc header
		READ_ASCII 0x10 wavcheader (12)
	BUT_ONLY
	COPY + ~%output_dir%/%output_file%.acm~ ~%output_dir%/%output_file%~
		SET acmsize = SOURCE_SIZE
		PATCH_PRINT ~wavsize = %wavsize%, acmsize = %acmsize%~
		INSERT_BYTES 0x0 28 //WAVC header size
		WRITE_ASCII 0x0 ~WAVCV1.0~ #8
		WRITE_LONG 0x8 wavsize //Uncompressed size: get this from the source WAV before compressing to ACM
		WRITE_LONG 0xc acmsize //Compressed size
		WRITE_EVALUATED_ASCII 0x10 ~%wavcheader%~ #12
	DELETE + ~%output_dir%/%output_file%.acm~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO ~bash_log~ BEGIN //whenever this macro is invoked, it moves the contents of EET/temp/bash.debug to the real log.
	LOCAL_SET ln=0
	LOCAL_SPRINT log ~~
	ACTION_IF FILE_EXISTS ~EET/temp/bash.debug~ AND NOT FILE_SIZE ~EET/temp/bash.debug~ 0 BEGIN //don't do this if no log is available now.
		COPY + ~EET/temp/bash.debug~ ~EET/temp/bash.debug~
			ln=BUFFER_LENGTH
			READ_ASCII 0 log (ln)
			DELETE_BYTES 0 ln
			PATCH_LOG ~%log%~
			SPRINT log ~~
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO ~EET_WRITE_SSET~ BEGIN //Workaround for regexp glitch in Gort's WRITE_SOUNDSET
	COPY_EXISTING ~%npc%~ ~override~
		PATCH_IF SOURCE_SIZE > 0x2d3 BEGIN
			FOR (j1 = 0; j1 < 100; j1 += 1) BEGIN
				READ_LONG (0xa4 + j1 * 4) srf
				SET nsrf = EVAL ~%soundset%_%j1%~
				PATCH_IF (overwrite = 0) AND (srf = (0 - 1)) BEGIN //Soft writing
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END ELSE PATCH_IF (overwrite = 1) AND NOT (nsrf = (0 - 1)) BEGIN //Forced writing
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END ELSE PATCH_IF overwrite = 2 BEGIN //Overwrite regardless
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END
			END
		END
	BUT_ONLY
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

//Dumps the areas and links of a .wmp file to textual data
DEFINE_PATCH_FUNCTION ~dump_wmp~
	INT_VAR
		tra_read = 0
		move_x = 0
		move_y = 0
		compare_bams = 0
		skip_areas = 0
		skip_links = 0
	STR_VAR
		2da_links_array = ""
		icons_array = ""
		tra = ""
		output_areas = EVAL "%SOURCE_RES%_areas.2da"
		output_links = EVAL "%SOURCE_RES%_links.2da"
		output_strings = EVAL "%SOURCE_RES%_trans.tra"
	BEGIN
	SPRINT tilde "~"
	SPRINT quote ~"~
	SPRINT area_string "SHORT_NAME CONTENT LONG_NAME FLAGS BAM_ANIM X_POS Y_POS NAME TOOLTIP LOAD_IM%LNL%"
	SPRINT link_string "SRC_AREA SRC_NWSE TARGET_ARE ENTRY_NAME TRV_TIME DEF_ENTRY ENC1 ENC2 ENC3 ENC4 ENC5 ENC_PROB%LNL%"
	SPRINT trans_string ""
	SPRINT area_log ""
	READ_LONG 0x30 na
	READ_LONG 0x34 ao
	READ_LONG 0x38 lo
	FOR (i=0;i<na;++i) BEGIN
		READ_ASCII ao + 0xf0*i area
		PATCH_IF (skip_areas = 0) BEGIN
			READ_LONG ao + 0xf0*i + 0x30 flags
			READ_LONG ao + 0xf0*i + 0x34 bam
			PHP_EACH "%icons_array%" AS "compare" => "icon" BEGIN
				PATCH_IF (~%area%~ STRING_EQUAL_CASE ~%compare%~) BEGIN
					SPRINT area_log ~%area_log% %area%~
					PATCH_PRINT ~%area% wmp icon patching: %bam% -> %icon%~
					SET bam = icon
				END
			END
			PATCH_IF (compare_bams = 1) BEGIN
				PHP_EACH "%icons_array%" AS "compare" => "icon" BEGIN
					PATCH_IF (~%bam%~ STRING_EQUAL_CASE ~%compare_1%~) AND (~%area_log%~ STRING_CONTAINS_REGEXP ~%area%~) BEGIN
						SPRINT area_log ~%area_log% %area%~
						PATCH_PRINT ~%area% wmp icon patching: %bam% -> %icon%~
						SET bam = icon
					END
				END
			END
			READ_LONG ao + 0xf0*i + 0x38 xcor
			SET xcor = xcor + move_x
			READ_LONG ao + 0xf0*i + 0x3c ycor
			SET ycor = ycor + move_y
			//READ_ASCII ao + 0xf0*i + 0x48 load
			SPRINT load N
			READ_LONG ao + 0xf0*i + 0x40 name
			READ_LONG ao + 0xf0*i + 0x44 tool
			PATCH_IF (tra_read = 0) BEGIN
				PATCH_IF (name < 0) BEGIN
					SPRINT name ~~
					SPRINT tool ~~
				END ELSE BEGIN
					READ_STRREF ao + 0xf0*i + 0x40 name
					READ_STRREF ao + 0xf0*i + 0x44 tool
				END
			END ELSE BEGIN
				INNER_ACTION BEGIN
					ACTION_IF (FILE_CONTAINS_EVALUATED (~%tra%~ ~^[ 	]*@%name%[ 	]*=[ 	]*[%tilde%%quote%]\(.*\)[%tilde%%quote%][^%tilde%^%quote%]*$~)) BEGIN
						COPY - ~%tra%~ ~%tra%~
							REPLACE_EVALUATE CASE_INSENSITIVE ~^[ 	]*@%name%[ 	]*=[ 	]*[%tilde%%quote%]\(.*\)[%tilde%%quote%][^%tilde%^%quote%]*$~ BEGIN
								SPRINT name "%MATCH1%"
								SPRINT tool "%MATCH1%"
							END
							~~
					END ELSE BEGIN
						OUTER_SPRINT name ~~
						OUTER_SPRINT tool ~~
					END
				END
			END
			SET doOnce = 0
			PATCH_FOR_EACH var IN name tool BEGIN
				SPRINT content EVAL "%%var%%"
				PATCH_IF ("%content%" STRING_EQUAL_CASE "") BEGIN
					SPRINT EVAL "%var%" N
				END ELSE BEGIN
					INNER_PATCH_SAVE content "%content%" BEGIN
						REPLACE_TEXTUALLY " " "###"
					END
					PATCH_IF (doOnce = 0) BEGIN
						SPRINT trans_string "%trans_string%@%area% = %quote%%content%%quote%%LNL%"
						SET doOnce = 1
					END
					SPRINT EVAL "%var%" "@%area%"
				END
			END
			SPRINT area_string "%area_string%%area% %area% %area% %flags% %bam% %xcor% %ycor% %name% %tool% %load%%LNL%"
		END
		PATCH_IF (skip_links = 0) BEGIN
			PATCH_FOR_EACH j IN 0 3 2 1 BEGIN
				READ_LONG ao + 0xf0*i + 0x50 + 0x8*j li
				READ_LONG ao + 0xf0*i + 0x54 + 0x8*j nl
				FOR (k=0;k<nl;++k) BEGIN
					READ_LONG lo + 0xd8*(li + k) target
					READ_ASCII ao + 0xf0*target target_are
					READ_ASCII lo + 0xd8*(li + k) + 0x4 entry (32) NULL
					READ_LONG lo + 0xd8*(li + k) + 0x24 time
					READ_LONG lo + 0xd8*(li + k) + 0x28 flags
					READ_ASCII lo + 0xd8*(li + k) + 0x2c enc1
					READ_ASCII lo + 0xd8*(li + k) + 0x34 enc2
					READ_ASCII lo + 0xd8*(li + k) + 0x3c enc3
					READ_ASCII lo + 0xd8*(li + k) + 0x44 enc4
					READ_ASCII lo + 0xd8*(li + k) + 0x4c enc5
					READ_LONG lo + 0xd8*(li + k) + 0x54 prob
					PATCH_FOR_EACH var IN entry enc1 enc2 enc3 enc4 enc5 BEGIN
						SPRINT content EVAL "%%var%%"
						PATCH_IF ("%content%" STRING_EQUAL_CASE "") BEGIN
							SPRINT EVAL "%var%" N
						END ELSE BEGIN
							INNER_PATCH_SAVE content "%content%" BEGIN
								REPLACE_TEXTUALLY " " "###"
							END
							SPRINT EVAL "%var%" "%content%"
						END
					END
					INNER_PATCH_SAVE nesw "%j%" BEGIN
						REPLACE_TEXTUALLY 0 N
						REPLACE_TEXTUALLY 1 W
						REPLACE_TEXTUALLY 2 S
						REPLACE_TEXTUALLY 3 E
					END
					PATCH_IF (("%link_string%" STRING_CONTAINS_REGEXP "%area% %nesw% %target_are% %entry% %time% %flags% %enc1% %enc2% %enc3% %enc4% %enc5% %prob%")=0) BEGIN
						PATCH_PRINT ~Skipping duplicated link: %area% %nesw% %target_are% %entry% %time% %flags% %enc1% %enc2% %enc3% %enc4% %enc5% %prob%~
					END ELSE BEGIN
						SPRINT link_string "%link_string%%area% %nesw% %target_are% %entry% %time% %flags% %enc1% %enc2% %enc3% %enc4% %enc5% %prob%%LNL%"
					END
				END
			END
		END
	END
	INNER_ACTION BEGIN
		ACTION_PHP_EACH "%2da_links_array%" AS "source" => "file" BEGIN
			COPY_EXISTING - ~%file%.2da~ ~override~
				PRETTY_PRINT_2DA
				REPLACE_TEXTUALLY ~\*~ ~N~
				REPLACE_EVALUATE CASE_INSENSITIVE ~^[0-9]+[ ]+\([A-Za-z0-9#]+\)+[ ]+\([0-9]+\)[ ]+\([A-Za-z0-9#]+\)[ ]+\([0-9]+\)[ ]+\([0-9]+\)[ ]+\([A-Za-z0-9#]+\)[ ]+\([A-Za-z0-9#]+\)[ ]+\([A-Za-z0-9#]+\)[ ]+\([A-Za-z0-9#]+\)[ ]+\([A-Za-z0-9#]+\)[ ]+\([A-Za-z0-9#]+\)$~ BEGIN
					SPRINT nesw ~%MATCH11%~
					INNER_PATCH_SAVE nesw "%nesw%" BEGIN
						REPLACE_TEXTUALLY 0 N
						REPLACE_TEXTUALLY 1 W
						REPLACE_TEXTUALLY 2 S
						REPLACE_TEXTUALLY 3 E
					END
					PATCH_IF (("%link_string%" STRING_CONTAINS_REGEXP "%source% %nesw% %MATCH1% %MATCH3% %MATCH4% %MATCH2% %MATCH6% %MATCH7% %MATCH8% %MATCH9% %MATCH10% %MATCH5%")=0) BEGIN
						PATCH_PRINT ~Skipping duplicated link: %source% %nesw% %MATCH1% %MATCH3% %MATCH4% %MATCH2% %MATCH6% %MATCH7% %MATCH8% %MATCH9% %MATCH10% %MATCH5%~
					END ELSE BEGIN
						SPRINT link_string "%link_string%%source% %nesw% %MATCH1% %MATCH3% %MATCH4% %MATCH2% %MATCH6% %MATCH7% %MATCH8% %MATCH9% %MATCH10% %MATCH5%%LNL%"
					END
				END
				~~
		END
<<<<<<<< ...blank
>>>>>>>>
		ACTION_IF (skip_areas = 0) BEGIN
			COPY + ~...blank~ ~%output_areas%~
				INSERT_BYTES 0 STRING_LENGTH "%area_string%"
				WRITE_ASCIIE 0 "%area_string%"
				PRETTY_PRINT_2DA
				REPLACE_TEXTUALLY ~^[ ]+~ ~~
			COPY + ~...blank~ ~%output_strings%~
				INSERT_BYTES 0 STRING_LENGTH "%trans_string%"
				WRITE_ASCIIE 0 "%trans_string%"
		END
		ACTION_IF (skip_links = 0) BEGIN
			COPY + ~...blank~ ~%output_links%~
				INSERT_BYTES 0 STRING_LENGTH "%link_string%"
				WRITE_ASCIIE 0 "%link_string%"
				PRETTY_PRINT_2DA
				REPLACE_TEXTUALLY ~^[ ]+~ ~~
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~read_area_array_from_2da~ BEGIN
	LOCAL_SPRINT fl#r2en_area ""
	LOCAL_SET i = 0
	LOCAL_SPRINT area ""
	LOCAL_SPRINT short ""
	LOCAL_SPRINT long ""
	LOCAL_SET flags = 0
	LOCAL_SET bam = 0
	LOCAL_SET x_cor = 0
	LOCAL_SET y_cor = 0
	LOCAL_SPRINT name ""
	LOCAL_SPRINT tool ""
	LOCAL_SPRINT load ""
	LOCAL_SPRINT var ""
	LOCAL_SPRINT cmp ""
	LOCAL_SPRINT array ""

	PATCH_PRINT ~read_area_array_from_2da~
	READ_2DA_ENTRIES_NOW fl#r2en_area 10
	FOR (i=0;i<fl#r2en_area;++i) BEGIN
		READ_2DA_ENTRY_FORMER fl#r2en_area i 0 area
		READ_2DA_ENTRY_FORMER fl#r2en_area i 1 short
		READ_2DA_ENTRY_FORMER fl#r2en_area i 2 long
		READ_2DA_ENTRY_FORMER fl#r2en_area i 3 flags
		READ_2DA_ENTRY_FORMER fl#r2en_area i 4 bam
		READ_2DA_ENTRY_FORMER fl#r2en_area i 5 x_cor
		READ_2DA_ENTRY_FORMER fl#r2en_area i 6 y_cor
		READ_2DA_ENTRY_FORMER fl#r2en_area i 7 name
		READ_2DA_ENTRY_FORMER fl#r2en_area i 8 tool
		READ_2DA_ENTRY_FORMER fl#r2en_area i 9 load
		PATCH_PRINT ~%area% %short% %long% %flags% %bam% %x_cor% %y_cor% %name% %tool% %load%~
		TO_LOWER area
		TO_UPPER name
		TO_UPPER tool
		PATCH_IF "%area%" STRING_COMPARE_CASE SHORT_NAME AND
		"%area%" STRING_COMPARE_CASE CONTENT AND
		FILE_EXISTS_IN_GAME "%area%.are" BEGIN
			PATCH_IF !VARIABLE_IS_SET $fl#CONTENT("%area%") BEGIN
				SET $fl#CONTENT("%area%") = 0
			END
			SPRINT $fl#SHORT("%area%") "%short%"
			SPRINT $fl#LONG("%area%") "%long%"
			SET $fl#FLAGS("%area%") = flags
			SET $fl#BAM("%area%") = bam
			SET $fl#XCOR("%area%") = x_cor
			SET $fl#YCOR("%area%") = y_cor
			PATCH_FOR_EACH var IN name tool load BEGIN
				SPRINT cmp EVAL "%%var%%"
				SPRINT array "%var%"
				TO_UPPER array
				PATCH_IF "%cmp%" STRING_COMPARE_CASE N BEGIN
					SPRINT $EVAL "fl#%array%"("%area%") EVAL "%%var%%"
				END
			END
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~read_link_array_from_2da~ BEGIN
	LOCAL_SPRINT fl#r2en_link ""
	LOCAL_SET i = 0
	LOCAL_SPRINT src ""
	LOCAL_SPRINT j ""
	LOCAL_SPRINT trgt ""
	LOCAL_SPRINT entry ""
	LOCAL_SET time = 0
	LOCAL_SET def = 0
	LOCAL_SPRINT enc1 ""
	LOCAL_SPRINT enc2 ""
	LOCAL_SPRINT enc3 ""
	LOCAL_SPRINT enc4 ""
	LOCAL_SPRINT enc5 ""
	LOCAL_SET prob = 0
	LOCAL_SPRINT var ""
	LOCAL_SPRINT cmp ""
	LOCAL_SPRINT array ""

	PATCH_PRINT ~read_link_array_from_2da~
	SET $j_array(n) = 0
	SET $j_array(e) = 3
	SET $j_array(s) = 2
	SET $j_array(w) = 1
	READ_2DA_ENTRIES_NOW fl#r2en_link 12
	FOR (i=0;i<fl#r2en_link;++i) BEGIN
		READ_2DA_ENTRY_FORMER fl#r2en_link i 0  src
		READ_2DA_ENTRY_FORMER fl#r2en_link i 1  j
		READ_2DA_ENTRY_FORMER fl#r2en_link i 2  trgt
		READ_2DA_ENTRY_FORMER fl#r2en_link i 3  entry
		READ_2DA_ENTRY_FORMER fl#r2en_link i 4  time
		READ_2DA_ENTRY_FORMER fl#r2en_link i 5  def
		READ_2DA_ENTRY_FORMER fl#r2en_link i 6  enc1
		READ_2DA_ENTRY_FORMER fl#r2en_link i 7  enc2
		READ_2DA_ENTRY_FORMER fl#r2en_link i 8  enc3
		READ_2DA_ENTRY_FORMER fl#r2en_link i 9  enc4
		READ_2DA_ENTRY_FORMER fl#r2en_link i 10 enc5
		READ_2DA_ENTRY_FORMER fl#r2en_link i 11 prob
		PATCH_PRINT ~%src% %j% %trgt% %entry% %time% %def% %enc1% %enc2% %enc3% %enc4% %enc5% %prob%~
		TO_LOWER src
		TO_LOWER j
		TO_LOWER trgt
		PATCH_IF ("%src%" STRING_COMPARE_CASE SRC_AREA AND
		"%trgt%" STRING_COMPARE_CASE TARGET_AREA AND
		"%trgt%" STRING_COMPARE_CASE TARGET_ARE) AND
		(!VARIABLE_IS_SET $fl#LINK_BLACKLIST("%src%" "%j%" "%trgt%") OR
		(VARIABLE_IS_SET $fl#LINK_BLACKLIST("%src%" "%j%" "%trgt%") AND
		$fl#LINK_BLACKLIST("%src%" "%j%" "%trgt%") = 0)) AND
		FILE_EXISTS_IN_GAME "%src%.are" AND
		FILE_EXISTS_IN_GAME "%trgt%.are" BEGIN
			j = $j_array("%j%")
			PATCH_IF !VARIABLE_IS_SET $EVAL "fl#INDEX_%j%"("%src%" "%trgt%") BEGIN
				SET $EVAL "fl#INDEX_%j%"("%src%" "%trgt%") = 0
			END
			SET $fl#TIME("%src%" "%j%" "%trgt%") = time
			SET $fl#DEF("%src%" "%j%" "%trgt%") = def
			PATCH_FOR_EACH var IN entry enc1 enc2 enc3 enc4 enc5 BEGIN
				SPRINT cmp EVAL "%%var%%"
				SPRINT array "%var%"
				TO_UPPER array
				INNER_PATCH_SAVE cmp "%cmp%" BEGIN
					REPLACE_TEXTUALLY "###" " "
				END
				PATCH_IF "%cmp%" STRING_COMPARE_CASE N BEGIN
					SPRINT $EVAL "fl#%array%"("%src%" "%j%" "%trgt%") "%cmp%"
				END
			END
			SET $fl#PROB("%src%" "%j%" "%trgt%") = prob
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~read_trans_array_from_2da~ BEGIN
	LOCAL_SPRINT fl#r2en_trans ""
	LOCAL_SET i = 0
	LOCAL_SPRINT id ""
	LOCAL_SPRINT string ""

	PATCH_PRINT ~read_trans_array_from_2da~
	READ_2DA_ENTRIES_NOW fl#r2en_trans 3
	FOR (i=0;i<fl#r2en_trans;++i) BEGIN
		READ_2DA_ENTRY_FORMER fl#r2en_trans i 0 id
		READ_2DA_ENTRY_FORMER fl#r2en_trans i 2 string
		TO_UPPER id
		PATCH_IF "%id%" STRING_MATCHES_REGEXP "^@" = 0 BEGIN
			INNER_PATCH_SAVE string "%string%" BEGIN
				REPLACE_TEXTUALLY "###" " "
				REPLACE_TEXTUALLY ~"~ ~~ //" //This is a stupid hack to get around a deficiency in my editor
				REPLACE_TEXTUALLY "~" ""
			END
			SPRINT $fl#TRANS("%id%") "%string%"
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~read_blacklist_array_from_2da~ BEGIN
	LOCAL_SPRINT fl#r2en_blacklist ""
	LOCAL_SET i = 0
	LOCAL_SPRINT src ""
	LOCAL_SPRINT j ""
	LOCAL_SPRINT trgt ""

	READ_2DA_ENTRIES_NOW fl#r2en_blacklist 3
	FOR (i = 0; i < fl#r2en_blacklist; ++i) BEGIN
		READ_2DA_ENTRY_FORMER fl#r2en_blacklist i 0 src
		READ_2DA_ENTRY_FORMER fl#r2en_blacklist i 1 j
		READ_2DA_ENTRY_FORMER fl#r2en_blacklist i 2 trgt
		TO_LOWER src
		TO_LOWER j
		TO_LOWER trgt
		SET $fl#LINK_BLACKLIST("%src%" "%j%" "%trgt%") = 1
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~apply_link_patches~ BEGIN
	LOCAL_SPRINT r2en_patches ""
	LOCAL_SET result = 0
	LOCAL_SET i = 0
	LOCAL_SET j = 0
	LOCAL_SPRINT source ""
	LOCAL_SPRINT nesw ""
	LOCAL_SPRINT target ""
	LOCAL_SPRINT entry ""
	LOCAL_SET dist = 0
	LOCAL_SET def_entry = 0
	LOCAL_SPRINT enc1 ""
	LOCAL_SPRINT enc2 ""
	LOCAL_SPRINT enc3 ""
	LOCAL_SPRINT enc4 ""
	LOCAL_SPRINT enc5 ""
	LOCAL_SET enc_prob = 0
	LOCAL_SET j = 0
	LOCAL_SPRINT var ""
	LOCAL_SPRINT cmp ""
	LOCAL_SPRINT array ""

	SET $j_array(n) = 0
	SET $j_array(e) = 3
	SET $j_array(s) = 2
	SET $j_array(w) = 1
	READ_2DA_ENTRIES_NOW r2en_patches 13

	//Barf indeed, but I can't think of a better solution atm
	FOR (i = 0; i < r2en_patches; ++i) BEGIN
		READ_2DA_ENTRY_FORMER r2en_patches i 12 id
		PATCH_IF "%id%" STRING_COMPARE_CASE NN BEGIN
			SET $fl#patches("%id%") = 0
		END
	END
	FOR (i = 0; i < r2en_patches; ++i) BEGIN
		READ_2DA_ENTRY_FORMER r2en_patches i 12 id
		PATCH_IF !"%id%" STRING_EQUAL_CASE NN AND $fl#patches("%id%") = 0 BEGIN
			FOR (j = 0; j < r2en_patches; ++j) BEGIN
				READ_2DA_ENTRY_FORMER r2en_patches j 12 id2
				PATCH_IF j > i AND id = id2 BEGIN
					SET $fl#patches("%id%") = 1
					READ_2DA_ENTRY_FORMER r2en_patches j 0 source
					READ_2DA_ENTRY_FORMER r2en_patches j 1 nesw
					READ_2DA_ENTRY_FORMER r2en_patches j 2 target
					READ_2DA_ENTRY_FORMER r2en_patches j 3 entry
					READ_2DA_ENTRY_FORMER r2en_patches j 4 dist
					READ_2DA_ENTRY_FORMER r2en_patches j 5 def_entry
					READ_2DA_ENTRY_FORMER r2en_patches j 6 enc1
					READ_2DA_ENTRY_FORMER r2en_patches j 7 enc2
					READ_2DA_ENTRY_FORMER r2en_patches j 8 enc3
					READ_2DA_ENTRY_FORMER r2en_patches j 9 enc4
					READ_2DA_ENTRY_FORMER r2en_patches j 10 enc5
					READ_2DA_ENTRY_FORMER r2en_patches j 11 enc_prob
					TO_LOWER source
					TO_LOWER nesw
					TO_LOWER target
					PATCH_IF "%source%" STRING_COMPARE_CASE SRC_AREA AND
					"%target%" STRING_COMPARE_CASE TARGET_ARE BEGIN
						j = $j_array("%nesw%")
						PATCH_IF VARIABLE_IS_SET $EVAL "fl#INDEX_%j%"("%source%" "%target%") BEGIN
							SPRINT $fl#ENTRY("%source%" "%j%" "%target%") "%entry%"
							SET $fl#TIME("%source%" "%j%" "%target%") = dist
							SET $fl#DEF("%source%" "%j%" "%target%") = def_entry
							PATCH_FOR_EACH var IN enc1 enc2 enc3 enc4 enc5 BEGIN
								SPRINT cmp EVAL "%%var%%"
								SPRINT array "%var%"
								TO_UPPER array
								PATCH_IF "%cmp%" STRING_COMPARE_CASE N BEGIN
									SPRINT $EVAL "fl#%array%"("%source%" "%j%" "%target%") "%cmp%"
								END
							END
							SET $fl#PROB("%source%" "%j%" "%target%") = enc_prob
						END
					END
					j = r2en_patches
				END
			END
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO ~merge_in_translations~ BEGIN
	LOCAL_SPRINT array ""
	LOCAL_SPRINT area ""
	LOCAL_SPRINT result ""

	//Swap the tra references for the associated string
	ACTION_FOR_EACH array IN fl#NAME fl#TOOL BEGIN
		ACTION_PHP_EACH "%array%" AS area => result BEGIN
			ACTION_IF VARIABLE_IS_SET $fl#TRANS("%result%") BEGIN
				OUTER_SPRINT $EVAL "%array%"("%area%") $fl#TRANS("%result%")
			END
		END
	END

	//If there are tra references for which there was no data provided, null the array value
	ACTION_FOR_EACH array IN fl#NAME fl#TOOL BEGIN
		ACTION_PHP_EACH "%array%" AS area => result BEGIN
			ACTION_IF "%result%" STRING_MATCHES_REGEXP "^@.*" = 0 BEGIN
				OUTER_SPRINT $EVAL "%array%"("%area%") ""
			END
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION ~fix_table~ BEGIN
	REPLACE_TEXTUALLY EVALUATE_REGEXP ~\([0-9]+\)\(SHORT_NAME\)~ ~\1%LNL%%LNL%\2~
	REPLACE_TEXTUALLY EVALUATE_REGEXP ~\([0-9]+\)\(//\)~ ~\1%LNL%%LNL%\2~
	REPLACE_TEXTUALLY EVALUATE_REGEXP ~\([0-9]+\)\(SRC_AREA\)~ ~\1%LNL%%LNL%\2~
	REPLACE_TEXTUALLY EVALUATE_REGEXP ~~~~~\("\|~\|%\)\(@\)~~~~~ ~~~~~\1%LNL%%LNL%\2~~~~~
	REPLACE_TEXTUALLY EVALUATE_REGEXP ~~~~~\("\|~\|%\)\(//\)~~~~~ ~~~~~\1%LNL%%LNL%\2~~~~~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION install_area_table
	STR_VAR
	table = ""
BEGIN
	ACTION_IF "%table%" STR_CMP "" BEGIN
		ACTION_IF FILE_EXISTS "worldmap/map_mods_areas.tbl" BEGIN
			COPY "worldmap/map_mods_areas.tbl" "worldmap/map_mods_areas.tbl"
				APPEND_FILE_EVALUATE ".../fl#inline/newlines"
				APPEND_FILE "%table%"
			BUT_ONLY
		END ELSE BEGIN
			COPY "%table%" "worldmap/map_mods_areas.tbl"
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION install_link_table
	STR_VAR
	table = ""
BEGIN
	ACTION_IF "%table%" STR_CMP "" BEGIN
		ACTION_IF FILE_EXISTS "worldmap/map_mods_links.tbl" BEGIN
			COPY "worldmap/map_mods_links.tbl" "worldmap/map_mods_links.tbl"
				APPEND_FILE_EVALUATE ".../fl#inline/newlines"
				APPEND_FILE "%table%"
			BUT_ONLY
		END ELSE BEGIN
			COPY "%table%" "worldmap/map_mods_links.tbl"
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION install_translation_table
	STR_VAR
	table = ""
BEGIN
	ACTION_IF "%tablel%" STR_CMP "" BEGIN
		ACTION_IF FILE_EXISTS "worldmap/map_mods_trans.tra" BEGIN
			COPY "worldmap/map_mods_trans.tra" "worldmap/map_mods_trans.tra"
				APPEND_FILE_EVALUATE ".../fl#inline/newlines"
				APPEND_FILE "%table%"
			BUT_ONLY
		END ELSE BEGIN
			COPY "%table%" "worldmap/map_mods_trans.tra"
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~PCU_core_patch~ BEGIN

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//GAM patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.GAM$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching gam version 1.1 file %patch_name%...~

		///////////////////////
		//NPCS
		///////////////////////
		READ_LONG 0x30 npcs_off
		READ_LONG 0x34 npcs_cnt

		FOR (cnt=0; cnt<"%npcs_cnt%"; cnt=cnt+1) BEGIN

			///////////////////////
			//0xc CRE resref
			///////////////////////
			SET offset = ("%npcs_off%"+0x160*cnt+0xc)
			READ_ASCII offset "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			///////////////////////
			//0x18 ARE resref
			///////////////////////
			SET offset = ("%npcs_off%"+0x160*cnt+0x18)
			READ_ASCII offset "resref_are"
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		SET gam_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//ARE patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "AREAV1.0") AND (SOURCE_SIZE > 0x11b) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching area version 1.0 file %patch_name%...~

		///////////////////////
		//0x8 WED resref
		///////////////////////
		READ_ASCII 0x8 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x8 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x8~
			END
		END

		///////////////////////
		//0x18 north ARE resref
		///////////////////////
		READ_ASCII 0x18 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x18 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x18~
			END
		END

		///////////////////////
		//0x24 east ARE resref
		///////////////////////
		READ_ASCII 0x24 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x24 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x24~
			END
		END

		///////////////////////
		//0x30 south ARE resref
		///////////////////////
		READ_ASCII 0x30 "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x30~
			END
		END

		///////////////////////
		//0x3c west ARE resref
		///////////////////////
		READ_ASCII 0x3c "resref_are" (6)
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x3c "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x3c~
			END
		END

		///////////////////////
		//0x94 BCS resref
		///////////////////////
		READ_ASCII 0x94 "resref_bcs"
		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x94 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x94~
			END
		END

		///////////////////////
		//Actors
		///////////////////////
		READ_LONG 0x54 "actors_off"
		READ_SHORT 0x58 "actors_cnt"
		FOR (cnt=0; cnt<"%actors_cnt%"; cnt=cnt+1) BEGIN

			//0x48 area-specific creature DLG resref
			SET offset = ("%actors_off%"+0x110*cnt+0x48)
			READ_ASCII offset "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x50 area-specific creature override BCS resref
			SET offset = ("%actors_off%"+0x110*cnt+0x50)
			READ_ASCII offset "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x58 area-specific creature class BCS resref
			SET offset = ("%actors_off%"+0x110*cnt+0x58)
			READ_ASCII offset "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x60 area-specific creature race BCS resref
			SET offset = ("%actors_off%"+0x110*cnt+0x60)
			READ_ASCII offset "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x68 area-specific creature general BCS resref
			SET offset = ("%actors_off%"+0x110*cnt+0x68)
			READ_ASCII offset "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x70 area-specific creature default BCS resref
			SET offset = ("%actors_off%"+0x110*cnt+0x70)
			READ_ASCII offset "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x78 area-specific creature specific BCS resref
			SET offset = ("%actors_off%"+0x110*cnt+0x78)
			READ_ASCII offset "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x80 CRE resref
			SET offset = ("%actors_off%"+0x110*cnt+0x80)
			READ_ASCII offset "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		///////////////////////////////////////
		//Info points, trigger points, and exit
		///////////////////////////////////////
		READ_LONG 0x5c "info_off"
		READ_SHORT 0x5a "info_cnt"
		FOR (cnt=0; cnt<"%info_cnt%"; cnt=cnt+1) BEGIN

			//0x0 trigger name (may contains area numbers for doors)
			SET offset = ("%info_off%"+0xc4*cnt)
			READ_ASCII offset "resref_door" (8)
			FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
			READ_ASCII offset "resref_door" (6)
			FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
			READ_ASCII offset "resref_door" (7)
			FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
			READ_ASCII offset "resref_door" (5)
			FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_door%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x38 destination ARE resref
			SET offset = ("%info_off%"+0xc4*cnt+0x38)
			READ_ASCII offset "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x7c region BCS resref
			SET offset = ("%info_off%"+0xc4*cnt+0x7c)
			READ_ASCII offset "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0xbc trigger DLG resref for prox triggers
			SET offset = ("%info_off%"+0xc4*cnt+0xbc)
			READ_ASCII offset "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		//////////////
		//Entrances
		//////////////
		READ_LONG 0x68 "entry_off"
		READ_SHORT 0x6c "entry_cnt"
		FOR (cnt=0; cnt<"%entry_cnt%"; cnt=cnt+1) BEGIN

			//0x0 entrance name (contains area numbers)
			SET offset = ("%entry_off%"+0x68*cnt)
			READ_ASCII offset "resref_exit" (8)
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
			READ_ASCII offset "resref_exit" (6)
			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
			READ_ASCII offset "resref_exit" (7)
			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
			READ_ASCII offset "resref_exit" (5)
			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		//////////////
		//Spawn points
		//////////////
		READ_LONG 0x60 "spawn_off"
		READ_SHORT 0x64 "spawn_cnt"
		FOR (cnt=0; cnt<"%spawn_cnt%"; cnt=cnt+1) BEGIN

			//0x24 spawn CRE resref 1
			//0x2c spawn CRE resref 2
			//0x34 spawn CRE resref 3
			//0x3c spawn CRE resref 4
			//0x44 spawn CRE resref 5
			//0x4c spawn CRE resref 6
			//0x54 spawn CRE resref 7
			//0x5c spawn CRE resref 8
			//0x64 spawn CRE resref 9
			//0x6c spawn CRE resref 10
			FOR (j=0; j<10; j=j+1) BEGIN
				SET offset = ("%spawn_off%"+0xc8*cnt+0x24+0x8*j)
				READ_ASCII offset "resref_cre"
				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

		END

		////////////
		//Containers
		////////////
		READ_LONG 0x70 "contain_off"
		READ_SHORT 0x74 "contain_cnt"
		FOR (cnt=0; cnt<"%contain_cnt%"; cnt=cnt+1) BEGIN

			//0x48 trap BCS resref
			SET offset = ("%contain_off%"+0xc0*cnt+0x48)
			READ_ASCII offset "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x58 creature CRE resref
			SET offset = ("%contain_off%"+0xc0*cnt+0x58)
			READ_ASCII offset "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x78 key ITM resref
			SET offset = ("%contain_off%"+0xc0*cnt+0x78)
			READ_ASCII offset "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		/////////////////
		//Container Items
		/////////////////
		READ_LONG 0x78 "citem_off"
		READ_SHORT 0x76 "citem_cnt"
		FOR (cnt=0; cnt<"%citem_cnt%"; cnt=cnt+1) BEGIN

			//0x0 ITM resref
			SET offset = ("%citem_off%"+0x14*cnt)
			READ_ASCII offset "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		//////////
		//Ambients
		//////////
		READ_LONG 0x84 "ambient_off"
		READ_SHORT 0x82 "ambient_cnt"
		FOR (cnt=0; cnt<"%ambient_cnt%"; cnt=cnt+1) BEGIN

			//0x30 ambient WAV resref 1
			//0x38 ambient WAV resref 2
			//0x40 ambient WAV resref 3
			//0x48 ambient WAV resref 4
			//0x50 ambient WAV resref 5
			//0x58 ambient WAV resref 6
			//0x60 ambient WAV resref 7
			//0x68 ambient WAV resref 8
			//0x70 ambient WAV resref 9
			//0x78 ambient WAV resref 10
			FOR (j=0; j<10; j=j+1) BEGIN
				SET offset = ("%ambient_off%"+0xd4*cnt+0x30+0x8*j)
				READ_ASCII offset "resref_wav"
				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

		END

		///////
		//Doors
		///////
		READ_LONG 0xa8 "door_off"
		READ_SHORT 0xa4 "door_cnt"
		FOR (cnt=0; cnt<"%door_cnt%"; cnt=cnt+1) BEGIN

			//0x58 door open WAV resref
			SET offset = ("%door_off%"+0xc8*cnt+0x58)
			READ_ASCII offset "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x60 door close WAV resref
			SET offset = ("%door_off%"+0xc8*cnt+0x60)
			READ_ASCII offset "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x78 key ITM resref
			SET offset = ("%door_off%"+0xc8*cnt+0x78)
			READ_ASCII offset "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x80 open BCS resref
			SET offset = ("%door_off%"+0xc8*cnt+0x80)
			READ_ASCII offset "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0xb8 open DLG resref
			SET offset = ("%door_off%"+0xc8*cnt+0xb8)
			READ_ASCII offset "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		////////////
		//Animations
		////////////
		READ_LONG 0xb0 "anim_off"
		READ_SHORT 0xac "anim_cnt"
		FOR (cnt=0; cnt<"%anim_cnt%"; cnt=cnt+1) BEGIN

			//0x28 BAM resref
			SET offset = ("%anim_off%"+0x4c*cnt+0x28)
			READ_ASCII offset "resref_bam"
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		///////
		//Songs
		///////
		READ_LONG 0xbc "song_off"

		//0x0 area day song dword
		//0x04 area night song dword
		//0x08 area win song dword
		//0x0c area battle song dword
		//0x10 area lose song dword
		FOR (j=0; j<10; j=j+1) BEGIN
			SET offset = ("%song_off%"+0x04*j)
			READ_LONG offset "dword_mus"
			FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
				SPRINT name_source "dword_mus_source%i%"
				SPRINT name_dest "dword_mus_dest%i%"
				SPRINT dword_index_source EVAL ~%%name_source%%~
				SPRINT dword_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%dword_mus%" = "%dword_index_source%") AND ("%dword_mus%" > 0) BEGIN
					WRITE_LONG offset "%dword_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: MUSIC = %dword_index_source% => %dword_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_IF (dword_index_source > 0) AND (dword_index_dest = 0) BEGIN
						//PATCH_WARN ~WARNING: %str%~
						PATCH_PRINT ~ATTENTION: %str%~
					END ELSE BEGIN
						PATCH_PRINT ~%str%~
					END
				END
			END
		END

		//0x28 area ambient (day) 1 WAV resref
		//0x30 area ambient (day) 2 WAV resref
		FOR (j=0; j<2; j=j+1) BEGIN
			SET offset = ("%song_off%"+0x28+0x8*j)
			READ_ASCII offset "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
		END

		//0x3c area ambient (night) 1 WAV resref
		//0x44 area ambient (night) 2 WAV resref
		FOR (j=0; j<2; j=j+1) BEGIN
			SET offset = ("%song_off%"+0x3c+0x8*j)
			READ_ASCII offset "resref_wav"
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
		END

		//////////////////////
		//Rest spawn creatures
		//////////////////////
		READ_LONG 0xc0 "rest_off"

		//0x48 CRE resref 1
		//0x50 CRE resref 2
		//0x58 CRE resref 3
		//0x60 CRE resref 4
		//0x68 CRE resref 5
		//0x70 CRE resref 6
		//0x78 CRE resref 7
		//0x80 CRE resref 8
		//0x88 CRE resref 9
		//0x90 CRE resref 10
		FOR (j=0; j<10; j=j+1) BEGIN
			SET offset = ("%rest_off%"+0x48+0x8*j)
			READ_ASCII offset "resref_cre"
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_cre%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
		END

		SET are_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//BAF patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.BAF$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching script source file %patch_name%...~

		//area resrefs
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
		END

		//door names
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		//entrance names
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		//other resrefs
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
		END

		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
		END

		FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_cre_source%i%"
			SPRINT name_dest "resref_cre_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
		END

		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
		END

		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
		END

		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
		END

		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
		END

		FOR (i=1; i<="%resref_splName_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_splName_source%i%"
			SPRINT name_dest "resref_splName_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPLname_replace~
		END

		FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_sto_source%i%"
			SPRINT name_dest "resref_sto_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
		END

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
		END

		FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_mve_source%i%"
			SPRINT name_dest "resref_mve_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
		END

		FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_2da_source%i%"
			SPRINT name_dest "resref_2da_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
		END

		FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_var_source%i%"
			SPRINT name_dest "resref_var_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
		END

		LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		REPLACE_TEXTUALLY ~\(Allegiance(.*,\)ANYONE)~ ~\10)~//workaround for weidu compiler bug

		SET baf_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//BCS patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "SC
CR
CO") BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching compiled script file %patch_name%...~

		DECOMPILE_AND_PATCH BEGIN

			//area resrefs
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			END

			//door names
			FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
			END

			//entrance names
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
			END

			//other resrefs
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			END

			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			END

			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			END

			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			END

			FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dv_source%i%"
				SPRINT name_dest "resref_dv_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			END

			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			END

			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			END

			FOR (i=1; i<="%resref_splName_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_splName_source%i%"
				SPRINT name_dest "resref_splName_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_SPLname_replace~
			END

			FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_sto_source%i%"
				SPRINT name_dest "resref_sto_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			END

			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			END

			FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mve_source%i%"
				SPRINT name_dest "resref_mve_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
			END

			FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_2da_source%i%"
				SPRINT name_dest "resref_2da_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
			END

			FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_var_source%i%"
				SPRINT name_dest "resref_var_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
			END

			LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

			REPLACE_TEXTUALLY ~\(Allegiance(.*,\)ANYONE)~ ~\10)~//workaround for weidu compiler bug

		END

		SET bcs_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//CRE patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "CRE V1.0") /*AND (SOURCE_SIZE > 0x2d3)*/ BEGIN

		//Checks whether a CRE file is well-formed or not, fixes some common bugs, and reports whether the CRE file is still broken or not.
		LPF ~FJ_CRE_VALIDITY~ RET vl=valid END
		PATCH_IF vl BEGIN

			PATCH_PRINT ~%cntcurrent%/%cntrow% Patching creature version 1.0 file %patch_name%...~

			////////////////////////////////
			//0x34 small portrait BMP resref
			////////////////////////////////
			READ_ASCII 0x34 "resref_bmp"
			FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bmp_source%i%"
				SPRINT name_dest "resref_bmp_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bmp%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x34 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x34~
				END
			END

			////////////////////////////////
			//0x3c large portrait BMP resref
			////////////////////////////////
			READ_ASCII 0x3c "resref_bmp"
			FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bmp_source%i%"
				SPRINT name_dest "resref_bmp_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bmp%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x3c "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x3c~
				END
			END

			////////////////////////////////
			//0x248 override BCS resref
			////////////////////////////////
			READ_ASCII 0x248 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x248 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x248~
				END
			END

			////////////////////////////////
			//0x250 class BCS resref
			////////////////////////////////
			READ_ASCII 0x250 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x250 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x250~
				END
			END

			////////////////////////////////
			//0x258 race BCS resref
			////////////////////////////////
			READ_ASCII 0x258 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x258 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x258~
				END
			END

			////////////////////////////////
			//0x260 general BCS resref
			////////////////////////////////
			READ_ASCII 0x260 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x260 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x260~
				END
			END

			////////////////////////////////
			//0x268 default BCS resref
			////////////////////////////////
			READ_ASCII 0x268 "resref_bcs"
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bcs%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x268 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x268~
				END
			END

			//////////////////////
			//0x280 Death Variable
			//////////////////////
			READ_ASCII 0x280 "resref_dv" (32) NULL
			FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dv_source%i%"
				SPRINT name_dest "resref_dv_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_dv%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x280 "%resref_index_dest%" #32
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x280~
				END
			END

			////////////////////////////////
			//0x2cc DLG resref
			////////////////////////////////
			READ_ASCII 0x2cc "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x2cc "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x2cc~
				END
			END

			//////////////
			//Known Spells
			//////////////
			READ_LONG 0x2a0 "kspell_off"
			READ_SHORT 0x2a4 "kspell_cnt"
			FOR (cnt=0; cnt<"%kspell_cnt%"; cnt=cnt+1) BEGIN

				//0x0 SPL resref
				SET offset = ("%kspell_off%"+0xc*cnt)
				READ_ASCII offset "resref_spl"
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END

			END

			//////////////////
			//Memorised Spells
			//////////////////
			READ_LONG 0x2b0 "mspell_off"
			READ_SHORT 0x2b4 "mspell_cnt"
			FOR (cnt=0; cnt<"%mspell_cnt%"; cnt=cnt+1) BEGIN

				//0x0 SPL resref
				SET offset = ("%mspell_off%"+0xc*cnt)
				READ_ASCII offset "resref_spl"
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END

			END

			//////////////
			//Items
			//////////////
			READ_LONG 0x2bc "item_off"
			READ_SHORT 0x2c0 "item_cnt"
			FOR (cnt=0; cnt<"%item_cnt%"; cnt=cnt+1) BEGIN

				//0x0 ITM resref
				SET offset = ("%item_off%"+0x14*cnt)
				READ_ASCII offset "resref_itm"
				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END

			END

			//////////////
			//Effects
			//////////////
			READ_LONG 0x2c4 "fx_off"
			READ_LONG 0x2c8 "fx_cnt"
			FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN

				READ_LONG ("%fx_off%"+0x108*cnt+0x8) "fx_type"
				SET offset = ("%fx_off%"+0x108*cnt+0x28)
				READ_ASCII offset "resref"
				SET offset2 = ("%fx_off%"+0x108*cnt+0x70)
				READ_ASCII offset2 "resref2"

				PATCH_IF ("%fx_type%" = 215) BEGIN //Play 3D Effect
					FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
						SPRINT name_source "resref_bam_source%i%"
						SPRINT name_dest "resref_bam_dest%i%"
						SPRINT resref_index_source EVAL ~%%name_source%%~
						SPRINT resref_index_dest EVAL ~%%name_dest%%~
						PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset)
							PATCH_PRINT ~%str%~
						END
						PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset2 "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset2)
							PATCH_PRINT ~%str%~
						END
					END
				END

				PATCH_IF ("%fx_type%" = 127) BEGIN //Monster Summoning
					FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
						SPRINT name_source "resref_bam_source%i%"
						SPRINT name_dest "resref_bam_dest%i%"
						SPRINT resref_index_source EVAL ~%%name_source%%~
						SPRINT resref_index_dest EVAL ~%%name_dest%%~
						PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset2 "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset2)
							PATCH_PRINT ~%str%~
						END
					END
				END

				PATCH_IF ("%fx_type%" = 107) BEGIN //Change Portrait
					FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
						SPRINT name_source "resref_bmp_source%i%"
						SPRINT name_dest "resref_bmp_dest%i%"
						SPRINT resref_index_source EVAL ~%%name_source%%~
						SPRINT resref_index_dest EVAL ~%%name_dest%%~
						PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset)
							PATCH_PRINT ~%str%~
						END
						PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset2 "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset2)
							PATCH_PRINT ~%str%~
						END
					END
				END

				PATCH_IF ("%fx_type%" = 82) BEGIN //Set AI Script
					FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
						SPRINT name_source "resref_bcs_source%i%"
						SPRINT name_dest "resref_bcs_dest%i%"
						SPRINT resref_index_source EVAL ~%%name_source%%~
						SPRINT resref_index_dest EVAL ~%%name_dest%%~
						PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset)
							PATCH_PRINT ~%str%~
						END
						PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset2 "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset2)
							PATCH_PRINT ~%str%~
						END
					END
				END

				PATCH_IF ("%fx_type%" = 67) //Summon Creature
				OR ("%fx_type%" = 135) //Polymorph into Specific
				OR ("%fx_type%" = 151) //Replace Creature
				OR ("%fx_type%" = 168) //Remove Creature
				BEGIN
					FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
						SPRINT name_source "resref_cre_source%i%"
						SPRINT name_dest "resref_cre_dest%i%"
						SPRINT resref_index_source EVAL ~%%name_source%%~
						SPRINT resref_index_dest EVAL ~%%name_dest%%~
						PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset)
							PATCH_PRINT ~%str%~
						END
						PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset2 "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset2)
							PATCH_PRINT ~%str%~
						END
					END
				END

				PATCH_IF ("%fx_type%" = 111) //Create Item in Magical Weapon Slot
				OR ("%fx_type%" = 112) //Remove Item
				OR ("%fx_type%" = 122) //Create Inventory Item
				OR ("%fx_type%" = 123) //Remove Inventory Item
				OR ("%fx_type%" = 143) //Create Item in Slot
				OR ("%fx_type%" = 180) //Cannot Use Item
				OR ("%fx_type%" = 255) //Create Inventory Item (days)
				BEGIN
					FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
						SPRINT name_source "resref_itm_source%i%"
						SPRINT name_dest "resref_itm_dest%i%"
						SPRINT resref_index_source EVAL ~%%name_source%%~
						SPRINT resref_index_dest EVAL ~%%name_dest%%~
						PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset)
							PATCH_PRINT ~%str%~
						END
						PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset2 "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset2)
							PATCH_PRINT ~%str%~
						END
					END
				END

				PATCH_IF ("%fx_type%" = 152) BEGIN //Play Movie
					FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
						SPRINT name_source "resref_mve_source%i%"
						SPRINT name_dest "resref_mve_dest%i%"
						SPRINT resref_index_source EVAL ~%%name_source%%~
						SPRINT resref_index_dest EVAL ~%%name_dest%%~
						PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset)
							PATCH_PRINT ~%str%~
						END
						PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset2 "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset2)
							PATCH_PRINT ~%str%~
						END
					END
				END

				PATCH_IF ("%fx_type%" = 146) //Cast Spell (at Creature)
				OR ("%fx_type%" = 147) //Learn Spell
				OR ("%fx_type%" = 148) //Cast Spell (at Point)
				OR ("%fx_type%" = 171) //Give Innate Ability
				OR ("%fx_type%" = 172) //Remove Spell
				OR ("%fx_type%" = 183) //Apply Effect Itemtype (SPL ResRef?)
				OR ("%fx_type%" = 206) //Protection from Spell
				OR ("%fx_type%" = 207) //Bounce Specified Spell
				OR ("%fx_type%" = 232) //Cast Spell on Condition
				OR ("%fx_type%" = 251) //Change Bard Song Effect
				OR ("%fx_type%" = 252) //Set Trap
				OR ("%fx_type%" = 256) //Spell Sequencer Active (SPL ResRef?)
				OR ("%fx_type%" = 258) //Spell Sequencer Activation
				OR ("%fx_type%" = 313) //High-Level Ability Denotation
				OR ("%fx_type%" = 321) //Effects specified by Resource
				OR ("%fx_type%" = 324) //Immunity to spell and message
				OR ("%fx_type%" = 326) //Apply effects list
				OR ("%fx_type%" = 333) //Static Charge
				OR ("%fx_type%" = 335) //Seven Eyes
				OR ("%fx_type%" = 341) //Change Critical Hit Effect
				BEGIN
					FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
						SPRINT name_source "resref_spl_source%i%"
						SPRINT name_dest "resref_spl_dest%i%"
						SPRINT resref_index_source EVAL ~%%name_source%%~
						SPRINT resref_index_dest EVAL ~%%name_dest%%~
						PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset)
							PATCH_PRINT ~%str%~
						END
						PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset2 "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset2)
							PATCH_PRINT ~%str%~
						END
					END
				END

				PATCH_IF ("%fx_type%" = 174) BEGIN //Play Sound
					FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
						SPRINT name_source "resref_wav_source%i%"
						SPRINT name_dest "resref_wav_dest%i%"
						SPRINT resref_index_source EVAL ~%%name_source%%~
						SPRINT resref_index_dest EVAL ~%%name_dest%%~
						PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset)
							PATCH_PRINT ~%str%~
						END
						PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset2 "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset2)
							PATCH_PRINT ~%str%~
						END
					END
				END

				PATCH_IF ("%fx_type%" = 177) //Use EFF File
				OR ("%fx_type%" = 272) //Apply Repeating EFF
				OR ("%fx_type%" = 283) //Use EFF File (Cursed)
				BEGIN
					FOR (i=1; i<="%resref_eff_total%"; i=i+1) BEGIN
						SPRINT name_source "resref_eff_source%i%"
						SPRINT name_dest "resref_eff_dest%i%"
						SPRINT resref_index_source EVAL ~%%name_source%%~
						SPRINT resref_index_dest EVAL ~%%name_dest%%~
						PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset)
							PATCH_PRINT ~%str%~
						END
						PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
							WRITE_ASCIIE offset2 "%resref_index_dest%" #8
							SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
							SPRINTF str ~%s %x~ ("%str%" offset2)
							PATCH_PRINT ~%str%~
						END
					END
				END

				//0x8c source spell SPL resref
				SET offset = ("%fx_off%"+0x108*cnt+0x8c)
				READ_ASCII offset "resref_spl"
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END

			END

			SET cre_check += 1
			SET checked = 1

		END ELSE BEGIN
			PATCH_WARN ~FJ_CRE_VALIDITY returned %SOURCE_FILESPEC% as not valid file~
		END
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//D patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.D$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching dialog source file %patch_name%...~

		//area resrefs
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
		END

		//door names
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		//entrance names
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		//other resrefs
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
		END

		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
		END

		FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_cre_source%i%"
			SPRINT name_dest "resref_cre_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
		END

		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			LAUNCH_PATCH_MACRO ~D_DLG_replace~
		END

		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
		END

		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
		END

		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
		END

		FOR (i=1; i<="%resref_splName_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_splName_source%i%"
			SPRINT name_dest "resref_splName_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPLname_replace~
		END

		FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_sto_source%i%"
			SPRINT name_dest "resref_sto_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
		END

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
		END

		FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_mve_source%i%"
			SPRINT name_dest "resref_mve_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
		END

		FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_2da_source%i%"
			SPRINT name_dest "resref_2da_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
		END

		FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_var_source%i%"
			SPRINT name_dest "resref_var_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
		END

		FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlgext_source%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			LAUNCH_PATCH_MACRO ~D_DLGext_replace~
		END

		LAUNCH_PATCH_MACRO ~D_traifyDLG_replace~
		LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		SET d_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//DLG patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "DLG V1.0") AND (SOURCE_SIZE > 0x33) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching dialog version 1.0 file %patch_name%...~

		//////////////
		//Responses
		//////////////
		READ_LONG 0x14 "resp_off"
		READ_SHORT 0x10 "resp_cnt"
		FOR (cnt=0; cnt<"%resp_cnt%"; cnt=cnt+1) BEGIN

			//0x14 next dialogue DLG resref
			SET offset = ("%resp_off%"+0x20*cnt+0x14)
			READ_ASCII offset "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		DECOMPILE_AND_PATCH BEGIN

			//area resrefs
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			END

			//door names
			FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
			END

			//entrance names
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
			END

			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
			END

			//other resrefs
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			END

			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			END

			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			END

			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
				LAUNCH_PATCH_MACRO ~D_DLG_replace~
			END

			FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dv_source%i%"
				SPRINT name_dest "resref_dv_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			END

			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			END

			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			END

			FOR (i=1; i<="%resref_splName_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_splName_source%i%"
				SPRINT name_dest "resref_splName_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_SPLname_replace~
			END

			FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_sto_source%i%"
				SPRINT name_dest "resref_sto_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			END

			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			END

			FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mve_source%i%"
				SPRINT name_dest "resref_mve_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
			END

			FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_2da_source%i%"
				SPRINT name_dest "resref_2da_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
			END

			FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_var_source%i%"
				SPRINT name_dest "resref_var_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
			END

			FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlgext_source%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				LAUNCH_PATCH_MACRO ~D_DLGext_replace~
			END

			LAUNCH_PATCH_MACRO ~D_traifyDLG_replace~
			LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		END

		SET dlg_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//EFF patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "EFF V2.0") BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching effect version 2.0 file %patch_name%...~

		/////////////////////
		//0x30 effect resref
		//0x78 effect resref2
		/////////////////////

		//0x14 resource resref
		//2DA - 0x7f Monster Summoning, 0xd6 Select Spell
		//EFF - 0xb1 Use EFF File, 0xf8 Set Melee Effect, 0xf9 Set Ranged Effect, 0x110 Apply Effect on Condition, 0x11b Use EFF File (II)
		//VVC - 0xd7 Play 3D Effect, 0x128 Immunity to Specific Animation

		READ_SHORT 0x10 "fx_type"
		READ_ASCII 0x30 "resref"
		READ_ASCII 0x78 "resref2"

		PATCH_IF ("%fx_type%" = 215) BEGIN //Play 3D Effect
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x30~
				END
				PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
			END
			END
		END

		PATCH_IF ("%fx_type%" = 127) BEGIN //Monster Summoning
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
				END
			END
		END

		PATCH_IF ("%fx_type%" = 107) BEGIN //Change Portrait
			FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bmp_source%i%"
				SPRINT name_dest "resref_bmp_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x30~
				END
				PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
				END
			END
		END

		PATCH_IF ("%fx_type%" = 82) BEGIN //Set AI Script
			FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bcs_source%i%"
				SPRINT name_dest "resref_bcs_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x30~
				END
				PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
				END
			END
		END

		PATCH_IF ("%fx_type%" = 67) //Summon Creature
		OR ("%fx_type%" = 135) //Polymorph into Specific
		OR ("%fx_type%" = 151) //Replace Creature
		OR ("%fx_type%" = 168) //Remove Creature
		BEGIN
			FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_cre_source%i%"
				SPRINT name_dest "resref_cre_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x30~
				END
				PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
				END
			END
		END

		PATCH_IF ("%fx_type%" = 111) //Create Item in Magical Weapon Slot
		OR ("%fx_type%" = 112) //Remove Item
		OR ("%fx_type%" = 122) //Create Inventory Item
		OR ("%fx_type%" = 123) //Remove Inventory Item
		OR ("%fx_type%" = 143) //Create Item in Slot
		OR ("%fx_type%" = 180) //Cannot Use Item
		OR ("%fx_type%" = 255) //Create Inventory Item (days)
		BEGIN
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x30~
				END
				PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
				END
			END
		END

		PATCH_IF ("%fx_type%" = 152) BEGIN //Play Movie
			FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mve_source%i%"
				SPRINT name_dest "resref_mve_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x30~
				END
				PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
				END
			END
		END

		PATCH_IF ("%fx_type%" = 146) //Cast Spell (at Creature)
		OR ("%fx_type%" = 147) //Learn Spell
		OR ("%fx_type%" = 148) //Cast Spell (at Point)
		OR ("%fx_type%" = 171) //Give Innate Ability
		OR ("%fx_type%" = 172) //Remove Spell
		OR ("%fx_type%" = 183) //Apply Effect Itemtype (SPL ResRef?)
		OR ("%fx_type%" = 206) //Protection from Spell
		OR ("%fx_type%" = 207) //Bounce Specified Spell
		OR ("%fx_type%" = 232) //Cast Spell on Condition
		OR ("%fx_type%" = 251) //Change Bard Song Effect
		OR ("%fx_type%" = 252) //Set Trap
		OR ("%fx_type%" = 256) //Spell Sequencer Active (SPL ResRef?)
		OR ("%fx_type%" = 258) //Spell Sequencer Activation
		OR ("%fx_type%" = 313) //High-Level Ability Denotation
		OR ("%fx_type%" = 321) //Effects specified by Resource
		OR ("%fx_type%" = 324) //Immunity to spell and message
		OR ("%fx_type%" = 326) //Apply effects list
		OR ("%fx_type%" = 333) //Static Charge
		OR ("%fx_type%" = 335) //Seven Eyes
		OR ("%fx_type%" = 341) //Change Critical Hit Effect
		BEGIN
			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x30~
				END
				PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
				END
			END
		END

		PATCH_IF ("%fx_type%" = 174) BEGIN //Play Sound
			FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_wav_source%i%"
				SPRINT name_dest "resref_wav_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x30~
				END
				PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
				END
			END
		END

		PATCH_IF ("%fx_type%" = 177) //Use EFF File
		OR ("%fx_type%" = 272) //Apply Repeating EFF
		OR ("%fx_type%" = 283) //Use EFF File (Cursed)
		BEGIN
			FOR (i=1; i<="%resref_eff_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_eff_source%i%"
				SPRINT name_dest "resref_eff_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x30 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x30~
				END
				PATCH_IF ("%resref2%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
				END
			END
		END

		//////////////////////////////
		//0x94 source spell SPL resref
		//////////////////////////////
		READ_ASCII 0x94 "resref_spl"
		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x94 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x94~
			END
		END

		SET eff_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//ITM patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "ITM V1  ") AND (SOURCE_SIZE > 0x71) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching item version 1.0 file %patch_name%...~

		////////////////////////////////
		//0x10 replacement ITM resref
		////////////////////////////////
		READ_ASCII 0x10 "resref_itm"
		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x10 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x10~
			END
		END

		////////////////////////////////
		//0x3a inventory icon BAM resref
		////////////////////////////////
		READ_ASCII 0x3a "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x3a "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x3a~
			END
		END

		////////////////////////////////
		//0x44 ground icon BAM resref
		////////////////////////////////
		READ_ASCII 0x44 "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x44 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x44~
			END
		END

		////////////////////////////////
		//0x58 description icon BAM resref
		////////////////////////////////
		READ_ASCII 0x58 "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x58 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x58~
			END
		END

		//////////////
		//Abilities
		//////////////
		READ_LONG 0x64 "abil_off"
		READ_SHORT 0x68 "abil_cnt"
		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN


			//0x4 memorised icon BAM resref
			SET offset = ("%abil_off%"+0x38*cnt+0x4)
			READ_ASCII offset "resref_bam"
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		//////////////
		//Effects
		//////////////
		READ_LONG 0x6a "fx_off"
		READ_SHORT 0x70 "fx_cnt"

		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%abil_off%"+0x38*cnt+0x1e) "fx_num"
			SET fx_cnt += fx_num //gauge the total number of effects by summing global effects and the effects of each ability
		END

		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN

			//0x14 resource resref
			//2DA - 0x7f Monster Summoning, 0xd6 Select Spell
			//EFF - 0xb1 Use EFF File, 0xf8 Set Melee Effect, 0xf9 Set Ranged Effect, 0x110 Apply Effect on Condition, 0x11b Use EFF File (II)
			//VVC - 0xd7 Play 3D Effect, 0x128 Immunity to Specific Animation

			READ_SHORT ("%fx_off%"+0x30*cnt) "fx_type"
			SET offset = ("%fx_off%"+0x30*cnt+0x14)
			READ_ASCII offset "resref"

			PATCH_IF ("%fx_type%" = 215) BEGIN //Play 3D Effect
				FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bam_source%i%"
					SPRINT name_dest "resref_bam_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 107) BEGIN //Change Portrait
				FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bmp_source%i%"
					SPRINT name_dest "resref_bmp_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 82) BEGIN //Set AI Script
				FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bcs_source%i%"
					SPRINT name_dest "resref_bcs_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 67) //Summon Creature
			OR ("%fx_type%" = 135) //Polymorph into Specific
			OR ("%fx_type%" = 151) //Replace Creature
			OR ("%fx_type%" = 168) //Remove Creature
			BEGIN
				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 111) //Create Item in Magical Weapon Slot
			OR ("%fx_type%" = 112) //Remove Item
			OR ("%fx_type%" = 122) //Create Inventory Item
			OR ("%fx_type%" = 123) //Remove Inventory Item
			OR ("%fx_type%" = 143) //Create Item in Slot
			OR ("%fx_type%" = 180) //Cannot Use Item
			OR ("%fx_type%" = 255) //Create Inventory Item (days)
			BEGIN
				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 152) BEGIN //Play Movie
				FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_mve_source%i%"
					SPRINT name_dest "resref_mve_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 146) //Cast Spell (at Creature)
			OR ("%fx_type%" = 147) //Learn Spell
			OR ("%fx_type%" = 148) //Cast Spell (at Point)
			OR ("%fx_type%" = 171) //Give Innate Ability
			OR ("%fx_type%" = 172) //Remove Spell
			OR ("%fx_type%" = 183) //Apply Effect Itemtype (SPL ResRef?)
			OR ("%fx_type%" = 206) //Protection from Spell
			OR ("%fx_type%" = 207) //Bounce Specified Spell
			OR ("%fx_type%" = 232) //Cast Spell on Condition
			OR ("%fx_type%" = 251) //Change Bard Song Effect
			OR ("%fx_type%" = 252) //Set Trap
			OR ("%fx_type%" = 256) //Spell Sequencer Active (SPL ResRef?)
			OR ("%fx_type%" = 258) //Spell Sequencer Activation
			OR ("%fx_type%" = 313) //High-Level Ability Denotation
			OR ("%fx_type%" = 321) //Effects specified by Resource
			OR ("%fx_type%" = 324) //Immunity to spell and message
			OR ("%fx_type%" = 326) //Apply effects list
			OR ("%fx_type%" = 333) //Static Charge
			OR ("%fx_type%" = 335) //Seven Eyes
			OR ("%fx_type%" = 341) //Change Critical Hit Effect
			BEGIN
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 174) BEGIN //Play Sound
				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 177) //Use EFF File
			OR ("%fx_type%" = 272) //Apply Repeating EFF
			OR ("%fx_type%" = 283) //Use EFF File (Cursed)
			BEGIN
				FOR (i=1; i<="%resref_eff_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_eff_source%i%"
					SPRINT name_dest "resref_eff_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

		END

		SET itm_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//SPL patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "SPL V1  ") AND (SOURCE_SIZE > 0x71) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching spell version 1.0 file %patch_name%...~

		////////////////////////////////
		//0x10 casting sound WAV resref
		////////////////////////////////
		READ_ASCII 0x10 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x10 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x10~
			END
		END

		////////////////////////////////
		//0x3a spellbook icon BAM resref
		////////////////////////////////
		READ_ASCII 0x3a "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x3a "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x3a~
			END
		END

		//////////////
		//Abilities
		//////////////
		READ_LONG 0x64 "abil_off"
		READ_SHORT 0x68 "abil_cnt"
		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN

			//0x4 memorised icon BAM resref
			SET offset = ("%abil_off%"+0x28*cnt+0x4)
			READ_ASCII offset "resref_bam"
			FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_bam_source%i%"
				SPRINT name_dest "resref_bam_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		//////////////
		//Effects
		//////////////
		READ_LONG 0x6a "fx_off"
		READ_SHORT 0x70 "fx_cnt"

		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%abil_off%"+0x28*cnt+0x1e) "fx_num"
			SET fx_cnt += fx_num //gauge the total number of effects by summing global effects and the effects of each ability
		END

		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN

			//0x14 resource resref
			//2DA - 0x7f Monster Summoning, 0xd6 Select Spell
			//EFF - 0xb1 Use EFF File, 0xf8 Set Melee Effect, 0xf9 Set Ranged Effect, 0x110 Apply Effect on Condition, 0x11b Use EFF File (II)
			//VVC - 0xd7 Play 3D Effect, 0x128 Immunity to Specific Animation

			READ_SHORT ("%fx_off%"+0x30*cnt) "fx_type"
			SET offset = ("%fx_off%"+0x30*cnt+0x14)
			READ_ASCII offset "resref"

			PATCH_IF ("%fx_type%" = 215) BEGIN //Play 3D Effect
				FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bam_source%i%"
					SPRINT name_dest "resref_bam_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 107) BEGIN //Change Portrait
				FOR (i=1; i<="%resref_bmp_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bmp_source%i%"
					SPRINT name_dest "resref_bmp_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 82) BEGIN //Set AI Script
				FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_bcs_source%i%"
					SPRINT name_dest "resref_bcs_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 67) //Summon Creature
			OR ("%fx_type%" = 135) //Polymorph into Specific
			OR ("%fx_type%" = 151) //Replace Creature
			OR ("%fx_type%" = 168) //Remove Creature
			BEGIN
				FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_cre_source%i%"
					SPRINT name_dest "resref_cre_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 111) //Create Item in Magical Weapon Slot
			OR ("%fx_type%" = 112) //Remove Item
			OR ("%fx_type%" = 122) //Create Inventory Item
			OR ("%fx_type%" = 123) //Remove Inventory Item
			OR ("%fx_type%" = 143) //Create Item in Slot
			OR ("%fx_type%" = 180) //Cannot Use Item
			OR ("%fx_type%" = 255) //Create Inventory Item (days)
			BEGIN
				FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_itm_source%i%"
					SPRINT name_dest "resref_itm_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 152) BEGIN //Play Movie
				FOR (i=1; i<="%resref_mve_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_mve_source%i%"
					SPRINT name_dest "resref_mve_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 146) //Cast Spell (at Creature)
			OR ("%fx_type%" = 147) //Learn Spell
			OR ("%fx_type%" = 148) //Cast Spell (at Point)
			OR ("%fx_type%" = 171) //Give Innate Ability
			OR ("%fx_type%" = 172) //Remove Spell
			OR ("%fx_type%" = 183) //Apply Effect Itemtype (SPL ResRef?)
			OR ("%fx_type%" = 206) //Protection from Spell
			OR ("%fx_type%" = 207) //Bounce Specified Spell
			OR ("%fx_type%" = 232) //Cast Spell on Condition
			OR ("%fx_type%" = 251) //Change Bard Song Effect
			OR ("%fx_type%" = 252) //Set Trap
			OR ("%fx_type%" = 256) //Spell Sequencer Active (SPL ResRef?)
			OR ("%fx_type%" = 258) //Spell Sequencer Activation
			OR ("%fx_type%" = 313) //High-Level Ability Denotation
			OR ("%fx_type%" = 321) //Effects specified by Resource
			OR ("%fx_type%" = 324) //Immunity to spell and message
			OR ("%fx_type%" = 326) //Apply effects list
			OR ("%fx_type%" = 333) //Static Charge
			OR ("%fx_type%" = 335) //Seven Eyes
			OR ("%fx_type%" = 341) //Change Critical Hit Effect
			BEGIN
				FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_spl_source%i%"
					SPRINT name_dest "resref_spl_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 174) BEGIN //Play Sound
				FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_wav_source%i%"
					SPRINT name_dest "resref_wav_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

			PATCH_IF ("%fx_type%" = 177) //Use EFF File
			OR ("%fx_type%" = 272) //Apply Repeating EFF
			OR ("%fx_type%" = 283) //Use EFF File (Cursed)
			BEGIN
				FOR (i=1; i<="%resref_eff_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_eff_source%i%"
					SPRINT name_dest "resref_eff_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

		END

		SET spl_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//STO patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "STORV1.0") AND (SOURCE_SIZE > 0x9b) BEGIN //protects against invalid files

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching store version 1.0 file %patch_name%...~

		////////////////////////////////
		//0x44 tavern rumours DLG resref
		////////////////////////////////
		READ_ASCII 0x44 "resref_dlg"
		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x44 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x44~
			END
		END

		////////////////////////////////
		//0x54 temple rumours DLG resref
		////////////////////////////////
		READ_ASCII 0x54 "resref_dlg"
		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x54 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x54~
			END
		END

		//////////////
		//Items for Sale
		//////////////
		READ_LONG 0x34 "item_off"
		READ_SHORT 0x38 "item_cnt"
		FOR (cnt=0; cnt<"%item_cnt%"; cnt=cnt+1) BEGIN

			//0x0 ITM resref
			SET offset = ("%item_off%"+0x1c*cnt)
			READ_ASCII offset "resref_itm"
			FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_itm_source%i%"
				SPRINT name_dest "resref_itm_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_itm%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		//////////////
		//Drinks for Sale
		//////////////
		READ_LONG 0x4c "drink_off"
		READ_SHORT 0x50 "drink_cnt"
		FOR (cnt=0; cnt<"%drink_cnt%"; cnt=cnt+1) BEGIN

			//0x0 special rumour DLG resref
			SET offset = ("%drink_off%"+0x14*cnt)
			READ_ASCII offset "resref_dlg"
			FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_dlg_source%i%"
				SPRINT name_dest "resref_dlg_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_dlg%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		//////////////
		//Cures for Sale
		//////////////
		READ_LONG 0x70 "cure_off"
		READ_SHORT 0x74 "cure_cnt"
		FOR (cnt=0; cnt<"%cure_cnt%"; cnt=cnt+1) BEGIN

			//0x0 SPL resref
			SET offset = ("%cure_off%"+0xc*cnt)
			READ_ASCII offset "resref_spl"
			FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_spl_source%i%"
				SPRINT name_dest "resref_spl_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_spl%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		SET sto_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//TRA patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TRA$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WeiDU translation file %patch_name%...~

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(\[\)%resref_index_source%\(\]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - WAV~ END ~\1%resref_index_dest%\2~
		END

		SET tra_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//TP2/TPH/TPP patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TP2$")=0) OR (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TPH$")=0) OR (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TPP$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WeiDU script file %patch_name%...~

		//area resrefs
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.ARE\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ARE~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.ARE\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ARE~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ARE~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,%resref_index_source% => %resref_index_dest% - =+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <ARE~ END ~\1%resref_index_dest%\2~
		END

		//door names
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - door~ END ~"%resref_index_dest%~
		END

		//entrance names
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~"%resref_index_source%~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - entrance~ END ~"%resref_index_dest%~
		END

		//other resrefs
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.BAM\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BAM~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.BAM\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BAM~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BAM~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,%resref_index_source% => %resref_index_dest% - =+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BAM~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.BAF\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BCS~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.BCS\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BCS~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.BCS\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BCS~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BCS~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,%resref_index_source% => %resref_index_dest% - =+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <BCS~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_cre_source%i%"
			SPRINT name_dest "resref_cre_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.CRE\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CRE~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.CRE\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CRE~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CRE~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,%resref_index_source% => %resref_index_dest% - =+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <CRE~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.DLG\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DLG~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.D\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DLG~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.DLG\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DLG~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DLG~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,%resref_index_source% => %resref_index_dest% - =+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <DLG~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DV~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,%resref_index_source% => %resref_index_dest% - =+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <DV~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.ITM\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ITM~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.ITM\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ITM~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ITM~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,%resref_index_source% => %resref_index_dest% - =+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <ITM~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.SPL\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SPL~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.SPL\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SPL~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SPL~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,%resref_index_source% => %resref_index_dest% - =+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <SPL~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_sto_source%i%"
			SPRINT name_dest "resref_sto_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.STO\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - STO~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.STO\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - STO~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - STO~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,%resref_index_source% => %resref_index_dest% - =+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <STO~ END ~\1%resref_index_dest%\2~
		END

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ ~"/\\]+\)%resref_index_source%\(\.WAV\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - WAV~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.WAV\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - WAV~ END ~%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([~"]+\)%resref_index_source%\(["~]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - WAV~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ /]+\)%resref_index_source%\([^!A-Za-z0-9@#$\%&\*()\[\]|`~"':;\?\\/\.>,%resref_index_source% => %resref_index_dest% - =+-_ ]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: <WAV~ END ~\1%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(\[\)%resref_index_source%\(\]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - WAV~ END ~\1%resref_index_dest%\2~
		END
//%~
		SET tp2_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//VVC patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "VVC V1.0") BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching VVC version 1.0 file %patch_name%...~

		//////////////////////////
		//0x8 animation BAM resref
		//////////////////////////
		READ_ASCII 0x8 "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x8 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x8~
			END
		END

		////////////////////////////////
		//0x78 starting sound WAV resref
		////////////////////////////////
		READ_ASCII 0x78 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x78 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x78~
			END
		END

		////////////////////////////////
		//0x80 duration sound WAV resref
		////////////////////////////////
		READ_ASCII 0x80 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x80 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x80~
			END
		END

		/////////////////////////////////
		//0x94 ending sound WAV resref(?)
		/////////////////////////////////
		READ_ASCII 0x94 "resref_wav"
		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_wav%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE 0x94 "%resref_index_dest%" #8
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 0x94~
			END
		END

		SET vvc_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//WED patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "WED V1.3") BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WED version 1.3 file %patch_name%...~

		//////////
		//Overlays
		//////////
		READ_LONG 0x8 "overlays_num"
		READ_LONG 0x10 "overlays_off"
		FOR ( cnt=0; cnt<"%overlays_num%"; cnt +=1) BEGIN

			//0x4 tileset TIS resref
			SET offset = ("%overlays_off%"+0xa*cnt+0x4)
			READ_ASCII offset "resref_tis"
			FOR (i=1; i<="%resref_tis_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_tis_source%i%"
				SPRINT name_dest "resref_tis_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_tis%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		SET wed_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//WMP patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "WMAPV1.0") BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching worldmap version 1.0 file %patch_name%...~

		// possibility of more than one world map?
		//	READ_LONG 0x8 "mapentry_num"
		READ_LONG 0xc "mapentry_off"

		/////////////////////////////
		//0x0 map resource MOS resref
		/////////////////////////////
		SET offset = ("%mapentry_off%")
		READ_ASCII offset "resref_mos"
		FOR (i=1; i<="%resref_mos_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_mos_source%i%"
			SPRINT name_dest "resref_mos_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_mos%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE offset "%resref_index_dest%" #8
				SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
				SPRINTF str ~%s %x~ ("%str%" offset)
				PATCH_PRINT ~%str%~
			END
		END

		///////////////////////////
		//0x30 map icons BAM resref
		///////////////////////////
		SET offset = ("%mapentry_off%"+0x30)
		READ_ASCII offset "resref_bam"
		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref_bam%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				WRITE_ASCIIE offset "%resref_index_dest%" #8
				SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
				SPRINTF str ~%s %x~ ("%str%" offset)
				PATCH_PRINT ~%str%~
			END
		END

		////////////////////////
		//Map entry area entries
		////////////////////////
		READ_LONG ("%mapentry_off%"+0x20) "areaentry_num"
		READ_LONG ("%mapentry_off%"+0x24) "areaentry_off"

		FOR (cnt=0; cnt<"%areaentry_num%"; cnt=cnt+1) BEGIN

			//0x0 area short name (contains area numbers)
			SET offset = ("%areaentry_off%"+0xf0*cnt)
			READ_ASCII offset "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x8 area content ARE resref
			SET offset = ("%areaentry_off%"+0xf0*cnt+0x8)
			READ_ASCII offset "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x10 area long name (contains area numbers)
			SET offset = ("%areaentry_off%"+0xf0*cnt+0x10)
			READ_ASCII offset "resref_are" (6)
			FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_are_source%i%"
				SPRINT name_dest "resref_are_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x48 loading screen MOS resref
			SET offset = ("%areaentry_off%"+0xf0*cnt+0x48)
			READ_ASCII offset "resref_mos"
			FOR (i=1; i<="%resref_mos_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_mos_source%i%"
				SPRINT name_dest "resref_mos_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_mos%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%" #8
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

		END

		//////////////////////
		//Map entry area links
		//////////////////////
		READ_LONG ("%mapentry_off%"+0x28) "arealink_off"
		READ_LONG ("%mapentry_off%"+0x2c) "arealink_num"

		FOR (cnt=0; cnt<"%arealink_num%"; cnt=cnt+1) BEGIN

			//0x4 entrance name (contains area numbers)
			SET offset = ("%arealink_off%"+0xd8*cnt+0x4)
			READ_ASCII offset "resref_exit" (8)
			FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
			READ_ASCII offset "resref_exit" (6)
			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
			READ_ASCII offset "resref_exit" (7)
			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END
			READ_ASCII offset "resref_exit" (5)
			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref_exit%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					WRITE_ASCIIE offset "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" offset)
					PATCH_PRINT ~%str%~
				END
			END

			//0x2c random encounter ARE resref 1
			//0x34 random encounter ARE resref 2
			//0x3c random encounter ARE resref 3
			//0x44 random encounter ARE resref 4
			//0x4c random encounter ARE resref 5
			FOR (j=0; j<5; j=j+1) BEGIN
				SET offset = ("%arealink_off%"+0xd8*cnt+0x2c+0x8*j)
				READ_ASCII offset "resref_are"
				FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
					SPRINT name_source "resref_are_source%i%"
					SPRINT name_dest "resref_are_dest%i%"
					SPRINT resref_index_source EVAL ~%%name_source%%~
					SPRINT resref_index_dest EVAL ~%%name_dest%%~
					PATCH_IF ("%resref_are%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
						WRITE_ASCIIE offset "%resref_index_dest%" #8
						SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
						SPRINTF str ~%s %x~ ("%str%" offset)
						PATCH_PRINT ~%str%~
					END
				END
			END

		END

		SET wmp_check += 1
		SET checked = 1

	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//0-byte files
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "Ignoring 0 byte file") BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% %filetype% %patch_name%...~

		SET ignore_check += 1
		SET checked = 1

	END

END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_ARE_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Global("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Global~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalGT("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GlobalGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalLT("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GlobalLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalTimerExact("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GlobalTimerExact~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalTimerExpired("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GlobalTimerExpired~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalTimerNotExpired("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GlobalTimerNotExpired~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AreaCheck("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AreaCheck~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AreaCheckObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AreaCheckObject~ END ~\1%resref_index_dest%\2~

	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetGlobal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveArea("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LeaveArea~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IncrementGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - IncrementGlobal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetGlobalTimer("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetGlobalTimer~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddexperiencePartyGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AddexperiencePartyGlobal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RevealAreaOnMap("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - RevealAreaOnMap~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetMasterArea("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetMasterArea~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobal("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveGlobal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveBetweenAreas("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveBetweenAreas~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaMove("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EscapeAreaMove~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SaveLocation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SaveLocation~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SaveObjectLocation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SaveObjectLocation~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HideAreaOnMap("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HideAreaOnMap~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CopyGroundPilesTo("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CopyGroundPilesTo~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RealSetGlobalTimer("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - RealSetGlobalTimer~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaObjectMove("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EscapeAreaObjectMove~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToSavedLocationn("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveToSavedLocationn~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToSavedLocation("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveToSavedLocation~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DeathMatchPositionGlobal("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DeathMatchPositionGlobal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DeathMatchPositionArea("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DeathMatchPositionArea~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DeathMatchPositionLocal("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DeathMatchPositionLocal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalsTo("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveGlobalsTo~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalsTo("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveGlobalsTo~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetTokenGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetTokenGlobal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetEncounterProbability("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetEncounterProbability~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetEncounterProbability("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetEncounterProbability~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAEntry("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LeaveAreaLUAEntry~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAPanicEntry("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LeaveAreaLUAPanicEntry~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureAtLocation("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureAtLocation~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateItemGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateItemGlobal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUA("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LeaveAreaLUA~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAPanic("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LeaveAreaLUAPanic~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveBetweenAreasEffect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveBetweenAreasEffect~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BAM_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateVisualEffect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateVisualEffect~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateVisualEffectObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateVisualEffectObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectEffect("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectEffect~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopyEffect("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectCopyEffect~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUA("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LeaveAreaLUA~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAPanic("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LeaveAreaLUAPanic~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveBetweenAreasEffect("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveBetweenAreasEffect~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BCS_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAIScript("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeAIScript~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartCutscene("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartCutscene~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BMP_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StaticPalette("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StaticPalette~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_CRE_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreature("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreature~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAnimation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeAnimation~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAnimationNoEffect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeAnimationNoEffect~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureImpassable("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureImpassable~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureDoor("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureDoor~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectDoor("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectDoor~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectOffScreen("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectOffScreen~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureOffScreen("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureOffScreen~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopy("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectCopy~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectOffset("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectOffset~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureCopyPoint("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureCopyPoint~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureImpassableAllowOverlap("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureImpassableAllowOverlap~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureAtLocation("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureAtLocation~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectEffect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectEffect~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopyEffect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectCopyEffect~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_DV_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ActionOverride("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ActionOverride~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Attack("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Attack~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(BackStab("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BackStab~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Dialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Dialogue~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Dialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Dialog~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GetItem("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GetItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItem("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GiveItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveOrder("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GiveOrder~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LayHands("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LayHands~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveToObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickPockets("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PickPockets~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RunAwayFrom("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - RunAwayFrom~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Spell("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Spell~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItem("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - UseItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItemSlot("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - UseItemSlot~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Formation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Formation~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveViewObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveViewObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ClickLButtonObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ClickLButtonObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ClickRButtonObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ClickRButtonObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DoubleClickLButtonObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DoubleClickLButtonObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DoubleClickRButtonObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DoubleClickRButtonObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SendTrigger("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SendTrigger~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CallLightning("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CallLightning~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ProtectObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ProtectObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GroupAttack("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GroupAttack~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackNoSound("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AttackNoSound~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleSet("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoraleSet~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleInc("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoraleInc~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleDec("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoraleDec~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackOneRound("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AttackOneRound~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpell("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ForceSpell~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Deactivate("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Deactivate~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Activate("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Activate~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CutSceneId("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CutSceneId~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Kill("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Kill~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(VerbalConstant("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - VerbalConstant~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ClearActions("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ClearActions~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackReevaluate("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AttackReevaluate~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialog("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialog~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogue("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogue~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PlayerDialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PlayerDialog~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PlayerDialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PlayerDialogue~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItemCreate("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GiveItemCreate~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartStore("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartStore~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayString("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DisplayString~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAIType("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeAIType~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeEnemyAlly("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeEnemyAlly~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeGeneral("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeGeneral~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeRace("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeRace~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeClass("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeClass~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeSpecifics("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeSpecifics~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeGender("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeGender~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAlignment("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ChangeAlignment~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplySpell("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ApplySpell~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Interact("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Interact~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObjectFollow("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveToObjectFollow~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpell("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReallyForceSpell~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RunAwayFromNoInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - RunAwayFromNoInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellNoDec("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellNoDec~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveGlobal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueNoSet("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogueNoSet~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoSet("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogNoSet~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObjectNoInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveToObjectNoInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FollowObjectFormation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - FollowObjectFormation~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FaceObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - FaceObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObjectOffScreen("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveGlobalObjectOffScreen~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObjectOffScreen("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveGlobalObjectOffScreen~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellDead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReallyForceSpellDead~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Calm("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Calm~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SaveObjectLocation("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SaveObjectLocation~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetTokenObject("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetTokenObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetGabber("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetGabber~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopy("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectCopy~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectOffset("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectOffset~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddXPObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AddXPObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringNoName("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DisplayStringNoName~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DialogueForceInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DialogueForceInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DialogForceInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DialogForceInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogInterrupt("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueInterrupt("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogueInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueNoSetInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogueNoSetInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoSetInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogNoSetInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringHead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DisplayStringHead~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PolymorphCopy("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PolymorphCopy~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(VerbalConstantHead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - VerbalConstantHead~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateVisualEffectObject("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateVisualEffectObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectEffect("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectEffect~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopyEffect("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureObjectCopyEffect~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EscapeAreaObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaObjectMove("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EscapeAreaObjectMove~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakeItemReplace("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - TakeItemReplace~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PolymorphCopyBase("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PolymorphCopyBase~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObject("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveGlobalObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObject("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoveGlobalObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverride("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogOverride~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverrideInterrupt("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogOverrideInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureCopyPoint("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateCreatureCopyPoint~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplyDamage("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ApplyDamage~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplyDamagePercent("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ApplyDamagePercent~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringWait("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DisplayStringWait~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRange("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ForceSpellRange~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetPlayerSound("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetPlayerSound~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FakeEffectExpiryCheck("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - FakeEffectExpiryCheck~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoName("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogNoName~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellRES~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ForceSpellRES~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplySpellRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ApplySpellRES~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReallyForceSpellRES~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellNoDecRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellNoDecRES~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellDeadRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReallyForceSpellDeadRES~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRangeRES("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ForceSpellRangeRES~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringHeadDead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DisplayStringHeadDead~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringNoNameHead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DisplayStringNoNameHead~ END ~\1%resref_index_dest%\2~

	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackedBy("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AttackedBy~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Help("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Help~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Joins("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Joins~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Leaves("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Leaves~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReceivedOrder("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReceivedOrder~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Said("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Said~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TurnedBy("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - TurnedBy~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Alignment("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Alignment~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Allegiance("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Allegiance~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Class("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Class~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Exists("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Exists~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(General("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - General~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HP("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HP~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HPGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HPLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LOS("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LOS~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Morale("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Morale~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoraleGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - MoraleLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Race("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Race~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Range("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Range~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Reputation("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Reputation~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReputationGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReputationGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReputationLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReputationLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(See("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - See~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Specifics("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Specifics~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HitBy("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HitBy~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TargetUnreachable("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - TargetUnreachable~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreature("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumCreature~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumCreatureLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumCreatureGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPPercent("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HPPercent~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPPercentLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HPPercentLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPPercentGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HPPercentGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Heard("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Heard~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StateCheck("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StateCheck~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NotStateCheck("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NotStateCheck~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Reaction("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Reaction~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReactionGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReactionGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReactionLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReactionLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InParty("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InParty~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CheckStat("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CheckStat~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CheckStatGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CheckStatGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CheckStatLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CheckStatLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Died("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Died~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Killed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Killed~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Entered("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Entered~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Gender("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Gender~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Dead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Dead~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Opened("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Opened~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Closed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Closed~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Detected("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Detected~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Reset("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Reset~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Disarmed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Disarmed~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Unlocked("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Unlocked~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumTimesInteracted("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumTimesInteracted~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumTimesInteractedGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumTimesInteractedGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumTimesInteractedLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumTimesInteractedLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickPocketFailed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PickPocketFailed~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StealFailed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StealFailed~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisarmFailed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DisarmFailed~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickLockFailed("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PickLockFailed~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItem("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HasItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InteractingWith("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InteractingWith~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InWeaponRange("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InWeaponRange~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasWeaponEquiped("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HasWeaponEquiped~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Happiness("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Happiness~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HappinessGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HappinessGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HappinessLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HappinessLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Clicked("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Clicked~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumDead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumDead~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumDeadGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumDeadGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumDeadLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumDeadLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Detect("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Detect~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItems("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumItems~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsGT("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumItemsGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsLT("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumItemsLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsOverMe("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - IsOverMe~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquiped("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HasItemEquiped~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureVsParty("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumCreatureVsParty~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureVsPartyLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumCreatureVsPartyLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureVsPartyGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumCreatureVsPartyGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PartyMemberDied("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PartyMemberDied~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InPartySlot("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InPartySlot~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCast("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCast~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InLine("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InLine~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InLine("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InLine~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Level("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Level~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LevelGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LevelGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LevelLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LevelLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Summoned("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Summoned~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ObjectActionListEmpty("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ObjectActionListEmpty~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(OnScreen("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - OnScreen~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InActiveArea("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InActiveArea~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastOnMe("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastOnMe~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Name("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Name~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Name("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Name~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastPriest("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastPriest~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastInnate("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastInnate~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsValidForPartyDialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - IsValidForPartyDialog~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IfValidForPartyDialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - IfValidForPartyDialog~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsValidForPartyDialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - IsValidForPartyDialogue~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IfValidForPartyDialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - IfValidForPartyDialogue~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasBounceEffects("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HasBounceEffects~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasImmunityEffects("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HasImmunityEffects~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemSlot("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HasItemSlot~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PersonalSpaceDistance("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PersonalSpaceDistance~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InMyGroup("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InMyGroup~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Kit("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Kit~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsGabber("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - IsGabber~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsActive("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - IsActive~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CharName("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CharName~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CharName("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CharName~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FallenRanger("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - FallenRanger~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FallenPaladin("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - FallenPaladin~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InventoryFull("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InventoryFull~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquipedReal("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HasItemEquipedReal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(XP("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - XP~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(XPGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - XPGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(XPLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - XPLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InMyArea("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InMyArea~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InPartyAllowDead("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - InPartyAllowDead~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AreaCheckObject("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AreaCheckObject~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(WalkedToTrigger("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - WalkedToTrigger~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_DLG_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialog~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogue~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetDialog("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetDialog~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetDialogue("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SetDialogue~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogueInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverride("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogOverride~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverrideInterrupt("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogOverrideInterrupt~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoName("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartDialogNoName~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_ITM_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Acquired("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Acquired~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Unusable("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Unusable~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PartyHasItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PartyHasItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HasItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Contains("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Contains~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItems("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumItems~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumItemsGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumItemsLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsParty("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumItemsParty~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsPartyGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumItemsPartyGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsPartyLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - NumItemsPartyLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquiped("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HasItemEquiped~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PartyHasItemIdentified("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PartyHasItemIdentified~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquipedReal("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - HasItemEquipedReal~ END ~\1%resref_index_dest%\2~

	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DropItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DropItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EquipItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EquipItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GetItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GetItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GiveItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - UseItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItemSlot("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - UseItemSlot~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItemPoint("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - UseItemPoint~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - TakePartyItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItemCreate("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GiveItemCreate~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DestroyItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DestroyItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItemAll("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - TakePartyItemAll~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItemRange("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - TakePartyItemRange~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItemNum("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - TakePartyItemNum~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickUpItem("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PickUpItem~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakeItemReplace("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - TakeItemReplace~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakeItemReplace("[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - TakeItemReplace~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringHeadOwner("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DisplayStringHeadOwner~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateItemGlobal("[^"]*","[^"]*","\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CreateItemGlobal~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_SPL_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]*SpellRES\)("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1%~ END ~\1("%resref_index_dest%"~ //HaveSpellRES, RemoveSpellRES, SpellRES, ForceSpellRES, ApplySpellRES, ReallyForceSpellRES
	REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCastRES("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastRES~ END ~SpellCastRES("%resref_index_dest%"~
	REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCastOnMeRES("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastOnMeRES~ END ~SpellCastOnMeRES("%resref_index_dest%"~
	REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCastPriestRES("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastPriestRES~ END ~SpellCastPriestRES("%resref_index_dest%"~
	REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCastInnateRES("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastInnateRES~ END ~SpellCastInnateRES("%resref_index_dest%"~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]*SpellPointRES\)("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1%~ END ~\1("%resref_index_dest%"~ //SpellPointRES, ForceSpellPointRES, ReallyForceSpellPointRES
	REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]+NoDecRES\)("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1%~ END ~\1("%resref_index_dest%"~ //SpellNoDecRES, SpellPointNoDecRES
	REPLACE_EVALUATE CASE_INSENSITIVE ~ReallyForceSpellDeadRES("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReallyForceSpellDeadRES~ END ~ReallyForceSpellDeadRES("%resref_index_dest%"~
	REPLACE_EVALUATE CASE_INSENSITIVE ~AddSpecialAbility("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AddSpecialAbility~ END ~AddSpecialAbility("%resref_index_dest%"~
	REPLACE_EVALUATE CASE_INSENSITIVE ~ForceSpellRangeRES("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ForceSpellRangeRES~ END ~ForceSpellRangeRES("%resref_index_dest%"~
	REPLACE_EVALUATE CASE_INSENSITIVE ~ForceSpellPointRangeRES("%resref_index_source%"~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ForceSpellPointRangeRES~ END ~ForceSpellPointRangeRES("%resref_index_dest%"~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_SPLname_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]+Spell\)(%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1% -> %MATCH1%RES~ END ~\1RES("%resref_index_dest%")~ //HaveSpell, RemoveSpell
	REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCast(\([^,]+\),%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCast -> SpellCastRES~ END ~SpellCastRES("%resref_index_dest%",\1)~
	REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCastOnMe(\([^,]+\),%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastOnMe -> SpellCastOnMeRES~ END ~SpellCastOnMeRES("%resref_index_dest%",\1)~
	REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCastPriest(\([^,]+\),%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastPriest -> SpellCastPriestRES~ END ~SpellCastPriestRES("%resref_index_dest%",\1)~
	REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCastInnate(\([^,]+\),%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastInnate -> SpellCastInnateRES~ END ~SpellCastInnateRES("%resref_index_dest%",\1)~
	REPLACE_EVALUATE CASE_INSENSITIVE ~HaveSpellParty(%resref_index_source%)~ BEGIN PATCH_WARN ~Can't replace %resref_index_source% => %resref_index_dest%. There is no HaveSpellParty equivalent trigger that accepts RES reference. %SOURCE_FILESPEC% needs manual changes with HaveSpellRES and NextTriggerObject.~ END ~HaveSpellParty("%resref_index_source%")~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]*Spell\)(\([^,]+\),%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1% -> %MATCH1%RES~ END ~\1RES("%resref_index_dest%",\2)~ //Spell, ForceSpell, ApplySpell, ReallyForceSpell
	REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]*SpellPoint\)(\([^,]+\),%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1% -> %MATCH1%RES~ END ~\1RES("%resref_index_dest%",\2)~ //SpellPoint, ForceSpellPoint, ReallyForceSpellPoint
	REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]+NoDec\)(\([^,]+\),%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1% -> %MATCH1%RES~ END ~\1RES("%resref_index_dest%",\2)~ //SpellNoDec, SpellPointNoDec
	REPLACE_EVALUATE CASE_INSENSITIVE ~ReallyForceSpellDead(\([^,]+\),%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReallyForceSpellDead -> ReallyForceSpellDeadRES~ END ~ReallyForceSpellDeadRES("%resref_index_dest%",\1)~
	REPLACE_EVALUATE CASE_INSENSITIVE ~ForceSpellRange(\([^,]+\),%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ForceSpellRange -> ForceSpellRangeRES~ END ~ForceSpellRangeRES("%resref_index_dest%",\1)~
	REPLACE_EVALUATE CASE_INSENSITIVE ~ForceSpellPointRange(\([^,]+\),%resref_index_source%)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ForceSpellPointRange -> ForceSpellPointRangeRES~ END ~ForceSpellPointRangeRES("%resref_index_dest%",\1)~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_STO_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartStore("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartStore~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_WAV_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PlaySound("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - PlaySound~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_DLG_replace~ BEGIN
	//ResRefs bounded by ~ or "
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(BEGIN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BEGIN~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPEND~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND_EARLY[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPEND_EARLY~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_TOP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTEND_TOP~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_BOTTOM[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTEND_BOTTOM~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_STATE_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_STATE_TRIGGER~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_TRANS_TRIGGER~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_ACTION[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_TRANS_ACTION~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(SET_WEIGHT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SET_WEIGHT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_SAY[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_SAY~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_STATE_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_STATE_TRIGGER~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRIGGER_TEXT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRIGGER_TEXT_REGEXP~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_REGEXP~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_PROCESS~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_PROCESS_REGEXP~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(END[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - END~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTERN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTERN~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(COPY_TRANS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - COPY_TRANS~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPENDI[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPENDI~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(==[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ==~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CHAIN~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(THEN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - THEN~ END ~\1%resref_index_dest%\2~
	/* THEN correction is used for the beginning CHAIN */
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CHAIN~ END ~\1%resref_index_dest%\2~
	/* exitFilename for CHAIN2 cannot be corrected using this method */

	//ResRefs bounded by nothing
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(BEGIN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BEGIN~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPEND~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND_EARLY[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPEND_EARLY~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_TOP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTEND_TOP~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_BOTTOM[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTEND_BOTTOM~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_STATE_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_STATE_TRIGGER~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_TRANS_TRIGGER~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_ACTION[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_TRANS_ACTION~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(SET_WEIGHT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SET_WEIGHT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_SAY[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_SAY~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_STATE_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_STATE_TRIGGER~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRIGGER_TEXT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRIGGER_TEXT_REGEXP~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_REGEXP~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_PROCESS~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_PROCESS_REGEXP~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(END[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - END~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTERN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTERN~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(COPY_TRANS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - COPY_TRANS~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPENDI[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPENDI~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(==[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ==~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CHAIN~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(THEN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - THEN~ END ~\1%resref_index_dest%\2~
	/* THEN correction is used for the beginning CHAIN */
	REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CHAIN~ END ~\1%resref_index_dest%\2~
	/* exitFilename for CHAIN2 cannot be corrected using this method */
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_MVE_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartMovie("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - StartMovie~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_2DA_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IncrementChapter("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - IncrementChapter~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TextScreen("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - TextScreen~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_VAR_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Global("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - Global~ END ~\1%resref_index_dest%\2~//also catches SetGlobal and SetTokenGlobal
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalGT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GlobalGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalLT("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GlobalLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalsEqual(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GlobalsEqual~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalsGT(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GlobalsGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalsLT(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - GlobalsLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LocalsEqual(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LocalsEqual~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LocalsGT(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LocalsGT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LocalsLT(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - LocalsLT~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IncrementGlobal("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - IncrementGlobal~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddGlobals(.*"\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AddGlobals~ END ~\1%resref_index_dest%\2~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SG("\)%resref_index_source%\("\)~ BEGIN PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SG~ END ~\1%resref_index_dest%\2~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_traifyDLG_replace~ BEGIN
	REPLACE_TEXTUALLY EXACT_MATCH ~SAY #~ ~SAY @~
	REPLACE_TEXTUALLY EXACT_MATCH ~REPLY #~ ~REPLY @~
	REPLACE_TEXTUALLY EXACT_MATCH ~JOURNAL #~ ~JOURNAL @~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_traifyBCS_replace~ BEGIN
	REPLACE_TEXTUALLY ~SetQuestDone(~ ~SetQuestDone(@~
	REPLACE_TEXTUALLY ~AddJournalEntry(~ ~AddJournalEntry(@~
	REPLACE_TEXTUALLY ~EraseJournalEntry(~ ~EraseJournalEntry(@~
	REPLACE_TEXTUALLY ~SetName(~ ~SetName(@~
	REPLACE_TEXTUALLY ~DisplayStringPoint(~ ~DisplayStringPoint(@~
	REPLACE_TEXTUALLY ~\(DisplayString(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(SetToken(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringNoName(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHeadOwner(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringWait(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(SetPlayerSound([^,]*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(RemoveMapNote(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHeadDead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringNoNameHead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~@-1~ ~-1~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_DLGext_replace~ BEGIN
	REPLACE_TEXTUALLY ~~~~~\(EXTERN[ ]+[~"]+\)%resref_index_source%\([~"]+[ ]\)~~~~~ ~\1%resref_index_source%\2s~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////
//END Macros
/////////////////////////////////////////////////////////////////////////////////////////////////////////
