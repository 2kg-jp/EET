/////////////////////////////////////////////////////////////////////////////////////////////////////////
//BEGIN Macros
/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION ~EET_expand_tlk~
	INT_VAR
		min = 1 //minimum strref number used for patching
		max = "-1" //maximum strref number used for patching (cutoff detected via tra str_var if not specified)
	STR_VAR
		tra = "" //path to TRA file, only use it if you didn't set max int_var
		array = "" //name of the optional array that will replace one strref with another in CRE/EFF/ITM/SPL if fx_type = 267
	RET
		log //returns list of all changes made to the file
	BEGIN
	PATCH_IF (max < 0) BEGIN
		PATCH_IF (~%tra%~ STRING_EQUAL_CASE ~~) BEGIN
			PATCH_FAIL ~EET_expand_tlk needs to know total number of sttrefs in TRA file. Either set INT_VAR max or STR_VAR tra~
		END ELSE BEGIN
			INNER_ACTION BEGIN
				COPY - ~%tra%~ ~%tra%~
					COUNT_2DA_ROWS 3 "cnt_row"
					SPRINT StrRef_cutoff ~dummy~
					WHILE (~%StrRef_cutoff%~ STRING_CONTAINS_REGEXP ~^@[0-9]+~) BEGIN //not StrRef
						READ_2DA_ENTRY cnt_row 0 3 "StrRef_cutoff"
						SET cnt_row = cnt_row - 1
					END
					INNER_PATCH_SAVE StrRef_cutoff ~%StrRef_cutoff%~ BEGIN
						REPLACE_TEXTUALLY ~^@~ ~~
					END
					SET max = StrRef_cutoff
					//PATCH_PRINT ~StrRef min = %min%, max = %max%~
			END
		END
	END
	SPRINT ~log~ ~COPY "%SOURCE_FILESPEC%" "override"%LNL%~
	//ARE
	PATCH_IF (~%SOURCE_EXT%~ STRING_EQUAL_CASE ~are~) BEGIN
		//Info points, trigger points, and exit (regions/triggers)
		READ_LONG 0x5c "info_off"
		READ_SHORT 0x5a "info_cnt"
		FOR (cnt=0; cnt<"%info_cnt%"; cnt=cnt+1) BEGIN
			PATCH_FOR_EACH ~add_off~ IN 0x64 0xb8 BEGIN
				SET offset = ("%info_off%"+0xc4*cnt+"%add_off%") //Information text (for info points), Name
				READ_LONG offset "StrRef"
				PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
					SAY offset ( AT "StrRef" )
					SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
				END
			END
		END
		//Containers
		READ_LONG 0x70 "contain_off"
		READ_SHORT 0x74 "contain_cnt"
		FOR (cnt=0; cnt<"%contain_cnt%"; cnt=cnt+1) BEGIN
			SET offset = ("%contain_off%"+0xc0*cnt+0x84) //Lockpick string
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SAY offset ( AT "StrRef" )
				SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
			END
		END
		//Doors
		READ_LONG 0xa8 "door_off"
		READ_SHORT 0xa4 "door_cnt"
		FOR (cnt=0; cnt<"%door_cnt%"; cnt=cnt+1) BEGIN
			PATCH_FOR_EACH ~add_off~ IN 0x98 0xb4 BEGIN
				SET offset = ("%door_off%"+0xc8*cnt+"%add_off%") //Lockpick string, Dialog speaker name
				READ_LONG offset "StrRef"
				PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
					SAY offset ( AT "StrRef" )
					SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
				END
			END
		END
		//Automap Notes
		READ_LONG 0xc4 "note_off"
		READ_LONG 0xc8 "note_cnt"
		FOR (cnt=0; cnt<"%note_cnt%"; cnt=cnt+1) BEGIN
			SET offset = ("%note_off%"+0x34*cnt+0x4) //Note text
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SAY offset ( AT "StrRef" )
				SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
			END
		END
		//Rest Interruptions
		READ_LONG 0xc0 "rest_off"
		FOR (cnt=0; cnt<10; cnt=cnt+1) BEGIN
			SET offset = ("%rest_off%"+0x4*cnt+0x20) //Interruption explantion text (10*0x4)
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SAY offset ( AT "StrRef" )
				SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
			END
		END
	//CHR
	END ELSE PATCH_IF (~%SOURCE_EXT%~ STRING_EQUAL_CASE ~chr~) BEGIN
		FOR (index = 0; index < 99 ; index = index + 1) BEGIN
			SET "offset" = (0x108 + (0x4 * index))
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SAY offset ( AT "StrRef" )
			END
		END
	//CRE
	END ELSE PATCH_IF (~%SOURCE_EXT%~ STRING_EQUAL_CASE ~cre~) BEGIN
		PATCH_FOR_EACH ~offset~ IN 0x8 0xc BEGIN //Long name, Short name (tooltip)
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SAY offset ( AT "StrRef" )
				SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
			END
		END
		FOR (cnt=0; cnt<99; cnt=cnt+1) BEGIN
			SET offset = (0xa4+0x4*cnt)
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SAY offset ( AT "StrRef" )
				SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
			END
		END
		READ_LONG 0x2c4 "fx_off"
		READ_LONG 0x2c8 "fx_cnt"
		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN
			READ_LONG ("%fx_off%"+0x108*cnt+0x8) "fx_type"
			PATCH_IF ("%fx_type%" = 103) //Change Name
			OR ("%fx_type%" = 139) //Display String
			OR ("%fx_type%" = 180) //Can't Use Item
			OR ("%fx_type%" = 206) //Protection from Spell
			OR ("%fx_type%" = 253) //Add Map Marker
			OR ("%fx_type%" = 254) //Remove Map Marker
			OR ("%fx_type%" = 267) //Protection from Display Specific String
			OR ("%fx_type%" = 290) //Change Title
			OR ("%fx_type%" = 330) //Float text
			OR ("%fx_type%" = 338) //Disable rest or save
			BEGIN
				SET offset = ("%fx_off%"+0x108*cnt+0x14)
				READ_LONG offset "StrRef"
				PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
					SET str_updated = 0
					PATCH_IF ("%fx_type%" = 267) /*OR ("%fx_type%" = 139)*/ BEGIN
						PHP_EACH "%array%" AS "strOld" => "strNew" BEGIN
							PATCH_IF (StrRef = "%strOld_1%") OR (StrRef = "%strNew%") AND (str_updated = 0) BEGIN
								PATCH_IF ("%strOld_1%" = "%strNew%") OR (StrRef = "%strNew%") BEGIN
									//SAY offset ( AT "StrRef" )
									SPRINT ~log~ ~%log%  %slash%%slash%SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%, %strOld%%LNL%~
								END ELSE BEGIN
									WRITE_LONG offset "%strNew%"
									SPRINT ~log~ ~%log%  WRITE_LONG %offset% %strNew% %slash%%slash%opcode=%fx_type%, %strOld%%LNL%~
								END
								SET str_updated = 1
							END
						END
					END
					PATCH_IF (str_updated = 0) BEGIN
						SAY offset ( AT "StrRef" )
						SPRINT ~log~ ~%log%  SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%%LNL%~
					END
				END
			END ELSE PATCH_IF ("%fx_type%" = 319) BEGIN //Item Usability
				SET offset = ("%fx_off%"+0x108*cnt+0x40)
				READ_LONG offset "StrRef"
				PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
					SAY offset ( AT "StrRef" )
					SPRINT ~log~ ~%log%  SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%%LNL%~
				END
			END
		END
	//EFF
	END ELSE PATCH_IF (~%SOURCE_EXT%~ STRING_EQUAL_CASE ~eff~) BEGIN
		READ_LONG 0x10 "fx_type"
		PATCH_IF ("%fx_type%" = 103) //Change Name
		OR ("%fx_type%" = 139) //Display String
		OR ("%fx_type%" = 180) //Can't Use Item
		OR ("%fx_type%" = 206) //Protection from Spell
		OR ("%fx_type%" = 253) //Add Map Marker
		OR ("%fx_type%" = 254) //Remove Map Marker
		OR ("%fx_type%" = 267) //Protection from Display Specific String
		OR ("%fx_type%" = 290) //Change Title
		OR ("%fx_type%" = 330) //Float text
		OR ("%fx_type%" = 338) //Disable rest or save
		BEGIN
			SET offset = 0x1c
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SET str_updated = 0
				PATCH_IF ("%fx_type%" = 267) /*OR ("%fx_type%" = 139)*/ BEGIN
					PHP_EACH "%array%" AS "strOld" => "strNew" BEGIN
						PATCH_IF (StrRef = "%strOld_1%") OR (StrRef = "%strNew%") AND (str_updated = 0) BEGIN
							PATCH_IF ("%strOld_1%" = "%strNew%") OR (StrRef = "%strNew%") BEGIN
								//SAY offset ( AT "StrRef" )
								SPRINT ~log~ ~%log%  %slash%%slash%SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%, %strOld%%LNL%~
							END ELSE BEGIN
								WRITE_LONG offset "%strNew%"
								SPRINT ~log~ ~%log%  WRITE_LONG %offset% %strNew% %slash%%slash%opcode=%fx_type%, %strOld%%LNL%~
							END
							SET str_updated = 1
						END
					END
				END
				PATCH_IF (str_updated = 0) BEGIN
					SAY offset ( AT "StrRef" )
					SPRINT ~log~ ~%log%  SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%%LNL%~
				END
			END
		END ELSE PATCH_IF ("%fx_type%" = 319) BEGIN //Item Usability
			SET offset = 0x48
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SAY offset ( AT "StrRef" )
				SPRINT ~log~ ~%log%  SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%%LNL%~
			END
		END
	//ITM
	END ELSE PATCH_IF (~%SOURCE_EXT%~ STRING_EQUAL_CASE ~itm~) BEGIN
		PATCH_FOR_EACH ~offset~ IN 0x8 0xc 0x50 0x54 BEGIN //Name - Unidentified, Name - Identified, Description - Unidentified, Description - Identified
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SAY offset ( AT "StrRef" )
				SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
			END
		END
		READ_LONG 0x64 "abil_off"
		READ_SHORT 0x68 "abil_cnt"
		READ_LONG 0x6a "fx_off"
		READ_SHORT 0x70 "fx_cnt"
		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%abil_off%"+0x38*cnt+0x1e) "fx_num"
			SET fx_cnt += fx_num //gauge the total number of effects by summing global effects and the effects of each ability
		END
		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%fx_off%"+0x30*cnt) "fx_type"
			PATCH_IF ("%fx_type%" = 103) //Change Name
			OR ("%fx_type%" = 139) //Display String
			OR ("%fx_type%" = 180) //Can't Use Item
			OR ("%fx_type%" = 206) //Protection from Spell
			OR ("%fx_type%" = 253) //Add Map Marker
			OR ("%fx_type%" = 254) //Remove Map Marker
			OR ("%fx_type%" = 267) //Protection from Display Specific String
			OR ("%fx_type%" = 290) //Change Title
			OR ("%fx_type%" = 330) //Float text
			OR ("%fx_type%" = 338) //Disable rest or save
			BEGIN
				SET offset = ("%fx_off%"+0x30*cnt+0x4)
				READ_LONG offset "StrRef"
				PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
					SET str_updated = 0
					PATCH_IF ("%fx_type%" = 267) /*OR ("%fx_type%" = 139)*/ BEGIN
						PHP_EACH "%array%" AS "strOld" => "strNew" BEGIN
							PATCH_IF (StrRef = "%strOld_1%") OR (StrRef = "%strNew%") AND (str_updated = 0) BEGIN
								PATCH_IF ("%strOld_1%" = "%strNew%") OR (StrRef = "%strNew%") BEGIN
									//SAY offset ( AT "StrRef" )
									SPRINT ~log~ ~%log%  %slash%%slash%SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%, %strOld%%LNL%~
								END ELSE BEGIN
									WRITE_LONG offset "%strNew%"
									SPRINT ~log~ ~%log%  WRITE_LONG %offset% %strNew% %slash%%slash%opcode=%fx_type%, %strOld%%LNL%~
								END
								SET str_updated = 1
							END
						END
					END
					PATCH_IF (str_updated = 0) BEGIN
						SAY offset ( AT "StrRef" )
						SPRINT ~log~ ~%log%  SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%%LNL%~
					END
				END
			END ELSE PATCH_IF ("%fx_type%" = 319) BEGIN //Item Usability
				SET offset = ("%fx_off%"+0x30*cnt+0x2c)
				READ_LONG offset "StrRef"
				PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
					SAY offset ( AT "StrRef" )
					SPRINT ~log~ ~%log%  SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%%LNL%~
				END
			END
		END
	//PRO
	END ELSE PATCH_IF (~%SOURCE_EXT%~ STRING_EQUAL_CASE ~pro~) BEGIN
		SET offset = 0x30 //String
		READ_LONG offset "StrRef"
		PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
			SAY offset ( AT "StrRef" )
			SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
		END
	//SPL
	END ELSE PATCH_IF (~%SOURCE_EXT%~ STRING_EQUAL_CASE ~spl~) BEGIN
		PATCH_FOR_EACH ~offset~ IN 0x8 0xc 0x50 0x54 BEGIN //Name - Unidentified, Name - Identified, Description - Unidentified, Description - Identified
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SAY offset ( AT "StrRef" )
				SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
			END
		END
		READ_LONG 0x64 "abil_off"
		READ_SHORT 0x68 "abil_cnt"
		READ_LONG 0x6a "fx_off"
		READ_SHORT 0x70 "fx_cnt"
		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%abil_off%"+0x28*cnt+0x1e) "fx_num"
			SET fx_cnt += fx_num //gauge the total number of effects by summing global effects and the effects of each ability
		END
		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%fx_off%"+0x30*cnt) "fx_type"
			PATCH_IF ("%fx_type%" = 103) //Change Name
			OR ("%fx_type%" = 139) //Display String
			OR ("%fx_type%" = 180) //Can't Use Item
			OR ("%fx_type%" = 206) //Protection from Spell
			OR ("%fx_type%" = 253) //Add Map Marker
			OR ("%fx_type%" = 254) //Remove Map Marker
			OR ("%fx_type%" = 267) //Protection from Display Specific String
			OR ("%fx_type%" = 290) //Change Title
			OR ("%fx_type%" = 330) //Float text
			OR ("%fx_type%" = 338) //Disable rest or save
			BEGIN
				SET offset = ("%fx_off%"+0x30*cnt+0x4)
				READ_LONG offset "StrRef"
				PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
					SET str_updated = 0
					PATCH_IF ("%fx_type%" = 267) /*OR ("%fx_type%" = 139)*/ BEGIN
						PHP_EACH "%array%" AS "strOld" => "strNew" BEGIN
							PATCH_IF (StrRef = "%strOld_1%") OR (StrRef = "%strNew%") AND (str_updated = 0) BEGIN
								PATCH_IF ("%strOld_1%" = "%strNew%") OR (StrRef = "%strNew%") BEGIN
									//SAY offset ( AT "StrRef" )
									SPRINT ~log~ ~%log%  %slash%%slash%SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%, %strOld%%LNL%~
								END ELSE BEGIN
									WRITE_LONG offset "%strNew%"
									SPRINT ~log~ ~%log%  WRITE_LONG %offset% %strNew% %slash%%slash%opcode=%fx_type%, %strOld%%LNL%~
								END
								SET str_updated = 1
							END
						END
					END
					PATCH_IF (str_updated = 0) BEGIN
						SAY offset ( AT "StrRef" )
						SPRINT ~log~ ~%log%  SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%%LNL%~
					END
				END
			END ELSE PATCH_IF ("%fx_type%" = 319) BEGIN //Item Usability
				SET offset = ("%fx_off%"+0x30*cnt+0x2c)
				READ_LONG offset "StrRef"
				PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
					SAY offset ( AT "StrRef" )
					SPRINT ~log~ ~%log%  SAY %offset% @%StrRef% %slash%%slash%opcode=%fx_type%%LNL%~
				END
			END
		END
	//STO
	END ELSE PATCH_IF (~%SOURCE_EXT%~ STRING_EQUAL_CASE ~sto~) BEGIN
		SET offset = 0xc //Name
		READ_LONG offset "StrRef"
		PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
			SAY offset ( AT "StrRef" )
			SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
		END
		READ_LONG 0x4c "drink_off"
		READ_SHORT 0x50 "drink_cnt"
		FOR (cnt=0; cnt<"%drink_cnt%"; cnt=cnt+1) BEGIN
			SET offset = ("%drink_off%"+0x14*cnt+0x8) //Drink name
			READ_LONG offset "StrRef"
			PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
				SAY offset ( AT "StrRef" )
				SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
			END
		END
	//WMP
	END ELSE PATCH_IF (~%SOURCE_EXT%~ STRING_EQUAL_CASE ~wmp~) BEGIN
		// possibility of more than one world map?
		//READ_LONG 0x8 "mapentry_num"
		READ_LONG 0xc "mapentry_off"
		READ_LONG ("%mapentry_off%"+0x20) "areaentry_num"
		READ_LONG ("%mapentry_off%"+0x24) "areaentry_off"
		FOR (cnt=0; cnt<"%areaentry_num%"; cnt=cnt+1) BEGIN
			PATCH_FOR_EACH ~add_off~ IN 0x40 0x44 BEGIN
				SET offset = ("%areaentry_off%"+0xf0*cnt+"%add_off%") //Name (caption), Name (tooltips)
				READ_LONG offset "StrRef"
				PATCH_IF ((StrRef >= min) AND (StrRef <= max)) BEGIN
					SAY offset ( AT "StrRef" )
					SPRINT ~log~ ~%log%  SAY %offset% @%StrRef%%LNL%~
				END
			END
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION ~EET_textscreen_music~
	INT_VAR
		mus_fadeEnd = 0
		mus_delayEnd = 0
		mus_volumeInt = 1
		mus_volumeFloat = 0
		spe_delayStart = 0
		spe_volumeInt = 1
		spe_volumeFloat = 0
	STR_VAR
		sox = EVAL "EET%os_slash%bin%os_slash%%WEIDU_OS%%os_slash%sox_%os_slash%sox%exe%"
		snd2acm = EVAL "EET%os_slash%bin%os_slash%%WEIDU_OS%%os_slash%snd2acm%exe%"
		temp_dir = EVAL "EET%os_slash%temp"
		input_spe_array = ""
		input_mus = ""
		output = ""
	BEGIN
	AT_NOW ~%sox% --i -D %input_mus% >%temp_dir%\length.txt~
	OUTER_SPRINT input_spe ~~
	ACTION_PHP_EACH "%input_spe_array%" AS index => file BEGIN
		OUTER_SPRINT input_spe ~%input_spe% %file%~
		AT_NOW ~%sox% --i -D %file% >>%temp_dir%\length.txt~
	END
	COPY - ~%temp_dir%/length.txt~ ~.../length.txt~
		SET mus_int = 0
		REPLACE_EVALUATE CASE_INSENSITIVE ~^\([0-9]+\).\([0-9]+\)~ BEGIN
			PATCH_IF (mus_int = 0) BEGIN
				SET mus_int = MATCH1
				SET mus_float = MATCH2
				SET spe_int = 0
				SET spe_float = 0
				PATCH_PRINT ~mus_int = %mus_int%, mus_float = %mus_float%~
			END ELSE BEGIN
				SET spe_int = spe_int + MATCH1
				SET spe_float = spe_float + MATCH2
			END
		END ~~
		WHILE ( spe_float > 1000000 ) BEGIN
			SET spe_int = spe_int + 1
			SET spe_float = spe_float - 1000000
		END
		PATCH_PRINT ~spe_int = %spe_int%, spe_float = %spe_float%~
		SET trim_int = mus_int - spe_int - mus_fadeEnd - mus_delayEnd - spe_delayStart
		SET trim_float = mus_float - spe_float
		PATCH_IF ( trim_float < 0 ) BEGIN
			SET trim_float = 1000000 + trim_float
			SET trim_int = trim_int - 1
		END
	ACTION_IF (trim_int > 0 ) BEGIN
		OUTER_SPRINT trim_mus ~%sox% %input_mus% %temp_dir%\input_mus.wav fade 0 -%trim_int%.%trim_float% %mus_fadeEnd%~ //Parameter 1 is '0' so there is no fade in. Parameter 2 removes the last %trim_int%.%trim_float% seconds Parameter 3 uses a %mus_fadeEnd% fade
		PRINT ~trim_int = %trim_int%, trim_float = %trim_float%~
	END ELSE BEGIN
		OUTER_SPRINT trim_mus ~~
		PRINT ~mus file not trimmed~
		COPY_LARGE + ~%input_mus%~ ~%temp_dir%/input_mus.wav~
	END
	ACTION_IF ~%WEIDU_OS%~ STRING_EQUAL_CASE ~win32~ BEGIN
		OUTER_SPRINT bash_cmd ~~
		OUTER_SPRINT bash_ext ~bat~
	END ELSE BEGIN
		OUTER_SPRINT bash_cmd ~#!/bin/bash~
		OUTER_SPRINT bash_ext ~bash~
	END
<<<<<<<< .../sox.cmd
%bash_cmd%

%trim_mus%
%sox% %input_spe% %temp_dir%%os_slash%out_speech.wav channels 1 rate 22050 vol %spe_volumeInt%.%spe_volumeFloat%
%sox% %temp_dir%%os_slash%input_mus.wav %temp_dir%%os_slash%out_mus.wav channels 1 rate 22050 vol %mus_volumeInt%.%mus_volumeFloat%
%sox% -m %temp_dir%%os_slash%out_mus.wav "|%sox% %temp_dir%%os_slash%out_speech.wav -p pad %spe_delayStart%" %output%
%snd2acm% -wav %output% %output%.acm
>>>>>>>>
	COPY + ~.../sox.cmd~ ~%temp_dir%/sox.%bash_ext%~ EVALUATE_BUFFER
	ACTION_IF ~%WEIDU_OS%~ STR_CMP ~win32~ BEGIN
		AT_NOW ~chmod 755 %temp_dir%/sox.bash~
	END
	AT_NOW ~CALL %temp_dir%%os_slash%sox.%bash_ext%~
	OUTER_INNER_PATCH_SAVE output_dir ~%output%~ BEGIN
		REPLACE_TEXTUALLY ~\\~ ~/~
		REPLACE_TEXTUALLY ~/[^/]+$~ ~~
	END
	OUTER_INNER_PATCH_SAVE output_file ~%output%~ BEGIN
		REPLACE_TEXTUALLY ~\\~ ~/~
		REPLACE_TEXTUALLY ~^.*/~ ~~
	END
	PRINT ~output_dir = %output_dir%, output_file = %output_file%~
	ACTION_BASH_FOR ~%output_dir%~ ~^%output_file%$~ BEGIN 
		OUTER_SET wavsize = BASH_FOR_SIZE + 8
	END
	COPY ~EET/base/dummy.wavc~ ~EET/base/dummy.wavc~ //Read the constant in wavc header
		READ_ASCII 0x10 wavcheader (12)
	BUT_ONLY
	COPY + ~%output_dir%/%output_file%.acm~ ~%output_dir%/%output_file%~
		SET acmsize = SOURCE_SIZE
		PATCH_PRINT ~wavsize = %wavsize%, acmsize = %acmsize%~
		INSERT_BYTES 0x0 28 //WAVC header size
		WRITE_ASCII 0x0 ~WAVCV1.0~ #8
		WRITE_LONG 0x8 wavsize //Uncompressed size: get this from the source WAV before compressing to ACM
		WRITE_LONG 0xc acmsize //Compressed size
		WRITE_EVALUATED_ASCII 0x10 ~%wavcheader%~ #12
	DELETE + ~%output_dir%/%output_file%.acm~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO ~bash_log~ BEGIN //whenever this macro is invoked, it moves the contents of EET/temp/bash.debug to the real log.
	LOCAL_SET ln=0
	LOCAL_SPRINT log ~~
	ACTION_IF FILE_EXISTS ~EET/temp/bash.debug~ AND NOT FILE_SIZE ~EET/temp/bash.debug~ 0 BEGIN //don't do this if no log is available now.
		COPY + ~EET/temp/bash.debug~ ~EET/temp/bash.debug~
			ln=BUFFER_LENGTH
			READ_ASCII 0 log (ln)
			DELETE_BYTES 0 ln
			PATCH_LOG ~%log%~
			SPRINT log ~~
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO ~EET_write_soundset~ BEGIN //Workaround for regexp glitch in Gort's WRITE_SOUNDSET
	COPY_EXISTING ~%npc%~ ~override~
		PATCH_IF SOURCE_SIZE > 0x2d3 BEGIN
			FOR (j1 = 0; j1 < 100; j1 += 1) BEGIN
				READ_LONG (0xa4 + j1 * 4) srf
				SET nsrf = EVAL ~%soundset%_%j1%~
				PATCH_IF (overwrite = 0) AND (srf = (0 - 1)) BEGIN //Soft writing
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END ELSE PATCH_IF (overwrite = 1) AND NOT (nsrf = (0 - 1)) BEGIN //Forced writing
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END ELSE PATCH_IF overwrite = 2 BEGIN //Overwrite regardless
					WRITE_LONG (0xa4 + j1 * 4) nsrf
				END
			END
		END
	BUT_ONLY
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

//Dumps the areas and links of a .wmp file to textual data
DEFINE_PATCH_FUNCTION ~dump_wmp~
	INT_VAR
		tra_read = 0
		move_x = 0
		move_y = 0
		compare_bams = 0
		skip_areas = 0
		skip_links = 0
	STR_VAR
		2da_links_array = ""
		icons_array = ""
		tra = ""
		output_areas = EVAL "%SOURCE_RES%_areas.2da"
		output_links = EVAL "%SOURCE_RES%_links.2da"
		output_strings = EVAL "%SOURCE_RES%_trans.tra"
	BEGIN
	SPRINT tilde "~"
	SPRINT quote ~"~
	SPRINT area_string "SHORT_NAME CONTENT LONG_NAME FLAGS BAM_ANIM X_POS Y_POS NAME TOOLTIP LOAD_IM%LNL%"
	SPRINT link_string "SRC_AREA SRC_NWSE TARGET_ARE ENTRY_NAME TRV_TIME DEF_ENTRY ENC1 ENC2 ENC3 ENC4 ENC5 ENC_PROB%LNL%"
	SPRINT trans_string ""
	SPRINT area_log ""
	READ_LONG 0x30 na
	READ_LONG 0x34 ao
	READ_LONG 0x38 lo
	FOR (i=0;i<na;++i) BEGIN
		READ_ASCII ao + 0xf0*i area
		PATCH_IF (skip_areas = 0) BEGIN
			READ_LONG ao + 0xf0*i + 0x30 flags
			READ_LONG ao + 0xf0*i + 0x34 bam
			PHP_EACH "%icons_array%" AS "compare" => "icon" BEGIN
				PATCH_IF (~%area%~ STRING_EQUAL_CASE ~%compare%~) BEGIN
					SPRINT area_log ~%area_log% %area%~
					PATCH_PRINT ~%area% wmp icon patching: %bam% -> %icon%~
					SET bam = icon
				END
			END
			PATCH_IF (compare_bams = 1) BEGIN
				PHP_EACH "%icons_array%" AS "compare" => "icon" BEGIN
					PATCH_IF (~%bam%~ STRING_EQUAL_CASE ~%compare_1%~) AND (~%area_log%~ STRING_CONTAINS_REGEXP ~%area%~) BEGIN
						SPRINT area_log ~%area_log% %area%~
						PATCH_PRINT ~%area% wmp icon patching: %bam% -> %icon%~
						SET bam = icon
					END
				END
			END
			READ_LONG ao + 0xf0*i + 0x38 xcor
			SET xcor = xcor + move_x
			READ_LONG ao + 0xf0*i + 0x3c ycor
			SET ycor = ycor + move_y
			//READ_ASCII ao + 0xf0*i + 0x48 load
			SPRINT load N
			READ_LONG ao + 0xf0*i + 0x40 name
			READ_LONG ao + 0xf0*i + 0x44 tool
			PATCH_IF (tra_read = 0) BEGIN
				PATCH_IF (name < 0) BEGIN
					SPRINT name ~~
					SPRINT tool ~~
				END ELSE BEGIN
					READ_STRREF ao + 0xf0*i + 0x40 name
					READ_STRREF ao + 0xf0*i + 0x44 tool
				END
			END ELSE BEGIN
				INNER_ACTION BEGIN
					ACTION_IF (FILE_CONTAINS_EVALUATED (~%tra%~ ~^[ %TAB%]*@%name%[ %TAB%]*=[ %TAB%]*[%tilde%%quote%]\(.*\)[%tilde%%quote%][^%tilde%^%quote%]*$~)) BEGIN
						COPY - ~%tra%~ ~%tra%~
							REPLACE_EVALUATE CASE_INSENSITIVE ~^[ %TAB%]*@%name%[ %TAB%]*=[ %TAB%]*[%tilde%%quote%]\(.*\)[%tilde%%quote%][^%tilde%^%quote%]*$~ BEGIN
								SPRINT name "%MATCH1%"
								SPRINT tool "%MATCH1%"
							END
							~~
					END ELSE BEGIN
						OUTER_SPRINT name ~~
						OUTER_SPRINT tool ~~
					END
				END
			END
			SET doOnce = 0
			PATCH_FOR_EACH var IN name tool BEGIN
				SPRINT content EVAL "%%var%%"
				PATCH_IF ("%content%" STRING_EQUAL_CASE "") BEGIN
					SPRINT EVAL "%var%" N
				END ELSE BEGIN
					INNER_PATCH_SAVE content "%content%" BEGIN
						REPLACE_TEXTUALLY " " "###"
					END
					PATCH_IF (doOnce = 0) BEGIN
						SPRINT trans_string "%trans_string%@%area% = %quote%%content%%quote%%LNL%"
						SET doOnce = 1
					END
					SPRINT EVAL "%var%" "@%area%"
				END
			END
			SPRINT area_string "%area_string%%area% %area% %area% %flags% %bam% %xcor% %ycor% %name% %tool% %load%%LNL%"
		END
		PATCH_IF (skip_links = 0) BEGIN
			PATCH_FOR_EACH j IN 0 3 2 1 BEGIN
				READ_LONG ao + 0xf0*i + 0x50 + 0x8*j li
				READ_LONG ao + 0xf0*i + 0x54 + 0x8*j nl
				FOR (k=0;k<nl;++k) BEGIN
					READ_LONG lo + 0xd8*(li + k) target
					READ_ASCII ao + 0xf0*target target_are
					READ_ASCII lo + 0xd8*(li + k) + 0x4 entry (32) NULL
					READ_LONG lo + 0xd8*(li + k) + 0x24 time
					READ_LONG lo + 0xd8*(li + k) + 0x28 flags
					READ_ASCII lo + 0xd8*(li + k) + 0x2c enc1
					READ_ASCII lo + 0xd8*(li + k) + 0x34 enc2
					READ_ASCII lo + 0xd8*(li + k) + 0x3c enc3
					READ_ASCII lo + 0xd8*(li + k) + 0x44 enc4
					READ_ASCII lo + 0xd8*(li + k) + 0x4c enc5
					READ_LONG lo + 0xd8*(li + k) + 0x54 prob
					PATCH_FOR_EACH var IN entry enc1 enc2 enc3 enc4 enc5 BEGIN
						SPRINT content EVAL "%%var%%"
						PATCH_IF ("%content%" STRING_EQUAL_CASE "") BEGIN
							SPRINT EVAL "%var%" N
						END ELSE BEGIN
							INNER_PATCH_SAVE content "%content%" BEGIN
								REPLACE_TEXTUALLY " " "###"
							END
							SPRINT EVAL "%var%" "%content%"
						END
					END
					INNER_PATCH_SAVE nesw "%j%" BEGIN
						REPLACE_TEXTUALLY 0 N
						REPLACE_TEXTUALLY 1 W
						REPLACE_TEXTUALLY 2 S
						REPLACE_TEXTUALLY 3 E
					END
					PATCH_IF (("%link_string%" STRING_CONTAINS_REGEXP "%area% %nesw% %target_are% %entry% %time% %flags% %enc1% %enc2% %enc3% %enc4% %enc5% %prob%")=0) BEGIN
						PATCH_PRINT ~Skipping duplicated link: %area% %nesw% %target_are% %entry% %time% %flags% %enc1% %enc2% %enc3% %enc4% %enc5% %prob%~
					END ELSE BEGIN
						SPRINT link_string "%link_string%%area% %nesw% %target_are% %entry% %time% %flags% %enc1% %enc2% %enc3% %enc4% %enc5% %prob%%LNL%"
					END
				END
			END
		END
	END
	INNER_ACTION BEGIN
		ACTION_PHP_EACH "%2da_links_array%" AS "source" => "file" BEGIN
			COPY_EXISTING - ~%file%.2da~ ~override~
				PRETTY_PRINT_2DA
				REPLACE_TEXTUALLY ~\*~ ~N~
				REPLACE_EVALUATE CASE_INSENSITIVE ~^[0-9]+[ ]+\([A-Za-z0-9#_!$@]+\)+[ ]+\([0-9]+\)[ ]+\([A-Za-z0-9#_!$@]+\)[ ]+\([0-9]+\)[ ]+\([0-9]+\)[ ]+\([A-Za-z0-9#_!$@]+\)[ ]+\([A-Za-z0-9#_!$@]+\)[ ]+\([A-Za-z0-9#_!$@]+\)[ ]+\([A-Za-z0-9#_!$@]+\)[ ]+\([A-Za-z0-9#_!$@]+\)[ ]+\([A-Za-z0-9#_!$@]+\)$~ BEGIN
					SPRINT nesw ~%MATCH11%~
					INNER_PATCH_SAVE nesw "%nesw%" BEGIN
						REPLACE_TEXTUALLY 0 N
						REPLACE_TEXTUALLY 1 W
						REPLACE_TEXTUALLY 2 S
						REPLACE_TEXTUALLY 3 E
					END
					PATCH_IF (("%link_string%" STRING_CONTAINS_REGEXP "%source% %nesw% %MATCH1% %MATCH3% %MATCH4% %MATCH2% %MATCH6% %MATCH7% %MATCH8% %MATCH9% %MATCH10% %MATCH5%")=0) BEGIN
						PATCH_PRINT ~Skipping duplicated link: %source% %nesw% %MATCH1% %MATCH3% %MATCH4% %MATCH2% %MATCH6% %MATCH7% %MATCH8% %MATCH9% %MATCH10% %MATCH5%~
					END ELSE BEGIN
						SPRINT link_string "%link_string%%source% %nesw% %MATCH1% %MATCH3% %MATCH4% %MATCH2% %MATCH6% %MATCH7% %MATCH8% %MATCH9% %MATCH10% %MATCH5%%LNL%"
					END
				END
				~~
		END
<<<<<<<< ...blank
>>>>>>>>
		ACTION_IF (skip_areas = 0) BEGIN
			COPY + ~...blank~ ~%output_areas%~
				INSERT_BYTES 0 STRING_LENGTH "%area_string%"
				WRITE_ASCIIE 0 "%area_string%"
				PRETTY_PRINT_2DA
				REPLACE_TEXTUALLY ~^[ ]+~ ~~
			COPY + ~...blank~ ~%output_strings%~
				INSERT_BYTES 0 STRING_LENGTH "%trans_string%"
				WRITE_ASCIIE 0 "%trans_string%"
		END
		ACTION_IF (skip_links = 0) BEGIN
			COPY + ~...blank~ ~%output_links%~
				INSERT_BYTES 0 STRING_LENGTH "%link_string%"
				WRITE_ASCIIE 0 "%link_string%"
				PRETTY_PRINT_2DA
				REPLACE_TEXTUALLY ~^[ ]+~ ~~
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~read_area_array_from_2da~ BEGIN
	LOCAL_SPRINT fl#r2en_area ""
	LOCAL_SET i = 0
	LOCAL_SPRINT area ""
	LOCAL_SPRINT short ""
	LOCAL_SPRINT long ""
	LOCAL_SET flags = 0
	LOCAL_SET bam = 0
	LOCAL_SET x_cor = 0
	LOCAL_SET y_cor = 0
	LOCAL_SPRINT name ""
	LOCAL_SPRINT tool ""
	LOCAL_SPRINT load ""
	LOCAL_SPRINT var ""
	LOCAL_SPRINT cmp ""
	LOCAL_SPRINT array ""

	PATCH_PRINT ~read_area_array_from_2da~
	READ_2DA_ENTRIES_NOW fl#r2en_area 10
	FOR (i=0;i<fl#r2en_area;++i) BEGIN
		READ_2DA_ENTRY_FORMER fl#r2en_area i 0 area
		READ_2DA_ENTRY_FORMER fl#r2en_area i 1 short
		READ_2DA_ENTRY_FORMER fl#r2en_area i 2 long
		READ_2DA_ENTRY_FORMER fl#r2en_area i 3 flags
		READ_2DA_ENTRY_FORMER fl#r2en_area i 4 bam
		READ_2DA_ENTRY_FORMER fl#r2en_area i 5 x_cor
		READ_2DA_ENTRY_FORMER fl#r2en_area i 6 y_cor
		READ_2DA_ENTRY_FORMER fl#r2en_area i 7 name
		READ_2DA_ENTRY_FORMER fl#r2en_area i 8 tool
		READ_2DA_ENTRY_FORMER fl#r2en_area i 9 load
		PATCH_PRINT ~%area% %short% %long% %flags% %bam% %x_cor% %y_cor% %name% %tool% %load%~
		TO_LOWER area
		TO_UPPER name
		TO_UPPER tool
		PATCH_IF "%area%" STRING_COMPARE_CASE SHORT_NAME AND
		"%area%" STRING_COMPARE_CASE CONTENT AND
		FILE_EXISTS_IN_GAME "%area%.are" BEGIN
			PATCH_IF !VARIABLE_IS_SET $fl#CONTENT("%area%") BEGIN
				SET $fl#CONTENT("%area%") = 0
			END
			SPRINT $fl#SHORT("%area%") "%short%"
			SPRINT $fl#LONG("%area%") "%long%"
			SET $fl#FLAGS("%area%") = flags
			SET $fl#BAM("%area%") = bam
			SET $fl#XCOR("%area%") = x_cor
			SET $fl#YCOR("%area%") = y_cor
			PATCH_FOR_EACH var IN name tool load BEGIN
				SPRINT cmp EVAL "%%var%%"
				SPRINT array "%var%"
				TO_UPPER array
				PATCH_IF "%cmp%" STRING_COMPARE_CASE N BEGIN
					SPRINT $EVAL "fl#%array%"("%area%") EVAL "%%var%%"
				END
			END
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~read_link_array_from_2da~ BEGIN
	LOCAL_SPRINT fl#r2en_link ""
	LOCAL_SET i = 0
	LOCAL_SPRINT src ""
	LOCAL_SPRINT j ""
	LOCAL_SPRINT trgt ""
	LOCAL_SPRINT entry ""
	LOCAL_SET time = 0
	LOCAL_SET def = 0
	LOCAL_SPRINT enc1 ""
	LOCAL_SPRINT enc2 ""
	LOCAL_SPRINT enc3 ""
	LOCAL_SPRINT enc4 ""
	LOCAL_SPRINT enc5 ""
	LOCAL_SET prob = 0
	LOCAL_SPRINT var ""
	LOCAL_SPRINT cmp ""
	LOCAL_SPRINT array ""

	PATCH_PRINT ~read_link_array_from_2da~
	SET $j_array(n) = 0
	SET $j_array(e) = 3
	SET $j_array(s) = 2
	SET $j_array(w) = 1
	READ_2DA_ENTRIES_NOW fl#r2en_link 12
	FOR (i=0;i<fl#r2en_link;++i) BEGIN
		READ_2DA_ENTRY_FORMER fl#r2en_link i 0  src
		READ_2DA_ENTRY_FORMER fl#r2en_link i 1  j
		READ_2DA_ENTRY_FORMER fl#r2en_link i 2  trgt
		READ_2DA_ENTRY_FORMER fl#r2en_link i 3  entry
		READ_2DA_ENTRY_FORMER fl#r2en_link i 4  time
		READ_2DA_ENTRY_FORMER fl#r2en_link i 5  def
		READ_2DA_ENTRY_FORMER fl#r2en_link i 6  enc1
		READ_2DA_ENTRY_FORMER fl#r2en_link i 7  enc2
		READ_2DA_ENTRY_FORMER fl#r2en_link i 8  enc3
		READ_2DA_ENTRY_FORMER fl#r2en_link i 9  enc4
		READ_2DA_ENTRY_FORMER fl#r2en_link i 10 enc5
		READ_2DA_ENTRY_FORMER fl#r2en_link i 11 prob
		PATCH_PRINT ~%src% %j% %trgt% %entry% %time% %def% %enc1% %enc2% %enc3% %enc4% %enc5% %prob%~
		TO_LOWER src
		TO_LOWER j
		TO_LOWER trgt
		PATCH_IF ("%src%" STRING_COMPARE_CASE SRC_AREA AND
		"%trgt%" STRING_COMPARE_CASE TARGET_AREA AND
		"%trgt%" STRING_COMPARE_CASE TARGET_ARE) AND
		(!VARIABLE_IS_SET $fl#LINK_BLACKLIST("%src%" "%j%" "%trgt%") OR
		(VARIABLE_IS_SET $fl#LINK_BLACKLIST("%src%" "%j%" "%trgt%") AND
		$fl#LINK_BLACKLIST("%src%" "%j%" "%trgt%") = 0)) AND
		FILE_EXISTS_IN_GAME "%src%.are" AND
		FILE_EXISTS_IN_GAME "%trgt%.are" BEGIN
			j = $j_array("%j%")
			PATCH_IF !VARIABLE_IS_SET $EVAL "fl#INDEX_%j%"("%src%" "%trgt%") BEGIN
				SET $EVAL "fl#INDEX_%j%"("%src%" "%trgt%") = 0
			END
			SET $fl#TIME("%src%" "%j%" "%trgt%") = time
			SET $fl#DEF("%src%" "%j%" "%trgt%") = def
			PATCH_FOR_EACH var IN entry enc1 enc2 enc3 enc4 enc5 BEGIN
				SPRINT cmp EVAL "%%var%%"
				SPRINT array "%var%"
				TO_UPPER array
				INNER_PATCH_SAVE cmp "%cmp%" BEGIN
					REPLACE_TEXTUALLY "###" " "
				END
				PATCH_IF "%cmp%" STRING_COMPARE_CASE N BEGIN
					SPRINT $EVAL "fl#%array%"("%src%" "%j%" "%trgt%") "%cmp%"
				END
			END
			SET $fl#PROB("%src%" "%j%" "%trgt%") = prob
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~read_trans_array_from_2da~ BEGIN
	LOCAL_SPRINT fl#r2en_trans ""
	LOCAL_SET i = 0
	LOCAL_SPRINT id ""
	LOCAL_SPRINT string ""

	PATCH_PRINT ~read_trans_array_from_2da~
	READ_2DA_ENTRIES_NOW fl#r2en_trans 3
	FOR (i=0;i<fl#r2en_trans;++i) BEGIN
		READ_2DA_ENTRY_FORMER fl#r2en_trans i 0 id
		READ_2DA_ENTRY_FORMER fl#r2en_trans i 2 string
		TO_UPPER id
		PATCH_IF "%id%" STRING_MATCHES_REGEXP "^@" = 0 BEGIN
			INNER_PATCH_SAVE string "%string%" BEGIN
				REPLACE_TEXTUALLY "###" " "
				REPLACE_TEXTUALLY ~"~ ~~ //" //This is a stupid hack to get around a deficiency in my editor
				REPLACE_TEXTUALLY "~" ""
			END
			SPRINT $fl#TRANS("%id%") "%string%"
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~read_blacklist_array_from_2da~ BEGIN
	LOCAL_SPRINT fl#r2en_blacklist ""
	LOCAL_SET i = 0
	LOCAL_SPRINT src ""
	LOCAL_SPRINT j ""
	LOCAL_SPRINT trgt ""

	READ_2DA_ENTRIES_NOW fl#r2en_blacklist 3
	FOR (i = 0; i < fl#r2en_blacklist; ++i) BEGIN
		READ_2DA_ENTRY_FORMER fl#r2en_blacklist i 0 src
		READ_2DA_ENTRY_FORMER fl#r2en_blacklist i 1 j
		READ_2DA_ENTRY_FORMER fl#r2en_blacklist i 2 trgt
		TO_LOWER src
		TO_LOWER j
		TO_LOWER trgt
		SET $fl#LINK_BLACKLIST("%src%" "%j%" "%trgt%") = 1
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~apply_link_patches~ BEGIN
	LOCAL_SPRINT r2en_patches ""
	LOCAL_SET result = 0
	LOCAL_SET i = 0
	LOCAL_SET j = 0
	LOCAL_SPRINT source ""
	LOCAL_SPRINT nesw ""
	LOCAL_SPRINT target ""
	LOCAL_SPRINT entry ""
	LOCAL_SET dist = 0
	LOCAL_SET def_entry = 0
	LOCAL_SPRINT enc1 ""
	LOCAL_SPRINT enc2 ""
	LOCAL_SPRINT enc3 ""
	LOCAL_SPRINT enc4 ""
	LOCAL_SPRINT enc5 ""
	LOCAL_SET enc_prob = 0
	LOCAL_SET j = 0
	LOCAL_SPRINT var ""
	LOCAL_SPRINT cmp ""
	LOCAL_SPRINT array ""

	SET $j_array(n) = 0
	SET $j_array(e) = 3
	SET $j_array(s) = 2
	SET $j_array(w) = 1
	READ_2DA_ENTRIES_NOW r2en_patches 13

	//Barf indeed, but I can't think of a better solution atm
	FOR (i = 0; i < r2en_patches; ++i) BEGIN
		READ_2DA_ENTRY_FORMER r2en_patches i 12 id
		PATCH_IF "%id%" STRING_COMPARE_CASE NN BEGIN
			SET $fl#patches("%id%") = 0
		END
	END
	FOR (i = 0; i < r2en_patches; ++i) BEGIN
		READ_2DA_ENTRY_FORMER r2en_patches i 12 id
		PATCH_IF !"%id%" STRING_EQUAL_CASE NN AND $fl#patches("%id%") = 0 BEGIN
			FOR (j = 0; j < r2en_patches; ++j) BEGIN
				READ_2DA_ENTRY_FORMER r2en_patches j 12 id2
				PATCH_IF j > i AND id = id2 BEGIN
					SET $fl#patches("%id%") = 1
					READ_2DA_ENTRY_FORMER r2en_patches j 0 source
					READ_2DA_ENTRY_FORMER r2en_patches j 1 nesw
					READ_2DA_ENTRY_FORMER r2en_patches j 2 target
					READ_2DA_ENTRY_FORMER r2en_patches j 3 entry
					READ_2DA_ENTRY_FORMER r2en_patches j 4 dist
					READ_2DA_ENTRY_FORMER r2en_patches j 5 def_entry
					READ_2DA_ENTRY_FORMER r2en_patches j 6 enc1
					READ_2DA_ENTRY_FORMER r2en_patches j 7 enc2
					READ_2DA_ENTRY_FORMER r2en_patches j 8 enc3
					READ_2DA_ENTRY_FORMER r2en_patches j 9 enc4
					READ_2DA_ENTRY_FORMER r2en_patches j 10 enc5
					READ_2DA_ENTRY_FORMER r2en_patches j 11 enc_prob
					TO_LOWER source
					TO_LOWER nesw
					TO_LOWER target
					PATCH_IF "%source%" STRING_COMPARE_CASE SRC_AREA AND
					"%target%" STRING_COMPARE_CASE TARGET_ARE BEGIN
						j = $j_array("%nesw%")
						PATCH_IF VARIABLE_IS_SET $EVAL "fl#INDEX_%j%"("%source%" "%target%") BEGIN
							SPRINT $fl#ENTRY("%source%" "%j%" "%target%") "%entry%"
							SET $fl#TIME("%source%" "%j%" "%target%") = dist
							SET $fl#DEF("%source%" "%j%" "%target%") = def_entry
							PATCH_FOR_EACH var IN enc1 enc2 enc3 enc4 enc5 BEGIN
								SPRINT cmp EVAL "%%var%%"
								SPRINT array "%var%"
								TO_UPPER array
								PATCH_IF "%cmp%" STRING_COMPARE_CASE N BEGIN
									SPRINT $EVAL "fl#%array%"("%source%" "%j%" "%target%") "%cmp%"
								END
							END
							SET $fl#PROB("%source%" "%j%" "%target%") = enc_prob
						END
					END
					j = r2en_patches
				END
			END
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO ~merge_in_translations~ BEGIN
	LOCAL_SPRINT array ""
	LOCAL_SPRINT area ""
	LOCAL_SPRINT result ""

	//Swap the tra references for the associated string
	ACTION_FOR_EACH array IN fl#NAME fl#TOOL BEGIN
		ACTION_PHP_EACH "%array%" AS area => result BEGIN
			ACTION_IF VARIABLE_IS_SET $fl#TRANS("%result%") BEGIN
				OUTER_SPRINT $EVAL "%array%"("%area%") $fl#TRANS("%result%")
			END
		END
	END

	//If there are tra references for which there was no data provided, null the array value
	ACTION_FOR_EACH array IN fl#NAME fl#TOOL BEGIN
		ACTION_PHP_EACH "%array%" AS area => result BEGIN
			ACTION_IF "%result%" STRING_MATCHES_REGEXP "^@.*" = 0 BEGIN
				OUTER_SPRINT $EVAL "%array%"("%area%") ""
			END
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION ~fix_table~ BEGIN
	REPLACE_TEXTUALLY EVALUATE_REGEXP ~\([0-9]+\)\(SHORT_NAME\)~ ~\1%LNL%%LNL%\2~
	REPLACE_TEXTUALLY EVALUATE_REGEXP ~\([0-9]+\)\(//\)~ ~\1%LNL%%LNL%\2~
	REPLACE_TEXTUALLY EVALUATE_REGEXP ~\([0-9]+\)\(SRC_AREA\)~ ~\1%LNL%%LNL%\2~
	REPLACE_TEXTUALLY EVALUATE_REGEXP ~~~~~\("\|~\|%\)\(@\)~~~~~ ~~~~~\1%LNL%%LNL%\2~~~~~
	REPLACE_TEXTUALLY EVALUATE_REGEXP ~~~~~\("\|~\|%\)\(//\)~~~~~ ~~~~~\1%LNL%%LNL%\2~~~~~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION install_area_table
	STR_VAR
	table = ""
BEGIN
	ACTION_IF "%table%" STR_CMP "" BEGIN
		ACTION_IF FILE_EXISTS "worldmap/map_mods_areas.tbl" BEGIN
			COPY "worldmap/map_mods_areas.tbl" "worldmap/map_mods_areas.tbl"
				APPEND_FILE_EVALUATE ".../fl#inline/newlines"
				APPEND_FILE "%table%"
			BUT_ONLY
		END ELSE BEGIN
			COPY "%table%" "worldmap/map_mods_areas.tbl"
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION install_link_table
	STR_VAR
	table = ""
BEGIN
	ACTION_IF "%table%" STR_CMP "" BEGIN
		ACTION_IF FILE_EXISTS "worldmap/map_mods_links.tbl" BEGIN
			COPY "worldmap/map_mods_links.tbl" "worldmap/map_mods_links.tbl"
				APPEND_FILE_EVALUATE ".../fl#inline/newlines"
				APPEND_FILE "%table%"
			BUT_ONLY
		END ELSE BEGIN
			COPY "%table%" "worldmap/map_mods_links.tbl"
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION install_translation_table
	STR_VAR
	table = ""
BEGIN
	ACTION_IF "%tablel%" STR_CMP "" BEGIN
		ACTION_IF FILE_EXISTS "worldmap/map_mods_trans.tra" BEGIN
			COPY "worldmap/map_mods_trans.tra" "worldmap/map_mods_trans.tra"
				APPEND_FILE_EVALUATE ".../fl#inline/newlines"
				APPEND_FILE "%table%"
			BUT_ONLY
		END ELSE BEGIN
			COPY "%table%" "worldmap/map_mods_trans.tra"
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~EET_PCU_off~ BEGIN
	PATCH_IF ~%res%~ STRING_EQUAL_CASE ~~ BEGIN
		PATCH_WARN ~EET_PCU_off macro: res variable not specified for %SOURCE_FILESPEC% patching~
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~mus~ BEGIN //Songs
		READ_LONG off "dword"
		PATCH_IF ("%dword%" > 0) BEGIN
			FOR (i=1; i<="%dword_mus_total%"; i=i+1) BEGIN
				SPRINT name_source "dword_mus_source%i%"
				SPRINT name_dest "dword_mus_dest%i%"
				SPRINT dword_index_source EVAL ~%%name_source%%~
				SPRINT dword_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%dword%" = "%dword_index_source%") AND (%dword_index_source% != %dword_index_dest%) BEGIN
					SET updated = 1
					WRITE_LONG off "%dword_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: MUSIC = %dword_index_source% => %dword_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" off)
					PATCH_IF (dword_index_source > 0) AND (dword_index_dest = 0) BEGIN
						//PATCH_WARN ~WARNING: %str%~
						PATCH_PRINT ~ATTENTION: %str%~
					END ELSE BEGIN
						PATCH_PRINT ~%str%~
					END
					SET i = dword_mus_total
				END
			END
		END
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~state~ BEGIN //State
		READ_LONG off "dword"
		PATCH_IF ("%dword%" > 0) BEGIN
			FOR (i=1; i<="%dword_state_total%"; i=i+1) BEGIN
				SPRINT name_source "dword_state_source%i%"
				SPRINT name_dest "dword_state_dest%i%"
				SPRINT dword_index_source EVAL ~%%name_source%%~
				SPRINT dword_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%dword%" = "%dword_index_source%") BEGIN
					SET updated = 1
					WRITE_LONG off "%dword_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: STATE = %dword_index_source% => %dword_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" off)
					PATCH_PRINT ~%str%~
					SET i = dword_state_total
				END
			END
		END
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~kit~ BEGIN //Kit internal number (the values of 0x244 offset are written in big endian style)
		READ_BYTE 0x244 ~byte244~
		READ_BYTE 0x245 ~byte245~
		READ_BYTE 0x246 ~byte246~
		READ_BYTE 0x247 ~byte247~
		PATCH_IF (("%byte244%" = 0) AND ("%byte245%" = 0) AND ("%byte246%" > 40) AND ("%byte247%" = 64)) BEGIN
			FOR (i=1; i<="%byte_kit_total%"; i=i+1) BEGIN
				SPRINT name_source "byte_kit_source%i%"
				SPRINT name_dest "byte_kit_dest%i%"
				SPRINT byte_index_source EVAL ~%%name_source%%~
				SPRINT byte_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%byte246%" = "%byte_index_source%") BEGIN
					SET updated = 1
					WRITE_SHORT 0x244 0
					WRITE_BYTE 0x246 ~%byte_index_dest%~
					WRITE_BYTE 0x247 0x40
					PATCH_PRINT ~Patching %SOURCE_FILESPEC%: KIT = %byte_index_source% => %byte_index_dest% - 0x244 (byte 0x246)~
					SET i = byte_kit_total
				END
			END
		END
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~class~ BEGIN //Class
		READ_BYTE off ~byte~
		PATCH_IF ("%byte%" > 0) BEGIN
			FOR (i=1; i<="%byte_class_total%"; i=i+1) BEGIN
				SPRINT name_source "byte_class_source%i%"
				SPRINT name_dest "byte_class_dest%i%"
				SPRINT byte_index_source EVAL ~%%name_source%%~
				SPRINT byte_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%byte%" = "%byte_index_source%") BEGIN
					SET updated = 1
					WRITE_BYTE off ~%byte_index_dest%~
					SPRINT str ~Patching %SOURCE_FILESPEC%: %res% %word_index_source% => %word_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" off)
					PATCH_PRINT ~%str%~
					SET i = byte_class_total
				END
			END
		END
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~ipro~ BEGIN //IDS Projectiles
		READ_SHORT off "word"
		PATCH_IF ("%word%" > 1) BEGIN
			FOR (i=1; i<="%word_ipro_total%"; i=i+1) BEGIN
				SPRINT name_source "word_ipro_source%i%"
				SPRINT name_dest "word_ipro_dest%i%"
				SPRINT word_index_source EVAL ~%%name_source%%~
				SPRINT word_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%word%" = "%word_index_source%") BEGIN
					SET updated = 1
					WRITE_SHORT off "%word_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: IDS PROJECTILE = %word_index_source% => %word_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" off)
					PATCH_PRINT ~%str%~
					SET i = word_ipro_total
				END
			END
		END
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~dv~ BEGIN //DV
		READ_ASCII off "resref" (32) NULL
		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				SET updated = 1
				WRITE_ASCIIE off "%resref_index_dest%" #32
				SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
				SPRINTF str ~%s %x~ ("%str%" off)
				PATCH_PRINT ~%str%~
				SET i = resref_dv_total
			END
		END
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~door~ BEGIN //Door
		SET updated_offset = 0
		READ_ASCII off "resref" (8)
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				SET updated = 1
				WRITE_ASCIIE off "%resref_index_dest%"
				SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
				SPRINTF str ~%s %x~ ("%str%" off)
				PATCH_PRINT ~%str%~
				SET i = resref_door_6start
				SET updated_offset = 1
			END
		END
		PATCH_IF (updated_offset = 0) BEGIN
			READ_ASCII off "resref" (6)
			FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					SET updated = 1
					WRITE_ASCIIE off "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" off)
					PATCH_PRINT ~%str%~
					SET i = resref_door_7start
					SET updated_offset = 1
				END
			END
		END
		PATCH_IF (updated_offset = 0) BEGIN
			READ_ASCII off "resref" (7)
			FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					SET updated = 1
					WRITE_ASCIIE off "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" off)
					PATCH_PRINT ~%str%~
					SET i = resref_door_5start
					SET updated_offset = 1
				END
			END
		END
		PATCH_IF (updated_offset = 0) BEGIN
			READ_ASCII off "resref" (5)
			FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_door_source%i%"
				SPRINT name_dest "resref_door_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					SET updated = 1
					WRITE_ASCIIE off "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" off)
					PATCH_PRINT ~%str%~
					SET i = resref_door_total
					SET updated_offset = 1
				END
			END
		END
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~exit~ BEGIN //Entrance
		SET updated_offset = 0
		READ_ASCII off "resref" (8)
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				SET updated = 1
				WRITE_ASCIIE off "%resref_index_dest%"
				SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
				SPRINTF str ~%s %x~ ("%str%" off)
				PATCH_PRINT ~%str%~
				SET i = resref_exit_6start
				SET updated_offset = 1
			END
		END
		PATCH_IF (updated_offset = 0) BEGIN
			READ_ASCII off "resref" (6)
			FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					SET updated = 1
					WRITE_ASCIIE off "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" off)
					PATCH_PRINT ~%str%~
					SET i = resref_exit_7start
					SET updated_offset = 1
				END
			END
		END
		PATCH_IF (updated_offset = 0) BEGIN
			READ_ASCII off "resref" (7)
			FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					SET updated = 1
					WRITE_ASCIIE off "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" off)
					PATCH_PRINT ~%str%~
					SET i = resref_exit_5start
					SET updated_offset = 1
				END
			END
		END
		PATCH_IF (updated_offset = 0) BEGIN
			READ_ASCII off "resref" (5)
			FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
				SPRINT name_source "resref_exit_source%i%"
				SPRINT name_dest "resref_exit_dest%i%"
				SPRINT resref_index_source EVAL ~%%name_source%%~
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
					SET updated = 1
					WRITE_ASCIIE off "%resref_index_dest%"
					SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
					SPRINTF str ~%s %x~ ("%str%" off)
					PATCH_PRINT ~%str%~
					SET i = resref_exit_total
					SET updated_offset = 1
				END
			END
		END
	END ELSE BEGIN //other
		READ_ASCII off "resref"
		SPRINT resref_total ~resref_%res%_total~
		SPRINT index_total EVAL ~%%resref_total%%~
		FOR (i=1; i<="%index_total%"; i=i+1) BEGIN
			SPRINT name_source ~resref_%res%_source%i%~
			SPRINT name_dest ~resref_%res%_dest%i%~
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			PATCH_IF ("%resref%" STRING_EQUAL_CASE "%resref_index_source%") BEGIN
				SET updated = 1
				WRITE_ASCIIE off "%resref_index_dest%" #8
				SPRINT str ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% -~
				SPRINTF str ~%s %x~ ("%str%" off)
				PATCH_PRINT ~%str%~
				SET i = index_total
			END
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~EET_PCU_match~ BEGIN
	PATCH_IF ~%res%~ STRING_EQUAL_CASE ~~ BEGIN
		PATCH_WARN ~EET_PCU_match macro: res variable not specified for %SOURCE_FILESPEC% patching~
	END ELSE PATCH_IF (~%match%~ STRING_CONTAINS_REGEXP ~deleteMeDummy~) BEGIN //not replaced already
		SPRINT resref_total ~resref_%res%_total~
		SPRINT index_total EVAL ~%%resref_total%%~
		FOR (i=1; i<="%index_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_%res%_source%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			PATCH_IF (~%match%~ STRING_EQUAL_CASE ~%resref_index_source%~) BEGIN
				SET updated = 1
				SPRINT name_dest "resref_%res%_dest%i%"
				SPRINT resref_index_dest EVAL ~%%name_dest%%~
				SPRINT match ~deleteMeDummy%resref_index_dest%~
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %res%~
				SET i = index_total
			END
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~EET_PCU_outer~ BEGIN
	PATCH_IF ~%res%~ STRING_EQUAL_CASE ~ipro~ BEGIN
		SPRINT res_type ~word~
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~mus~ BEGIN
		SPRINT res_type ~dword~
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~state~ BEGIN
		SPRINT res_type ~dword~
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~kit~ BEGIN
		SPRINT res_type ~byte~
	END ELSE PATCH_IF ~%res%~ STRING_EQUAL_CASE ~class~ BEGIN
		SPRINT res_type ~byte~
	END ELSE BEGIN
		SPRINT res_type ~resref~
	END
	PATCH_IF ~%res%~ STRING_EQUAL_CASE ~~ BEGIN
		PATCH_WARN ~EET_PCU_match macro: res variable not specified for %SOURCE_FILESPEC% patching~
	END ELSE BEGIN
		SPRINT total ~%res_type%_%res%_total~
		SPRINT index_total EVAL ~%%total%%~
		FOR (i=1; i<="%index_total%"; i=i+1) BEGIN
			SPRINT name_source "%res_type%_%res%_source%i%"
			SPRINT index_source EVAL ~%%name_source%%~
			PATCH_IF (~%match%~ STRING_EQUAL_CASE ~%index_source%~) BEGIN
				SPRINT name_dest "%res_type%_%res%_dest%i%"
				SPRINT index_dest EVAL ~%%name_dest%%~
				SPRINT match ~%index_dest%~
				PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %index_source% => %index_dest% - %res%~
				SET i = index_total
			END
		END
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~EET_PCU_core~ BEGIN

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//Worldmap TBL patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*areas.*\.tbl$")=0) OR
	(("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*links.*\.tbl$")=0) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching tbl file %patch_name%...~

		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~\([ %TAB%]+\)%resref_index_source%\([ %TAB%]+\)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AREA~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~^%resref_index_source%\([ %TAB%]+\)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - AREA~ END ~deleteMeDummy%resref_index_dest%\1~
		END

		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~\([ %TAB%]+\)%resref_index_source%\([ %TAB%]+\)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ENTRY_NAME~ END ~\1deleteMeDummy%resref_index_dest%\2~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~\([ %TAB%]+\)%resref_index_source%\([0-9A-Za-z][0-9A-Za-z]\)\([ %TAB%]+\)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source%%MATCH2% => %resref_index_dest%%MATCH2% - ENTRY_NAME~ END ~\1deleteMeDummy%resref_index_dest%\2\3~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~\([ %TAB%]+\)%resref_index_source%\([0-9A-Za-z]\)\([ %TAB%]+\)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source%%MATCH2% => %resref_index_dest%%MATCH2% - ENTRY_NAME~ END ~\1deleteMeDummy%resref_index_dest%\2\3~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~\([ %TAB%]+\)%resref_index_source%\([0-9A-Za-z][0-9A-Za-z][0-9A-Za-z]\)\([ %TAB%]+\)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source%%MATCH2% => %resref_index_dest%%MATCH2% - ENTRY_NAME~ END ~\1deleteMeDummy%resref_index_dest%\2\3~
		END

		REPLACE_TEXTUALLY ~deleteMeDummy~ ~~

		SET tbl_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//GAM patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.GAM$")=0) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching gam version 1.1 file %patch_name%...~

		///////////////////////
		//NPCS
		///////////////////////
		READ_LONG 0x30 npcs_off
		READ_LONG 0x34 npcs_cnt
		FOR (cnt=0; cnt<"%npcs_cnt%"; cnt=cnt+1) BEGIN
			//0xc CRE resref
			SET off = ("%npcs_off%"+0x160*cnt+0xc) SPRINT res "cre" LPM EET_PCU_off
			//0x18 ARE resref
			SET off = ("%npcs_off%"+0x160*cnt+0x18) SPRINT res "are" LPM EET_PCU_off
		END

		SET gam_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//ARE patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "AREAV1.0") AND (SOURCE_SIZE > 0x11b) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching area version 1.0 file %patch_name%...~

		//0x8 WED resref
		SET off = 0x8 SPRINT res "are" LPM EET_PCU_off //wed
		//0x18 north ARE resref
		SET off = 0x18 SPRINT res "are" LPM EET_PCU_off
		//0x24 east ARE resref
		SET off = 0x24 SPRINT res "are" LPM EET_PCU_off
		//0x30 south ARE resref
		SET off = 0x30 SPRINT res "are" LPM EET_PCU_off
		//0x3c west ARE resref
		SET off = 0x3c SPRINT res "are" LPM EET_PCU_off
		//0x94 BCS resref
		SET off = 0x94 SPRINT res "are" LPM EET_PCU_off //bcs

		///////////////////////
		//Actors
		///////////////////////
		READ_LONG 0x54 "actors_off"
		READ_SHORT 0x58 "actors_cnt"
		FOR (cnt=0; cnt<"%actors_cnt%"; cnt=cnt+1) BEGIN
			//0x48 area-specific creature DLG resref
			SET off = ("%actors_off%"+0x110*cnt+0x48) SPRINT res "dlg" LPM EET_PCU_off
			//0x50 area-specific creature override BCS resref
			SET off = ("%actors_off%"+0x110*cnt+0x50) SPRINT res "bcs" LPM EET_PCU_off
			//0x58 area-specific creature class BCS resref
			SET off = ("%actors_off%"+0x110*cnt+0x58) SPRINT res "bcs" LPM EET_PCU_off
			//0x60 area-specific creature race BCS resref
			SET off = ("%actors_off%"+0x110*cnt+0x60) SPRINT res "bcs" LPM EET_PCU_off
			//0x68 area-specific creature general BCS resref
			SET off = ("%actors_off%"+0x110*cnt+0x68) SPRINT res "bcs" LPM EET_PCU_off
			//0x70 area-specific creature default BCS resref
			SET off = ("%actors_off%"+0x110*cnt+0x70) SPRINT res "bcs" LPM EET_PCU_off
			//0x78 area-specific creature specific BCS resref
			SET off = ("%actors_off%"+0x110*cnt+0x78) SPRINT res "bcs" LPM EET_PCU_off
			//0x80 CRE resref
			SET off = ("%actors_off%"+0x110*cnt+0x80) SPRINT res "cre" LPM EET_PCU_off
		END

		///////////////////////////////////////
		//Info points, trigger points, and exit
		///////////////////////////////////////
		READ_LONG 0x5c "info_off"
		READ_SHORT 0x5a "info_cnt"
		FOR (cnt=0; cnt<"%info_cnt%"; cnt=cnt+1) BEGIN
			//0x0 trigger name (may contains area numbers for doors)
			SET off = ("%info_off%"+0xc4*cnt) SPRINT res "door" LPM EET_PCU_off
			//0x38 destination ARE resref
			SET off = ("%info_off%"+0xc4*cnt+0x38) SPRINT res "are" LPM EET_PCU_off
			//0x7c region BCS resref
			SET off = ("%info_off%"+0xc4*cnt+0x7c) SPRINT res "bcs" LPM EET_PCU_off
			//0xbc trigger DLG resref for prox triggers
			SET off = ("%info_off%"+0xc4*cnt+0xbc) SPRINT res "dlg" LPM EET_PCU_off
		END

		//////////////
		//Entrances
		//////////////
		READ_LONG 0x68 "entry_off"
		READ_SHORT 0x6c "entry_cnt"
		FOR (cnt=0; cnt<"%entry_cnt%"; cnt=cnt+1) BEGIN
			//0x0 entrance name (contains area numbers)
			SET off = ("%entry_off%"+0x68*cnt) SPRINT res "exit" LPM EET_PCU_off
		END

		//////////////
		//Spawn points
		//////////////
		READ_LONG 0x60 "spawn_off"
		READ_SHORT 0x64 "spawn_cnt"
		FOR (cnt=0; cnt<"%spawn_cnt%"; cnt=cnt+1) BEGIN
			//0x24 spawn CRE resref 1
			//0x2c spawn CRE resref 2
			//0x34 spawn CRE resref 3
			//0x3c spawn CRE resref 4
			//0x44 spawn CRE resref 5
			//0x4c spawn CRE resref 6
			//0x54 spawn CRE resref 7
			//0x5c spawn CRE resref 8
			//0x64 spawn CRE resref 9
			//0x6c spawn CRE resref 10
			FOR (j=0; j<10; j=j+1) BEGIN
				SET off = ("%spawn_off%"+0xc8*cnt+0x24+0x8*j) SPRINT res "cre" LPM EET_PCU_off
			END
		END

		////////////
		//Containers
		////////////
		READ_LONG 0x70 "contain_off"
		READ_SHORT 0x74 "contain_cnt"
		FOR (cnt=0; cnt<"%contain_cnt%"; cnt=cnt+1) BEGIN
			//0x48 trap BCS resref
			SET off = ("%contain_off%"+0xc0*cnt+0x48) SPRINT res "bcs" LPM EET_PCU_off
			//0x58 creature CRE resref
			SET off = ("%contain_off%"+0xc0*cnt+0x58) SPRINT res "cre" LPM EET_PCU_off
			//0x78 key ITM resref
			SET off = ("%contain_off%"+0xc0*cnt+0x78) SPRINT res "itm" LPM EET_PCU_off
		END

		/////////////////
		//Container Items
		/////////////////
		READ_LONG 0x78 "citem_off"
		READ_SHORT 0x76 "citem_cnt"
		FOR (cnt=0; cnt<"%citem_cnt%"; cnt=cnt+1) BEGIN
			//0x0 ITM resref
			SET off = ("%citem_off%"+0x14*cnt) SPRINT res "itm" LPM EET_PCU_off
		END

		//////////
		//Ambients
		//////////
		READ_LONG 0x84 "ambient_off"
		READ_SHORT 0x82 "ambient_cnt"
		FOR (cnt=0; cnt<"%ambient_cnt%"; cnt=cnt+1) BEGIN
			//0x30 ambient WAV resref 1
			//0x38 ambient WAV resref 2
			//0x40 ambient WAV resref 3
			//0x48 ambient WAV resref 4
			//0x50 ambient WAV resref 5
			//0x58 ambient WAV resref 6
			//0x60 ambient WAV resref 7
			//0x68 ambient WAV resref 8
			//0x70 ambient WAV resref 9
			//0x78 ambient WAV resref 10
			FOR (j=0; j<10; j=j+1) BEGIN
				SET off = ("%ambient_off%"+0xd4*cnt+0x30+0x8*j) SPRINT res "wav" LPM EET_PCU_off
			END
		END

		///////
		//Doors
		///////
		READ_LONG 0xa8 "door_off"
		READ_SHORT 0xa4 "door_cnt"
		FOR (cnt=0; cnt<"%door_cnt%"; cnt=cnt+1) BEGIN
			//0x58 door open WAV resref
			SET off = ("%door_off%"+0xc8*cnt+0x58) SPRINT res "wav" LPM EET_PCU_off
			//0x60 door close WAV resref
			SET off = ("%door_off%"+0xc8*cnt+0x60) SPRINT res "wav" LPM EET_PCU_off
			//0x78 key ITM resref
			SET off = ("%door_off%"+0xc8*cnt+0x78) SPRINT res "itm" LPM EET_PCU_off
			//0x80 open BCS resref
			SET off = ("%door_off%"+0xc8*cnt+0x80) SPRINT res "itm" LPM EET_PCU_off
			//0xb8 open DLG resref
			SET off = ("%door_off%"+0xc8*cnt+0xb8) SPRINT res "dlg" LPM EET_PCU_off
		END

		////////////
		//Animations
		////////////
		READ_LONG 0xb0 "anim_off"
		READ_SHORT 0xac "anim_cnt"
		FOR (cnt=0; cnt<"%anim_cnt%"; cnt=cnt+1) BEGIN
			//0x28 BAM resref
			SET off = ("%anim_off%"+0x4c*cnt+0x28) SPRINT res "bam" LPM EET_PCU_off
		END

		///////
		//Songs
		///////
		READ_LONG 0xbc "song_off"
		//0x0 area day song dword
		//0x04 area night song dword
		//0x08 area win song dword
		//0x0c area battle song dword
		//0x10 area lose song dword
		FOR (j=0; j<10; j=j+1) BEGIN
			SET off = ("%song_off%"+0x04*j) SPRINT res "mus" LPM EET_PCU_off
		END

		//0x28 area ambient (day) 1 WAV resref
		//0x30 area ambient (day) 2 WAV resref
		FOR (j=0; j<2; j=j+1) BEGIN
			SET off = ("%song_off%"+0x28+0x8*j) SPRINT res "wav" LPM EET_PCU_off
		END

		//0x3c area ambient (night) 1 WAV resref
		//0x44 area ambient (night) 2 WAV resref
		FOR (j=0; j<2; j=j+1) BEGIN
			SET off = ("%song_off%"+0x3c+0x8*j) SPRINT res "wav" LPM EET_PCU_off
		END

		//////////////////////
		//Rest spawn creatures
		//////////////////////
		READ_LONG 0xc0 "rest_off"
		//0x48 CRE resref 1
		//0x50 CRE resref 2
		//0x58 CRE resref 3
		//0x60 CRE resref 4
		//0x68 CRE resref 5
		//0x70 CRE resref 6
		//0x78 CRE resref 7
		//0x80 CRE resref 8
		//0x88 CRE resref 9
		//0x90 CRE resref 10
		FOR (j=0; j<10; j=j+1) BEGIN
			SET off = ("%rest_off%"+0x48+0x8*j) SPRINT res "cre" LPM EET_PCU_off
		END

		SET are_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//BAF patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.BAF$")=0) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching script source file %patch_name%...~

		LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
		LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
		LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
		LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
		LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
		LAUNCH_PATCH_MACRO ~BAF_DV_replace~
		LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
		LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
		LAUNCH_PATCH_MACRO ~BAF_STO_replace~
		LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
		LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
		LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
		LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
		LAUNCH_PATCH_MACRO ~BAF_door_replace~
		LAUNCH_PATCH_MACRO ~BAF_SPLres_replace~
		LAUNCH_PATCH_MACRO ~BAF_SPLname_replace~

		LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		REPLACE_TEXTUALLY ~deleteMeDummy~ ~~

		SET baf_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//BCS patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "SC
CR
CO") BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching compiled script file %patch_name%...~

		DECOMPILE_AND_PATCH BEGIN
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
			LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
			LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
			LAUNCH_PATCH_MACRO ~BAF_door_replace~
			LAUNCH_PATCH_MACRO ~BAF_SPLres_replace~
			LAUNCH_PATCH_MACRO ~BAF_SPLname_replace~

			LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

			REPLACE_TEXTUALLY ~deleteMeDummy~ ~~
		END

		SET bcs_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//CRE patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "CRE V1.0") /*AND (SOURCE_SIZE > 0x2d3)*/ BEGIN
		//Checks whether a CRE file is well-formed or not, fixes some common bugs, and reports whether the CRE file is still broken or not.
		LPF ~FJ_CRE_VALIDITY~ RET vl=valid END
		PATCH_IF vl BEGIN
			PATCH_PRINT ~%cntcurrent%/%cntrow% Patching creature version 1.0 file %patch_name%...~

			//0x34 small portrait BMP resref
			SET off = 0x34 SPRINT res "bmp" LPM EET_PCU_off

			//0x3c large portrait BMP resref
			SET off = 0x3c SPRINT res "bmp" LPM EET_PCU_off

			//0x244 kit internal number
			SET off = 0x244 SPRINT res "kit" LPM EET_PCU_off

			//0x248 override BCS resref
			SET off = 0x248 SPRINT res "bcs" LPM EET_PCU_off

			//0x250 class BCS resref
			SET off = 0x250 SPRINT res "bcs" LPM EET_PCU_off

			//0x258 race BCS resref
			SET off = 0x258 SPRINT res "bcs" LPM EET_PCU_off

			//0x260 general BCS resref
			SET off = 0x260 SPRINT res "bcs" LPM EET_PCU_off

			//0x268 default BCS resref
			SET off = 0x268 SPRINT res "bcs" LPM EET_PCU_off

			//0x273 Class number
			SET off = 0x273 SPRINT res "class" LPM EET_PCU_off

			//0x280 Death Variable
			SET off = 0x280 SPRINT res "dv" LPM EET_PCU_off

			//0x2cc DLG resref
			SET off = 0x2cc SPRINT res "dlg" LPM EET_PCU_off

			//////////////
			//Known Spells
			//////////////
			READ_LONG 0x2a0 "kspell_off"
			READ_SHORT 0x2a4 "kspell_cnt"
			FOR (cnt=0; cnt<"%kspell_cnt%"; cnt=cnt+1) BEGIN
				//0x0 SPL resref
				SET off = ("%kspell_off%"+0xc*cnt) SPRINT res "spl" LPM EET_PCU_off
			END

			//////////////////
			//Memorised Spells
			//////////////////
			READ_LONG 0x2b0 "mspell_off"
			READ_SHORT 0x2b4 "mspell_cnt"
			FOR (cnt=0; cnt<"%mspell_cnt%"; cnt=cnt+1) BEGIN
				//0x0 SPL resref
				SET off = ("%mspell_off%"+0xc*cnt) SPRINT res "spl" LPM EET_PCU_off
			END

			//////////////
			//Items
			//////////////
			READ_LONG 0x2bc "item_off"
			READ_SHORT 0x2c0 "item_cnt"
			FOR (cnt=0; cnt<"%item_cnt%"; cnt=cnt+1) BEGIN
				//0x0 ITM resref
				SET off = ("%item_off%"+0x14*cnt) SPRINT res "itm" LPM EET_PCU_off
			END

			//////////////
			//Effects
			//////////////
			READ_LONG 0x2c4 "fx_off"
			READ_LONG 0x2c8 "fx_cnt"
			FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN
				READ_LONG ("%fx_off%"+0x108*cnt+0x8) "fx_type"
				SET offset = ("%fx_off%"+0x108*cnt+0x28)
				SET offset2 = ("%fx_off%"+0x108*cnt+0x70)

				PATCH_IF ("%fx_type%" = 215) BEGIN //Play 3D Effect
					SET off = offset SPRINT res "bam" LPM EET_PCU_off
					SET off = offset2 SPRINT res "bam" LPM EET_PCU_off
				END

				PATCH_IF ("%fx_type%" = 127) BEGIN //Monster Summoning
					SET off = offset2 SPRINT res "bam" LPM EET_PCU_off
				END

				PATCH_IF ("%fx_type%" = 107) BEGIN //Change Portrait
					SET off = offset SPRINT res "bmp" LPM EET_PCU_off
					SET off = offset2 SPRINT res "bmp" LPM EET_PCU_off
				END

				PATCH_IF ("%fx_type%" = 82) BEGIN //Set AI Script
					SET off = offset SPRINT res "bcs" LPM EET_PCU_off
					SET off = offset2 SPRINT res "bcs" LPM EET_PCU_off
				END

				PATCH_IF ("%fx_type%" = 67) //Summon Creature
				OR ("%fx_type%" = 135) //Polymorph into Specific
				OR ("%fx_type%" = 151) //Replace Creature
				OR ("%fx_type%" = 168) //Remove Creature
				BEGIN
					SET off = offset SPRINT res "cre" LPM EET_PCU_off
					SET off = offset2 SPRINT res "cre" LPM EET_PCU_off
				END

				PATCH_IF ("%fx_type%" = 111) //Create Item in Magical Weapon Slot
				OR ("%fx_type%" = 112) //Remove Item
				OR ("%fx_type%" = 122) //Create Inventory Item
				OR ("%fx_type%" = 123) //Remove Inventory Item
				OR ("%fx_type%" = 143) //Create Item in Slot
				OR ("%fx_type%" = 180) //Cannot Use Item
				OR ("%fx_type%" = 255) //Create Inventory Item (days)
				BEGIN
					SET off = offset SPRINT res "itm" LPM EET_PCU_off
					SET off = offset2 SPRINT res "itm" LPM EET_PCU_off
				END

				PATCH_IF ("%fx_type%" = 152) BEGIN //Play Movie
					SET off = offset SPRINT res "mve" LPM EET_PCU_off
					SET off = offset2 SPRINT res "mve" LPM EET_PCU_off
				END

				PATCH_IF ("%fx_type%" = 146) //Cast Spell (at Creature)
				OR ("%fx_type%" = 147) //Learn Spell
				OR ("%fx_type%" = 148) //Cast Spell (at Point)
				OR ("%fx_type%" = 171) //Give Innate Ability
				OR ("%fx_type%" = 172) //Remove Spell
				OR ("%fx_type%" = 183) //Apply Effect Itemtype (SPL ResRef?)
				OR ("%fx_type%" = 206) //Protection from Spell
				OR ("%fx_type%" = 207) //Bounce Specified Spell
				OR ("%fx_type%" = 232) //Cast Spell on Condition
				OR ("%fx_type%" = 251) //Change Bard Song Effect
				OR ("%fx_type%" = 252) //Set Trap
				OR ("%fx_type%" = 256) //Spell Sequencer Active (SPL ResRef?)
				OR ("%fx_type%" = 258) //Spell Sequencer Activation
				OR ("%fx_type%" = 313) //High-Level Ability Denotation
				OR ("%fx_type%" = 321) //Effects specified by Resource
				OR ("%fx_type%" = 324) //Immunity to spell and message
				OR ("%fx_type%" = 326) //Apply effects list
				OR ("%fx_type%" = 333) //Static Charge
				OR ("%fx_type%" = 335) //Seven Eyes
				OR ("%fx_type%" = 341) //Change Critical Hit Effect
				BEGIN
					SET off = offset SPRINT res "spl" LPM EET_PCU_off
					SET off = offset2 SPRINT res "spl" LPM EET_PCU_off
				END

				PATCH_IF ("%fx_type%" = 174) BEGIN //Play Sound
					SET off = offset SPRINT res "wav" LPM EET_PCU_off
					SET off = offset2 SPRINT res "wav" LPM EET_PCU_off
				END

				PATCH_IF ("%fx_type%" = 177) //Use EFF File
				OR ("%fx_type%" = 272) //Apply Repeating EFF
				OR ("%fx_type%" = 283) //Use EFF File (Cursed)
				OR ("%fx_type%" = 248) //Set Melee Effect
				OR ("%fx_type%" = 249) //Set Ranged Effect
				BEGIN
					SET off = offset SPRINT res "eff" LPM EET_PCU_off
					SET off = offset2 SPRINT res "eff" LPM EET_PCU_off
				END

				//0x8c source spell SPL resref
				SET off = ("%fx_off%"+0x108*cnt+0x8c) SPRINT res "spl" LPM EET_PCU_off
			END

			SET cre_check += 1
			SET checked = 1
		END ELSE BEGIN
			PATCH_WARN ~FJ_CRE_VALIDITY returned %SOURCE_FILESPEC% as not valid file~
		END
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//D patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.D$")=0) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching dialog source file %patch_name%...~

		LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
		LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
		LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
		LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
		LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
		LAUNCH_PATCH_MACRO ~BAF_DV_replace~
		LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
		LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
		LAUNCH_PATCH_MACRO ~BAF_STO_replace~
		LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
		LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
		LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
		LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
		LAUNCH_PATCH_MACRO ~BAF_door_replace~
		LAUNCH_PATCH_MACRO ~BAF_SPLres_replace~
		LAUNCH_PATCH_MACRO ~BAF_SPLname_replace~
		LAUNCH_PATCH_MACRO ~D_DLG_replace~
		LAUNCH_PATCH_MACRO ~D_DLGext_replace~

		LAUNCH_PATCH_MACRO ~D_traifyDLG_replace~
		LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

		REPLACE_TEXTUALLY ~deleteMeDummy~ ~~

		SET d_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//DLG patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "DLG V1.0") AND (SOURCE_SIZE > 0x33) BEGIN //protects against invalid files
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching dialog version 1.0 file %patch_name%...~

		//////////////
		//Responses
		//////////////
		READ_LONG 0x14 "resp_off"
		READ_SHORT 0x10 "resp_cnt"
		FOR (cnt=0; cnt<"%resp_cnt%"; cnt=cnt+1) BEGIN
			//0x14 next dialogue DLG resref
			SET off = ("%resp_off%"+0x20*cnt+0x14) SPRINT res "dlg" LPM EET_PCU_off
		END

		DECOMPILE_AND_PATCH BEGIN
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			LAUNCH_PATCH_MACRO ~BAF_MVE_replace~
			LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
			LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
			LAUNCH_PATCH_MACRO ~BAF_door_replace~
			LAUNCH_PATCH_MACRO ~BAF_SPLres_replace~
			LAUNCH_PATCH_MACRO ~BAF_SPLname_replace~
			LAUNCH_PATCH_MACRO ~D_DLG_replace~
			LAUNCH_PATCH_MACRO ~D_DLGext_replace~

			LAUNCH_PATCH_MACRO ~D_traifyDLG_replace~
			LAUNCH_PATCH_MACRO ~D_traifyBCS_replace~

			REPLACE_TEXTUALLY ~deleteMeDummy~ ~~
		END

		SET dlg_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//EFF patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "EFF V2.0") BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching effect version 2.0 file %patch_name%...~

		READ_SHORT 0x10 "fx_type"
		SET offset = 0x30
		SET offset2 = 0x78

		PATCH_IF ("%fx_type%" = 142) //Display Special Effect Icon
		OR ("%fx_type%" = 169) BEGIN //Prevent Special Effect Icon
			SET off = 0x20 SPRINT res "state" LPM EET_PCU_off
		END

		PATCH_IF ("%fx_type%" = 215) BEGIN //Play 3D Effect
			SET off = offset SPRINT res "bam" LPM EET_PCU_off
			SET off = offset2 SPRINT res "bam" LPM EET_PCU_off
		END

		PATCH_IF ("%fx_type%" = 127) BEGIN //Monster Summoning
			SET off = offset2 SPRINT res "bam" LPM EET_PCU_off
		END

		PATCH_IF ("%fx_type%" = 107) BEGIN //Change Portrait
			SET off = offset SPRINT res "bmp" LPM EET_PCU_off
			SET off = offset2 SPRINT res "bmp" LPM EET_PCU_off
		END

		PATCH_IF ("%fx_type%" = 82) BEGIN //Set AI Script
			SET off = offset SPRINT res "bcs" LPM EET_PCU_off
			SET off = offset2 SPRINT res "bcs" LPM EET_PCU_off
		END

		PATCH_IF ("%fx_type%" = 67) //Summon Creature
		OR ("%fx_type%" = 135) //Polymorph into Specific
		OR ("%fx_type%" = 151) //Replace Creature
		OR ("%fx_type%" = 168) //Remove Creature
		BEGIN
			SET off = offset SPRINT res "cre" LPM EET_PCU_off
			SET off = offset2 SPRINT res "cre" LPM EET_PCU_off
		END

		PATCH_IF ("%fx_type%" = 111) //Create Item in Magical Weapon Slot
		OR ("%fx_type%" = 112) //Remove Item
		OR ("%fx_type%" = 122) //Create Inventory Item
		OR ("%fx_type%" = 123) //Remove Inventory Item
		OR ("%fx_type%" = 143) //Create Item in Slot
		OR ("%fx_type%" = 180) //Cannot Use Item
		OR ("%fx_type%" = 255) //Create Inventory Item (days)
		BEGIN
			SET off = offset SPRINT res "itm" LPM EET_PCU_off
			SET off = offset2 SPRINT res "itm" LPM EET_PCU_off
		END

		PATCH_IF ("%fx_type%" = 152) BEGIN //Play Movie
			SET off = offset SPRINT res "mve" LPM EET_PCU_off
			SET off = offset2 SPRINT res "mve" LPM EET_PCU_off
		END

		PATCH_IF ("%fx_type%" = 146) //Cast Spell (at Creature)
		OR ("%fx_type%" = 147) //Learn Spell
		OR ("%fx_type%" = 148) //Cast Spell (at Point)
		OR ("%fx_type%" = 171) //Give Innate Ability
		OR ("%fx_type%" = 172) //Remove Spell
		OR ("%fx_type%" = 183) //Apply Effect Itemtype (SPL ResRef?)
		OR ("%fx_type%" = 206) //Protection from Spell
		OR ("%fx_type%" = 207) //Bounce Specified Spell
		OR ("%fx_type%" = 232) //Cast Spell on Condition
		OR ("%fx_type%" = 251) //Change Bard Song Effect
		OR ("%fx_type%" = 252) //Set Trap
		OR ("%fx_type%" = 256) //Spell Sequencer Active (SPL ResRef?)
		OR ("%fx_type%" = 258) //Spell Sequencer Activation
		OR ("%fx_type%" = 313) //High-Level Ability Denotation
		OR ("%fx_type%" = 321) //Effects specified by Resource
		OR ("%fx_type%" = 324) //Immunity to spell and message
		OR ("%fx_type%" = 326) //Apply effects list
		OR ("%fx_type%" = 333) //Static Charge
		OR ("%fx_type%" = 335) //Seven Eyes
		OR ("%fx_type%" = 341) //Change Critical Hit Effect
		BEGIN
			SET off = offset SPRINT res "spl" LPM EET_PCU_off
			SET off = offset2 SPRINT res "spl" LPM EET_PCU_off
		END

		PATCH_IF ("%fx_type%" = 174) BEGIN //Play Sound
			SET off = offset SPRINT res "wav" LPM EET_PCU_off
			SET off = offset2 SPRINT res "wav" LPM EET_PCU_off
		END

		PATCH_IF ("%fx_type%" = 177) //Use EFF File
		OR ("%fx_type%" = 272) //Apply Repeating EFF
		OR ("%fx_type%" = 283) //Use EFF File (Cursed)
		OR ("%fx_type%" = 248) //Set Melee Effect
		OR ("%fx_type%" = 249) //Set Ranged Effect
		BEGIN
			SET off = offset SPRINT res "eff" LPM EET_PCU_off
			SET off = offset2 SPRINT res "eff" LPM EET_PCU_off
		END

		//0x94 source spell SPL resref
		SET off = 0x94 SPRINT res "spl" LPM EET_PCU_off

		SET eff_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//ITM patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "ITM V1  ") AND (SOURCE_SIZE > 0x71) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching item version 1.0 file %patch_name%...~

		//0x10 replacement ITM resref
		SET off = 0x10 SPRINT res "itm" LPM EET_PCU_off

		//0x3a inventory icon BAM resref
		SET off = 0x3a SPRINT res "bam" LPM EET_PCU_off

		//0x44 ground icon BAM resref
		SET off = 0x44 SPRINT res "bam" LPM EET_PCU_off

		//0x58 description icon BAM resref
		SET off = 0x58 SPRINT res "bam" LPM EET_PCU_off

		//////////////
		//Abilities
		//////////////
		READ_LONG 0x64 "abil_off"
		READ_SHORT 0x68 "abil_cnt"
		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			//0x4 memorised icon BAM resref
			SET off = ("%abil_off%"+0x38*cnt+0x4) SPRINT res "bam" LPM EET_PCU_off
			//0x2a Projectile animation (projectl.ids/missile.ids)
			SET off = ("%abil_off%"+0x38*cnt+0x2a) SPRINT res "ipro" LPM EET_PCU_off
		END

		//////////////
		//Effects
		//////////////
		READ_LONG 0x6a "fx_off"
		READ_SHORT 0x70 "fx_cnt"

		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%abil_off%"+0x38*cnt+0x1e) "fx_num"
			SET fx_cnt += fx_num //gauge the total number of effects by summing global effects and the effects of each ability
		END

		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%fx_off%"+0x30*cnt) "fx_type"
			SET offset = ("%fx_off%"+0x30*cnt+0x14)

			PATCH_IF ("%fx_type%" = 142) //Display Special Effect Icon
			OR ("%fx_type%" = 169) BEGIN //Prevent Special Effect Icon
				SET off = ("%fx_off%"+0x30*cnt+0x8) SPRINT res "state" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 215) BEGIN //Play 3D Effect
				SET off = offset SPRINT res "bam" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 107) BEGIN //Change Portrait
				SET off = offset SPRINT res "bmp" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 82) BEGIN //Set AI Script
				SET off = offset SPRINT res "bcs" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 67) //Summon Creature
			OR ("%fx_type%" = 135) //Polymorph into Specific
			OR ("%fx_type%" = 151) //Replace Creature
			OR ("%fx_type%" = 168) //Remove Creature
			BEGIN
				SET off = offset SPRINT res "cre" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 111) //Create Item in Magical Weapon Slot
			OR ("%fx_type%" = 112) //Remove Item
			OR ("%fx_type%" = 122) //Create Inventory Item
			OR ("%fx_type%" = 123) //Remove Inventory Item
			OR ("%fx_type%" = 143) //Create Item in Slot
			OR ("%fx_type%" = 180) //Cannot Use Item
			OR ("%fx_type%" = 255) //Create Inventory Item (days)
			BEGIN
				SET off = offset SPRINT res "itm" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 152) BEGIN //Play Movie
				SET off = offset SPRINT res "mve" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 146) //Cast Spell (at Creature)
			OR ("%fx_type%" = 147) //Learn Spell
			OR ("%fx_type%" = 148) //Cast Spell (at Point)
			OR ("%fx_type%" = 171) //Give Innate Ability
			OR ("%fx_type%" = 172) //Remove Spell
			OR ("%fx_type%" = 183) //Apply Effect Itemtype (SPL ResRef?)
			OR ("%fx_type%" = 206) //Protection from Spell
			OR ("%fx_type%" = 207) //Bounce Specified Spell
			OR ("%fx_type%" = 232) //Cast Spell on Condition
			OR ("%fx_type%" = 251) //Change Bard Song Effect
			OR ("%fx_type%" = 252) //Set Trap
			OR ("%fx_type%" = 256) //Spell Sequencer Active (SPL ResRef?)
			OR ("%fx_type%" = 258) //Spell Sequencer Activation
			OR ("%fx_type%" = 313) //High-Level Ability Denotation
			OR ("%fx_type%" = 321) //Effects specified by Resource
			OR ("%fx_type%" = 324) //Immunity to spell and message
			OR ("%fx_type%" = 326) //Apply effects list
			OR ("%fx_type%" = 333) //Static Charge
			OR ("%fx_type%" = 335) //Seven Eyes
			OR ("%fx_type%" = 341) //Change Critical Hit Effect
			BEGIN
				SET off = offset SPRINT res "spl" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 174) BEGIN //Play Sound
				SET off = offset SPRINT res "wav" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 177) //Use EFF File
			OR ("%fx_type%" = 272) //Apply Repeating EFF
			OR ("%fx_type%" = 283) //Use EFF File (Cursed)
			OR ("%fx_type%" = 248) //Set Melee Effect
			OR ("%fx_type%" = 249) //Set Ranged Effect
			BEGIN
				SET off = offset SPRINT res "eff" LPM EET_PCU_off
			END
		END

		SET itm_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//PRO patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "PRO V1.0") BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching PRO version 1.0 file %patch_name%...~

		//0x10 fire sound WAV resref
		SET off = 0x10 SPRINT res "wav" LPM EET_PCU_off

		//0x18 impact sound WAV resref
		SET off = 0x18 SPRINT res "wav" LPM EET_PCU_off

		//0x20 source animation VVC/BAM resref
		SET off = 0x20 SPRINT res "bam" LPM EET_PCU_off

		//0x44 default spell SPL resref
		SET off = 0x44 SPRINT res "spl" LPM EET_PCU_off

		//0x4c success spell SPL resref
		SET off = 0x4c SPRINT res "spl" LPM EET_PCU_off

		//////////////
		//Projectile info
		//////////////

		//0x104 projectile animation BAM resref
		SET off = 0x104 SPRINT res "bam" LPM EET_PCU_off

		//0x10c shadow animation BAM resref
		SET off = 0x10c SPRINT res "bam" LPM EET_PCU_off

		//0x11c palette BMP resref
		SET off = 0x11c SPRINT res "bmp" LPM EET_PCU_off

		//0x136 traveling animation 1 BAM resref
		SET off = 0x136 SPRINT res "bam" LPM EET_PCU_off

		//0x13e traveling animation 2 BAM resref
		SET off = 0x13e SPRINT res "bam" LPM EET_PCU_off

		//0x146 traveling animation 3 BAM resref
		SET off = 0x146 SPRINT res "bam" LPM EET_PCU_off

		//////////////
		//Area info
		//////////////
		PATCH_IF (~%SOURCE_SIZE%~ >= 768) BEGIN
			//0x208 explosion sound WAV resref
			SET off = 0x208 SPRINT res "wav" LPM EET_PCU_off

			//0x214 secondary projectile PRO resref
			SET off = 0x214 SPRINT res "pro" LPM EET_PCU_off

			//0x21a explosion projectile PRO resref
			SET off = 0x21a SPRINT res "pro" LPM EET_PCU_off

			//0x21c explosion animation VVC/BAM resref
			SET off = 0x21c SPRINT res "bam" LPM EET_PCU_off

			//0x228 speed animation VVC/BAM resref
			SET off = 0x228 SPRINT res "bam" LPM EET_PCU_off

			//0x230 ring animation VVC/BAM resref
			SET off = 0x230 SPRINT res "bam" LPM EET_PCU_off

			//0x238 area sound WAV resref
			SET off = 0x238 SPRINT res "wav" LPM EET_PCU_off
		END

		SET pro_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//SPL patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "SPL V1  ") AND (SOURCE_SIZE > 0x71) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching spell version 1.0 file %patch_name%...~

		//0x10 casting sound WAV resref
		SET off = 0x10 SPRINT res "wav" LPM EET_PCU_off

		//0x3a spellbook icon BAM resref
		SET off = 0x3a SPRINT res "bam" LPM EET_PCU_off

		//////////////
		//Abilities
		//////////////
		READ_LONG 0x64 "abil_off"
		READ_SHORT 0x68 "abil_cnt"
		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			//0x4 memorised icon BAM resref
			SET off = ("%abil_off%"+0x28*cnt+0x4) SPRINT res "bam" LPM EET_PCU_off
			//0x26 Projectile animation (projectl.ids/missile.ids)
			SET off = ("%abil_off%"+0x28*cnt+0x26) SPRINT res "ipro" LPM EET_PCU_off
		END

		//////////////
		//Effects
		//////////////
		READ_LONG 0x6a "fx_off"
		READ_SHORT 0x70 "fx_cnt"

		FOR (cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%abil_off%"+0x28*cnt+0x1e) "fx_num"
			SET fx_cnt += fx_num //gauge the total number of effects by summing global effects and the effects of each ability
		END

		FOR (cnt=0; cnt<"%fx_cnt%"; cnt=cnt+1) BEGIN
			READ_SHORT ("%fx_off%"+0x30*cnt) "fx_type"
			SET offset = ("%fx_off%"+0x30*cnt+0x14)

			PATCH_IF ("%fx_type%" = 142) //Display Special Effect Icon
			OR ("%fx_type%" = 169) BEGIN //Prevent Special Effect Icon
				SET off = ("%fx_off%"+0x30*cnt+0x8) SPRINT res "state" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 215) BEGIN //Play 3D Effect
				SET off = offset SPRINT res "bam" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 107) BEGIN //Change Portrait
				SET off = offset SPRINT res "bmp" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 82) BEGIN //Set AI Script
				SET off = offset SPRINT res "bcs" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 67) //Summon Creature
			OR ("%fx_type%" = 135) //Polymorph into Specific
			OR ("%fx_type%" = 151) //Replace Creature
			OR ("%fx_type%" = 168) //Remove Creature
			BEGIN
				SET off = offset SPRINT res "cre" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 111) //Create Item in Magical Weapon Slot
			OR ("%fx_type%" = 112) //Remove Item
			OR ("%fx_type%" = 122) //Create Inventory Item
			OR ("%fx_type%" = 123) //Remove Inventory Item
			OR ("%fx_type%" = 143) //Create Item in Slot
			OR ("%fx_type%" = 180) //Cannot Use Item
			OR ("%fx_type%" = 255) //Create Inventory Item (days)
			BEGIN
				SET off = offset SPRINT res "itm" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 152) BEGIN //Play Movie
				SET off = offset SPRINT res "mve" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 146) //Cast Spell (at Creature)
			OR ("%fx_type%" = 147) //Learn Spell
			OR ("%fx_type%" = 148) //Cast Spell (at Point)
			OR ("%fx_type%" = 171) //Give Innate Ability
			OR ("%fx_type%" = 172) //Remove Spell
			OR ("%fx_type%" = 183) //Apply Effect Itemtype (SPL ResRef?)
			OR ("%fx_type%" = 206) //Protection from Spell
			OR ("%fx_type%" = 207) //Bounce Specified Spell
			OR ("%fx_type%" = 232) //Cast Spell on Condition
			OR ("%fx_type%" = 251) //Change Bard Song Effect
			OR ("%fx_type%" = 252) //Set Trap
			OR ("%fx_type%" = 256) //Spell Sequencer Active (SPL ResRef?)
			OR ("%fx_type%" = 258) //Spell Sequencer Activation
			OR ("%fx_type%" = 313) //High-Level Ability Denotation
			OR ("%fx_type%" = 321) //Effects specified by Resource
			OR ("%fx_type%" = 324) //Immunity to spell and message
			OR ("%fx_type%" = 326) //Apply effects list
			OR ("%fx_type%" = 333) //Static Charge
			OR ("%fx_type%" = 335) //Seven Eyes
			OR ("%fx_type%" = 341) //Change Critical Hit Effect
			BEGIN
				SET off = offset SPRINT res "spl" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 174) BEGIN //Play Sound
				SET off = offset SPRINT res "wav" LPM EET_PCU_off
			END

			PATCH_IF ("%fx_type%" = 177) //Use EFF File
			OR ("%fx_type%" = 272) //Apply Repeating EFF
			OR ("%fx_type%" = 283) //Use EFF File (Cursed)
			OR ("%fx_type%" = 248) //Set Melee Effect
			OR ("%fx_type%" = 249) //Set Ranged Effect
			BEGIN
				SET off = offset SPRINT res "eff" LPM EET_PCU_off
			END
		END

		SET spl_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//STO patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "STORV1.0") AND (SOURCE_SIZE > 0x9b) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching store version 1.0 file %patch_name%...~

		//0x44 tavern rumours DLG resref
		SET off = 0x44 SPRINT res "dlg" LPM EET_PCU_off

		//0x54 temple rumours DLG resref
		SET off = 0x54 SPRINT res "dlg" LPM EET_PCU_off

		//////////////
		//Items for Sale
		//////////////
		READ_LONG 0x34 "item_off"
		READ_SHORT 0x38 "item_cnt"
		FOR (cnt=0; cnt<"%item_cnt%"; cnt=cnt+1) BEGIN
			//0x0 ITM resref
			SET off = ("%item_off%"+0x1c*cnt) SPRINT res "itm" LPM EET_PCU_off
		END

		//////////////
		//Drinks for Sale
		//////////////
		READ_LONG 0x4c "drink_off"
		READ_SHORT 0x50 "drink_cnt"
		FOR (cnt=0; cnt<"%drink_cnt%"; cnt=cnt+1) BEGIN
			//0x0 special rumour DLG resref
			SET off = ("%drink_off%"+0x14*cnt) SPRINT res "dlg" LPM EET_PCU_off
		END

		//////////////
		//Cures for Sale
		//////////////
		READ_LONG 0x70 "cure_off"
		READ_SHORT 0x74 "cure_cnt"
		FOR (cnt=0; cnt<"%cure_cnt%"; cnt=cnt+1) BEGIN
			//0x0 SPL resref
			SET off = ("%cure_off%"+0xc*cnt) SPRINT res "spl" LPM EET_PCU_off
		END

		SET sto_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//TRA patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TRA$")=0) BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WeiDU translation file %patch_name%...~

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(\[\)%resref_index_source%\(\]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - WAV~ END ~\1%resref_index_dest%\2~
		END

		SET tra_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//TP2/TPH/TPP/TPA patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TP2$")=0) OR (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TPH$")=0) OR (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TPP$")=0) OR (("%SOURCE_FILE%" STRING_COMPARE_REGEXP ".*.\.TPA$")=0) BEGIN

		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WeiDU script file %patch_name%...~

		//area resrefs
		FOR (i=1; i<="%resref_are_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_are_source%i%"
			SPRINT name_dest "resref_are_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ARE_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.ARE\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ARE~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.ARE\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ARE~ END ~deleteMeDummy%resref_index_dest%\1~

			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - ARE~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - ARE~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - ARE~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - ARE~ END ~deleteMeDummy%resref_index_source%~
		END

		//door names
		FOR (i="%resref_door_8start%"; i<"%resref_door_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ "~]\)%resref_index_source%~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, proposed change if this is a door: %resref_index_source% => %resref_index_dest% - door~ END ~~~~~\1deleteMeDummy%resref_index_source%~~~~~
		END

		FOR (i="%resref_door_6start%"; i<"%resref_door_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ "~]\)%resref_index_source%~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, proposed change if this is a door: %resref_index_source% => %resref_index_dest% - door~ END ~~~~~\1deleteMeDummy%resref_index_source%~~~~~
		END

		FOR (i="%resref_door_7start%"; i<"%resref_door_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ "~]\)%resref_index_source%~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, proposed change if this is a door: %resref_index_source% => %resref_index_dest% - door~ END ~~~~~\1deleteMeDummy%resref_index_source%~~~~~
		END

		FOR (i="%resref_door_5start%"; i<="%resref_door_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_door_source%i%"
			SPRINT name_dest "resref_door_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ "~]\)%resref_index_source%~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, proposed change if this is a door: %resref_index_source% => %resref_index_dest% - door~ END ~~~~~\1deleteMeDummy%resref_index_source%~~~~~
		END

		//entrance names
		FOR (i="%resref_exit_8start%"; i<"%resref_exit_6start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ "~]\)%resref_index_source%~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, proposed change if this is an entrance: %resref_index_source% => %resref_index_dest% - entrance~ END ~~~~~\1deleteMeDummy%resref_index_source%~~~~~
		END

		FOR (i="%resref_exit_6start%"; i<"%resref_exit_7start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ "~]\)%resref_index_source%~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, proposed change if this is an entrance: %resref_index_source% => %resref_index_dest% - entrance~ END ~~~~~\1deleteMeDummy%resref_index_source%~~~~~
		END

		FOR (i="%resref_exit_7start%"; i<"%resref_exit_5start%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ "~]\)%resref_index_source%~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, proposed change if this is an entrance: %resref_index_source% => %resref_index_dest% - entrance~ END ~~~~~\1deleteMeDummy%resref_index_source%~~~~~
		END

		FOR (i="%resref_exit_5start%"; i<="%resref_exit_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_exit_source%i%"
			SPRINT name_dest "resref_exit_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ "~]\)%resref_index_source%~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, proposed change if this is an entrance: %resref_index_source% => %resref_index_dest% - entrance~ END ~~~~~\1deleteMeDummy%resref_index_source%~~~~~
		END

		//other resrefs
		FOR (i=1; i<="%resref_2da_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_2da_source%i%"
			SPRINT name_dest "resref_2da_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_2DA_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.2DA\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 2DA~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.2DA\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - 2DA~ END ~deleteMeDummy%resref_index_dest%\1~

			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - 2DA~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - 2DA~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - 2DA~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - 2DA~ END ~deleteMeDummy%resref_index_source%~
		END

		FOR (i=1; i<="%resref_bam_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bam_source%i%"
			SPRINT name_dest "resref_bam_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BAM_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.BAM\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BAM~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.BAM\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BAM~ END ~deleteMeDummy%resref_index_dest%\1~

			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - BAM~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - BAM~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - BAM~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - BAM~ END ~deleteMeDummy%resref_index_source%~
		END

		FOR (i=1; i<="%resref_bcs_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_bcs_source%i%"
			SPRINT name_dest "resref_bcs_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_BCS_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.BCS\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BCS~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.BCS\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BCS~ END ~deleteMeDummy%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.BAF\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BCS~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.BAF\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BCS~ END ~deleteMeDummy%resref_index_dest%\1~

			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - BCS~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - BCS~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - BCS~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - BCS~ END ~deleteMeDummy%resref_index_source%~
		END

		FOR (i=1; i<="%resref_cre_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_cre_source%i%"
			SPRINT name_dest "resref_cre_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_CRE_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.CRE\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CRE~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.CRE\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CRE~ END ~deleteMeDummy%resref_index_dest%\1~

			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - CRE~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - CRE~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - CRE~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - CRE~ END ~deleteMeDummy%resref_index_source%~
		END

		FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dlg_source%i%"
			SPRINT name_dest "resref_dlg_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DLG_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.DLG\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DLG~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.DLG\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DLG~ END ~deleteMeDummy%resref_index_dest%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.D\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DLG~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.D\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - DLG~ END ~deleteMeDummy%resref_index_dest%\1~

			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - DLG~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - DLG~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - DLG~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - DLG~ END ~deleteMeDummy%resref_index_source%~
		END

		FOR (i=1; i<="%resref_dv_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_dv_source%i%"
			SPRINT name_dest "resref_dv_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_DV_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - DV~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - DV~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - DV~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - DV~ END ~deleteMeDummy%resref_index_source%~
		END

		FOR (i=1; i<="%resref_itm_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_itm_source%i%"
			SPRINT name_dest "resref_itm_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_ITM_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.ITM\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ITM~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.ITM\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ITM~ END ~deleteMeDummy%resref_index_dest%\1~

			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - ITM~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - ITM~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - ITM~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - ITM~ END ~deleteMeDummy%resref_index_source%~
		END

		FOR (i=1; i<="%resref_spl_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_spl_source%i%"
			SPRINT name_dest "resref_spl_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_SPL_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.SPL\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SPL~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.SPL\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SPL~ END ~deleteMeDummy%resref_index_dest%\1~

			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - SPL~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - SPL~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - SPL~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - SPL~ END ~deleteMeDummy%resref_index_source%~
		END

		FOR (i=1; i<="%resref_sto_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_sto_source%i%"
			SPRINT name_dest "resref_sto_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_STO_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.STO\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - STO~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.STO\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - STO~ END ~deleteMeDummy%resref_index_dest%\1~

			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - STO~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - STO~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - STO~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - STO~ END ~deleteMeDummy%resref_index_source%~
		END

		FOR (i=1; i<="%resref_var_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_var_source%i%"
			SPRINT name_dest "resref_var_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_VAR_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - VAR~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - VAR~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - VAR~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - VAR~ END ~deleteMeDummy%resref_index_source%~
		END

		FOR (i=1; i<="%resref_wav_total%"; i=i+1) BEGIN
			SPRINT name_source "resref_wav_source%i%"
			SPRINT name_dest "resref_wav_dest%i%"
			SPRINT resref_index_source EVAL ~%%name_source%%~
			SPRINT resref_index_dest EVAL ~%%name_dest%%~
			LAUNCH_PATCH_MACRO ~BAF_WAV_replace~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\(\.WAV\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - WAV~ END ~\1deleteMeDummy%resref_index_dest%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\(\.WAV\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - WAV~ END ~deleteMeDummy%resref_index_dest%\1~

			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - WAV~ END ~\1deleteMeDummy%resref_index_source%\2~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\([ %TAB%~"/\\]+\)%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - WAV~ END ~\1deleteMeDummy%resref_index_source%~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%\([ %TAB%~"]+\)~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - WAV~ END ~deleteMeDummy%resref_index_source%\1~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^%resref_index_source%$~~~~~ BEGIN PATCH_PRINT ~Analyzing %SOURCE_FILESPEC%, no extension, proposed change: %resref_index_source% => %resref_index_dest% - WAV~ END ~deleteMeDummy%resref_index_source%~
		END
//"
		REPLACE_TEXTUALLY ~deleteMeDummy~ ~~

		SET tp2_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//VEF patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "VEF V1.0") BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching VEF version 1.0 file %patch_name%...~

		//////////
		//Components
		//////////
		READ_LONG 0x8 "components1_off"
		READ_LONG 0xc "components1_num"
		READ_LONG 0x14 "components2_num"
		FOR (cnt=0; cnt<("%components1_num%"+"%components2_num%"); cnt=cnt+1) BEGIN
			READ_LONG ("%components1_off%"+0xe0*cnt+0xc) "Resource_Type"
			//0x10 resource name WAV/VEF/VVC/BAM resref
			SET offset = ("%components1_off%"+0xe0*cnt+0x10)
			PATCH_IF (Resource_Type = 0) BEGIN //WAV
				SET off = offset SPRINT res "wav" LPM EET_PCU_off
			END ELSE PATCH_IF (Resource_Type = 1) BEGIN //VVC / BAM
				SET off = offset SPRINT res "bam" LPM EET_PCU_off
			END ELSE PATCH_IF (Resource_Type = 2) BEGIN //VEF / VVC / BAM
				SET off = offset SPRINT res "vef" LPM EET_PCU_off
				SET off = offset SPRINT res "bam" LPM EET_PCU_off
			END
		END

		SET vef_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//VVC patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "VVC V1.0") BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching VVC version 1.0 file %patch_name%...~

		//0x8 animation BAM resref
		SET off = 0x8 SPRINT res "bam" LPM EET_PCU_off

		//0x78 starting sound WAV resref
		SET off = 0x78 SPRINT res "wav" LPM EET_PCU_off

		//0x80 duration sound WAV resref
		SET off = 0x80 SPRINT res "wav" LPM EET_PCU_off

		//0x94 ending sound WAV resref(?)
		SET off = 0x94 SPRINT res "wav" LPM EET_PCU_off

		SET vvc_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//WED patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "WED V1.3") BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching WED version 1.3 file %patch_name%...~

		//////////
		//Overlays
		//////////
		READ_LONG 0x8 "overlays_num"
		READ_LONG 0x10 "overlays_off"
		FOR (cnt=0; cnt<"%overlays_num%"; cnt=cnt+1) BEGIN
			//0x4 tileset TIS resref
			SET off = ("%overlays_off%"+0xa*cnt+0x4) SPRINT res "tis" LPM EET_PCU_off
		END

		SET wed_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//WMP patching
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "WMAPV1.0") BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% Patching worldmap version 1.0 file %patch_name%...~

		// possibility of more than one world map?
		//READ_LONG 0x8 "mapentry_num"
		READ_LONG 0xc "mapentry_off"

		//0x0 map resource MOS resref
		SET off = ("%mapentry_off%") SPRINT res "mos" LPM EET_PCU_off

		//0x30 map icons BAM resref
		SET off = ("%mapentry_off%"+0x30) SPRINT res "bam" LPM EET_PCU_off

		////////////////////////
		//Map entry area entries
		////////////////////////
		READ_LONG ("%mapentry_off%"+0x20) "areaentry_num"
		READ_LONG ("%mapentry_off%"+0x24) "areaentry_off"
		FOR (cnt=0; cnt<"%areaentry_num%"; cnt=cnt+1) BEGIN
			//0x0 area short name (contains area numbers)
			SET off = ("%areaentry_off%"+0xf0*cnt) SPRINT res "are" LPM EET_PCU_off

			//0x8 area content ARE resref
			SET off = ("%areaentry_off%"+0xf0*cnt+0x8) SPRINT res "are" LPM EET_PCU_off

			//0x10 area long name (contains area numbers)
			SET off = ("%areaentry_off%"+0xf0*cnt+0x10) SPRINT res "are" LPM EET_PCU_off

			//0x48 loading screen MOS resref
			SET off = ("%areaentry_off%"+0xf0*cnt+0x48) SPRINT res "mos" LPM EET_PCU_off
		END

		//////////////////////
		//Map entry area links
		//////////////////////
		READ_LONG ("%mapentry_off%"+0x28) "arealink_off"
		READ_LONG ("%mapentry_off%"+0x2c) "arealink_num"
		FOR (cnt=0; cnt<"%arealink_num%"; cnt=cnt+1) BEGIN
			//0x4 entrance name (contains area numbers)
			SET off = ("%arealink_off%"+0xd8*cnt+0x4) SPRINT res "exit" LPM EET_PCU_off

			//0x2c random encounter ARE resref 1
			//0x34 random encounter ARE resref 2
			//0x3c random encounter ARE resref 3
			//0x44 random encounter ARE resref 4
			//0x4c random encounter ARE resref 5
			FOR (j=0; j<5; j=j+1) BEGIN
				SET off = ("%arealink_off%"+0xd8*cnt+0x2c+0x8*j) SPRINT res "are" LPM EET_PCU_off
			END

		END

		SET wmp_check += 1
		SET checked = 1
	END

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	//0-byte files
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	PATCH_IF ("%filetype%" STRING_EQUAL_CASE "Ignoring 0 byte file") BEGIN
		PATCH_PRINT ~%cntcurrent%/%cntrow% %filetype% %patch_name%...~

		SET ignore_check += 1
		SET checked = 1
	END

END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_ARE_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Global("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalGT("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalLT("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalTimerExact("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalTimerExpired("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalTimerNotExpired("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AreaCheck("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AreaCheckObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~

	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetGlobal("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveArea("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IncrementGlobal("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetGlobalTimer("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddexperiencePartyGlobal("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RevealAreaOnMap("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetMasterArea("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobal("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveBetweenAreas("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaMove("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SaveLocation("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SaveObjectLocation("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HideAreaOnMap("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CopyGroundPilesTo("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RealSetGlobalTimer("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaObjectMove("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToSavedLocationn("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToSavedLocation("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DeathMatchPositionGlobal("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DeathMatchPositionArea("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DeathMatchPositionLocal("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalsTo("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalsTo("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetTokenGlobal("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetEncounterProbability("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetEncounterProbability("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAEntry("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAPanicEntry("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureAtLocation("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateItemGlobal("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUA("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAPanic("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveBetweenAreasEffect("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~are~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BAM_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateVisualEffect("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~bam~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateVisualEffectObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~bam~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectEffect("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~bam~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopyEffect("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~bam~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUA("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~bam~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LeaveAreaLUAPanic("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~bam~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveBetweenAreasEffect("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~bam~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BCS_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAIScript("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~bcs~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartCutscene("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~bcs~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_BMP_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StaticPalette("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~bmp~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_CRE_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreature("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAnimation("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAnimationNoEffect("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureImpassable("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureDoor("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectDoor("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectOffScreen("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureOffScreen("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopy("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectOffset("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureCopyPoint("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureImpassableAllowOverlap("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureAtLocation("[^"]+","[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectEffect("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopyEffect("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~cre~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_DV_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ActionOverride("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Attack("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(BackStab("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Dialogue("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Dialog("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GetItem("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItem("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveOrder("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LayHands("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickPockets("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RunAwayFrom("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Spell("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItem("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItemSlot("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Formation("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveViewObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ClickLButtonObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ClickRButtonObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DoubleClickLButtonObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DoubleClickRButtonObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SendTrigger("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CallLightning("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ProtectObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GroupAttack("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackNoSound("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleSet("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleInc("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleDec("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackOneRound("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpell("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Deactivate("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Activate("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CutSceneId("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Kill("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(VerbalConstant("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ClearActions("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackReevaluate("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialog("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogue("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PlayerDialog("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PlayerDialogue("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItemCreate("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartStore("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayString("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAIType("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeEnemyAlly("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeGeneral("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeRace("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeClass("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeSpecifics("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeGender("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ChangeAlignment("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplySpell("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Interact("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObjectFollow("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpell("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(RunAwayFromNoInterrupt("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellNoDec("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobal("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueNoSet("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoSet("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObjectNoInterrupt("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FollowObjectFormation("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FaceObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObjectOffScreen("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObjectOffScreen("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellDead("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Calm("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SaveObjectLocation("[^"]+","[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetTokenObject("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetGabber("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopy("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectOffset("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddXPObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringNoName("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DialogueForceInterrupt("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DialogForceInterrupt("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogInterrupt("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueInterrupt("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueNoSetInterrupt("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoSetInterrupt("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringHead("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PolymorphCopy("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(VerbalConstantHead("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateVisualEffectObject("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectEffect("[^"]+","[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureObjectCopyEffect("[^"]+","[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EscapeAreaObjectMove("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakeItemReplace("[^"]+","[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PolymorphCopyBase("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveGlobalObject("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverride("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverrideInterrupt("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateCreatureCopyPoint("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplyDamage("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplyDamagePercent("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringWait("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRange("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetPlayerSound("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FakeEffectExpiryCheck("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoName("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellRES("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRES("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ApplySpellRES("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellRES("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellNoDecRES("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellDeadRES("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRangeRES("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringHeadDead("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringNoNameHead("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~

	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AttackedBy("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Help("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Joins("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Leaves("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReceivedOrder("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Said("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TurnedBy("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Alignment("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Allegiance("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Class("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Exists("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(General("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HP("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LOS("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Morale("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoraleLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Race("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Range("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Reputation("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReputationGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReputationLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(See("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Specifics("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HitBy("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TargetUnreachable("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreature("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPPercent("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPPercentLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HPPercentGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Heard("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StateCheck("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NotStateCheck("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Reaction("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReactionGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReactionLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InParty("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CheckStat("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CheckStatGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CheckStatLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Died("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Killed("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Entered("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Gender("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Dead("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Opened("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Closed("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Detected("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Reset("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Disarmed("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Unlocked("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumTimesInteracted("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumTimesInteractedGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumTimesInteractedLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickPocketFailed("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StealFailed("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisarmFailed("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickLockFailed("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItem("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InteractingWith("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InWeaponRange("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasWeaponEquiped("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Happiness("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HappinessGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HappinessLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Clicked("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumDead("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumDeadGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumDeadLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Detect("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItems("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsGT("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsLT("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsOverMe("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquiped("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureVsParty("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureVsPartyLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumCreatureVsPartyGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PartyMemberDied("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InPartySlot("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCast("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InLine("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InLine("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Level("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LevelGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LevelLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Summoned("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ObjectActionListEmpty("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(OnScreen("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InActiveArea("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastOnMe("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Name("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Name("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastPriest("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastInnate("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsValidForPartyDialog("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IfValidForPartyDialog("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsValidForPartyDialogue("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IfValidForPartyDialogue("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasBounceEffects("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasImmunityEffects("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemSlot("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PersonalSpaceDistance("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InMyGroup("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Kit("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsGabber("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IsActive("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CharName("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CharName("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FallenRanger("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FallenPaladin("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InventoryFull("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquipedReal("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(XP("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(XPGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(XPLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InMyArea("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InPartyAllowDead("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AreaCheckObject("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(WalkedToTrigger("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dv~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_DLG_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialog("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dlg~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogue("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dlg~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetDialog("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dlg~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SetDialogue("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dlg~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogInterrupt("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dlg~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogueInterrupt("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dlg~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverride("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dlg~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogOverrideInterrupt("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dlg~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartDialogNoName("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~dlg~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_ITM_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Acquired("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Unusable("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PartyHasItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Contains("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItems("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsParty("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsPartyGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(NumItemsPartyLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquiped("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PartyHasItemIdentified("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(HasItemEquipedReal("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~

	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DropItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(EquipItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GetItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItemSlot("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(UseItemPoint("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GiveItemCreate("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DestroyItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItemAll("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItemRange("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakePartyItemNum("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PickUpItem("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakeItemReplace("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TakeItemReplace("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DisplayStringHeadOwner("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CreateItemGlobal("[^"]+","[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~itm~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_SPL_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]*SpellRES("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~ //HaveSpellRES, RemoveSpellRES, SpellRES, ForceSpellRES, ApplySpellRES, ReallyForceSpellRES
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastRES("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastOnMeRES("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastPriestRES("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SpellCastInnateRES("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]*SpellPointRES("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~ //SpellPointRES, ForceSpellPointRES, ReallyForceSpellPointRES
	REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]+NoDecRES("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~ //SpellNoDecRES, SpellPointNoDecRES
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ReallyForceSpellDeadRES("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddSpecialAbility("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellRangeRES("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ForceSpellPointRangeRES("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~spl~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_STO_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartStore("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~sto~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_WAV_replace~ BEGIN
	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PlaySound("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~wav~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_MVE_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StartMovie("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~mve~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_2DA_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IncrementChapter("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~2da~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TextScreen("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~2da~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_VAR_replace~ BEGIN
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Global("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~//also catches SetGlobal and SetTokenGlobal
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalGT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalLT("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalsEqual(.*"\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalsGT(.*"\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(GlobalsLT(.*"\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LocalsEqual(.*"\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LocalsGT(.*"\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(LocalsLT(.*"\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(IncrementGlobal("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AddGlobals(.*"\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(SG("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~var~ LPM EET_PCU_match END ~\1%match%\3~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_door_replace~ BEGIN
	//TRIGGER.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(See("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(TargetUnreachable("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(StateCheck("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Detect("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(OpenState("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(ObjectActionListEmpty("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(OnScreen("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InActiveArea("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(PersonalSpaceDistance("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(InMyArea("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(AreaCheckObject("[^"]+","\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~

	//ACTION.IDS
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveViewObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(OpenDoor("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(CloseDoor("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(BashDoor("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObjectFollow("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Lock("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(Unlock("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(DetectSecretDoor("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(MoveToObjectNoInterrupt("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(FaceObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	REPLACE_EVALUATE CASE_INSENSITIVE ~\(JumpToObject("\)\([^"]+\)\("\)~ BEGIN SPRINT match ~%MATCH2%~ SPRINT res ~door~ LPM EET_PCU_match END ~\1%match%\3~
	//CreateCreatureObject(S:ResRef*,O:Object
	//CreateCreatureObjectDoor(S:ResRef*,O:Object*,I:Usage1*,I:Usage2*,I:Usage3*)
	//MoveGlobalObject(O:Object*,O:Target*)
	//AttachTransitionToDoor(S:GLOBAL*,O:Object*)
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_SPLres_replace~ BEGIN
	FOR (i=1; i<="%resref_splRes_total%"; i=i+1) BEGIN
		SPRINT name_source "resref_splRes_source%i%"
		SPRINT name_dest "resref_splRes_dest%i%"
		SPRINT resref_index_source EVAL ~%%name_source%%~
		SPRINT resref_index_dest EVAL ~%%name_dest%%~

		REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]+Spell\)(%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1% -> %MATCH1%RES~ END ~\1RES("%resref_index_dest%")~ //HaveSpell, RemoveSpell
		REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCast(\([^,]+\),%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCast -> SpellCastRES~ END ~SpellCastRES("%resref_index_dest%",\1)~
		REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCastOnMe(\([^,]+\),%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastOnMe -> SpellCastOnMeRES~ END ~SpellCastOnMeRES("%resref_index_dest%",\1)~
		REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCastPriest(\([^,]+\),%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastPriest -> SpellCastPriestRES~ END ~SpellCastPriestRES("%resref_index_dest%",\1)~
		REPLACE_EVALUATE CASE_INSENSITIVE ~SpellCastInnate(\([^,]+\),%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SpellCastInnate -> SpellCastInnateRES~ END ~SpellCastInnateRES("%resref_index_dest%",\1)~
		REPLACE_EVALUATE CASE_INSENSITIVE ~HaveSpellParty(%resref_index_source%)~ BEGIN PATCH_WARN ~Can't replace %resref_index_source% => %resref_index_dest%. There is no HaveSpellParty equivalent trigger that accepts RES reference. %SOURCE_FILESPEC% needs manual changes with HaveSpellRES and NextTriggerObject.~ END ~HaveSpellParty("%resref_index_source%")~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]*Spell\)(\([^,]+\),%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1% -> %MATCH1%RES~ END ~\1RES("%resref_index_dest%",\2)~ //Spell, ForceSpell, ApplySpell, ReallyForceSpell
		REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]*SpellPoint\)(\([^,]+\),%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1% -> %MATCH1%RES~ END ~\1RES("%resref_index_dest%",\2)~ //SpellPoint, ForceSpellPoint, ReallyForceSpellPoint
		REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]+NoDec\)(\([^,]+\),%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1% -> %MATCH1%RES~ END ~\1RES("%resref_index_dest%",\2)~ //SpellNoDec, SpellPointNoDec
		REPLACE_EVALUATE CASE_INSENSITIVE ~ReallyForceSpellDead(\([^,]+\),%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ReallyForceSpellDead -> ReallyForceSpellDeadRES~ END ~ReallyForceSpellDeadRES("%resref_index_dest%",\1)~
		REPLACE_EVALUATE CASE_INSENSITIVE ~ForceSpellRange(\([^,]+\),%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ForceSpellRange -> ForceSpellRangeRES~ END ~ForceSpellRangeRES("%resref_index_dest%",\1)~
		REPLACE_EVALUATE CASE_INSENSITIVE ~ForceSpellPointRange(\([^,]+\),%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ForceSpellPointRange -> ForceSpellPointRangeRES~ END ~ForceSpellPointRangeRES("%resref_index_dest%",\1)~
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~BAF_SPLname_replace~ BEGIN
	FOR (i=1; i<="%resref_splName_total%"; i=i+1) BEGIN
		SPRINT name_source "resref_splName_source%i%"
		SPRINT name_dest "resref_splName_dest%i%"
		SPRINT resref_index_source EVAL ~%%name_source%%~
		SPRINT resref_index_dest EVAL ~%%name_dest%%~

		REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]+Spell[A-Za-z]*\)(%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1%~ END ~\1(%resref_index_dest%)~ //HaveSpell, RemoveSpell, HaveSpellParty
		REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]*Spell[A-Za-z]*([^,]+,\)%resref_index_source%)~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - %MATCH1%~ END ~\1%resref_index_dest%)~ //SpellCast, SpellCastOnMe, SpellCastPriest, SpellCastInnate, Spell, ForceSpell, ApplySpell, ReallyForceSpell, SpellPoint, ForceSpellPoint, ReallyForceSpellPoint, SpellNoDec, SpellPointNoDec, ReallyForceSpellDead, ForceSpellRange, ForceSpellPointRange
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_DLG_replace~ BEGIN
	FOR (i=1; i<="%resref_dlg_total%"; i=i+1) BEGIN
		SPRINT name_source "resref_dlg_source%i%"
		SPRINT name_dest "resref_dlg_dest%i%"
		SPRINT resref_index_source EVAL ~%%name_source%%~
		SPRINT resref_index_dest EVAL ~%%name_dest%%~

		//ResRefs bounded by ~ or "
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(BEGIN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BEGIN~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPEND~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND_EARLY[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPEND_EARLY~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_TOP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTEND_TOP~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_BOTTOM[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTEND_BOTTOM~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_STATE_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_STATE_TRIGGER~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_TRANS_TRIGGER~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_ACTION[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_TRANS_ACTION~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRANS_ACTION[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRANS_ACTION~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRANS_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRANS_TRIGGER~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ALTER_TRANS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ALTER_TRANS~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(SET_WEIGHT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SET_WEIGHT~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_SAY[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_SAY~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_STATE_TRIGGER[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_STATE_TRIGGER~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRIGGER_TEXT~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRIGGER_TEXT_REGEXP~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_REGEXP~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_PROCESS~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS_REGEXP[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_PROCESS_REGEXP~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(R_A_T_P_R[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - R_A_T_P_R~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS2~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS3[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS3~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS4[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS4~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T2~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T3[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T3~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T4[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T4~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(END[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - END~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTERN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTERN~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(COPY_TRANS[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - COPY_TRANS~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPENDI[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPENDI~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(==[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ==~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CHAIN~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(THEN[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - THEN~ END ~\1%resref_index_dest%\2~
		/* THEN correction is used for the beginning CHAIN */
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN2[ ]+[~"]+\)%resref_index_source%\([~"]+\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CHAIN~ END ~\1%resref_index_dest%\2~
		/* exitFilename for CHAIN2 cannot be corrected using this method */

		//ResRefs bounded by nothing
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(BEGIN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - BEGIN~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPEND~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPEND_EARLY[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPEND_EARLY~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_TOP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTEND_TOP~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTEND_BOTTOM[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTEND_BOTTOM~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_STATE_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_STATE_TRIGGER~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_TRANS_TRIGGER~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ADD_TRANS_ACTION[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ADD_TRANS_ACTION~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRANS_ACTION[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRANS_ACTION~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRANS_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRANS_TRIGGER~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(ALTER_TRANS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ALTER_TRANS~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(SET_WEIGHT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - SET_WEIGHT~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_SAY[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_SAY~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_STATE_TRIGGER[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_STATE_TRIGGER~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRIGGER_TEXT~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_TRIGGER_TEXT_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_TRIGGER_TEXT_REGEXP~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_REGEXP~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_PROCESS~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(REPLACE_ACTION_TEXT_PROCESS_REGEXP[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - REPLACE_ACTION_TEXT_PROCESS_REGEXP~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(R_A_T_P_R[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - R_A_T_P_R~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS2~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS3[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS3~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(INTERJECT_COPY_TRANS4[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - INTERJECT_COPY_TRANS4~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T2~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T3[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T3~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(I_C_T4[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - I_C_T4~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(END[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - END~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(EXTERN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - EXTERN~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(COPY_TRANS[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - COPY_TRANS~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(APPENDI[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - APPENDI~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(==[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - ==~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CHAIN~ END ~\1%resref_index_dest%\2~
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(THEN[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - THEN~ END ~\1%resref_index_dest%\2~
		/* THEN correction is used for the beginning CHAIN */
		REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~\(CHAIN2[ ]+\)%resref_index_source%\([ ]*[^!A-Za-z0-9~"]\)~~~~~ BEGIN SET updated = 1 PATCH_PRINT ~Patching %SOURCE_FILESPEC%: %resref_index_source% => %resref_index_dest% - CHAIN~ END ~\1%resref_index_dest%\2~
		/* exitFilename for CHAIN2 cannot be corrected using this method */
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_traifyDLG_replace~ BEGIN
	REPLACE_TEXTUALLY EXACT_MATCH ~SAY #~ ~SAY @~
	REPLACE_TEXTUALLY EXACT_MATCH ~REPLY #~ ~REPLY @~
	REPLACE_TEXTUALLY EXACT_MATCH ~JOURNAL #~ ~JOURNAL @~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_traifyBCS_replace~ BEGIN
	REPLACE_TEXTUALLY ~SetQuestDone(~ ~SetQuestDone(@~
	REPLACE_TEXTUALLY ~AddJournalEntry(~ ~AddJournalEntry(@~
	REPLACE_TEXTUALLY ~EraseJournalEntry(~ ~EraseJournalEntry(@~
	REPLACE_TEXTUALLY ~SetName(~ ~SetName(@~
	REPLACE_TEXTUALLY ~DisplayStringPoint(~ ~DisplayStringPoint(@~
	REPLACE_TEXTUALLY ~\(DisplayString(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(SetToken(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringNoName(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHeadOwner(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringWait(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(SetPlayerSound([^,]*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(RemoveMapNote(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringHeadDead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~\(DisplayStringNoNameHead(.*\),~ ~\1,@~
	REPLACE_TEXTUALLY ~@-1~ ~-1~
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO ~D_DLGext_replace~ BEGIN
	FOR (i=1; i<="%resref_dlgext_total%"; i=i+1) BEGIN
		SPRINT name_source "resref_dlgext_source%i%"
		SPRINT resref_index_source EVAL ~%%name_source%%~
		REPLACE_TEXTUALLY ~~~~~\(EXTERN[ ]+[~"]+\)%resref_index_source%\([~"]+[ ]\)~~~~~ ~\1%resref_index_source%\2s~ //~
	END
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////
//END Macros
/////////////////////////////////////////////////////////////////////////////////////////////////////////
