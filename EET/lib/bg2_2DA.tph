/////                                                  \\\\\
///// KITLIST.2DA                                      \\\\\
/////                                                  \\\\\

COPY_EXISTING ~KITLIST.2DA~ ~override~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 3 "cntrow"
	READ_2DA_ENTRY (cntrow - 1) 0 3 "kit_index"
	PATCH_PRINT ~kit_index = %kit_index%~
BUT_ONLY

COPY - ~EET/temp/array/KITLIST.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 3 "cntrow2"
	FOR (cnt = 1; cnt < "%cntrow2%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 3 "kit_num"
		READ_2DA_ENTRY cnt 1 3 "name"
		PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~KITLIST.2DA~ ~^[0-9]+[ ]+%name%[ ]~)) BEGIN
			REPLACE_EVALUATE CASE_INSENSITIVE ~^[0-9]+[ ]+%name%[ ]+\([0-9\*\-]+\)[ ]+\([0-9\*\-]+\)[ ]+\([0-9\*\-]+\)[ ]+\(.+\)[ ]+[A-Za-z0-9]+$~ BEGIN
				PATCH_PRINT ~Patching KITLIST.2DA: %name%~
				SET kit_index = kit_index + 1
				PATCH_IF (NOT IS_AN_INT ~%MATCH1%~) BEGIN
					SPRINT strref1 ~*~
				END ELSE PATCH_IF (%MATCH1% >= 0) AND (%MATCH1% <= StrRef_cutoff) BEGIN
					SET strref1 = RESOLVE_STR_REF ((AT MATCH1))
				END ELSE BEGIN
					PATCH_IF (%MATCH1% != ~-1~) BEGIN
						PATCH_WARN ~WARNING: %MATCH1% string out of TLK range~
					END
					SPRINT strref1 ~-1~
				END
				PATCH_IF (NOT IS_AN_INT ~%MATCH2%~) BEGIN
					SPRINT strref2 ~*~
				END ELSE PATCH_IF (%MATCH2% >= 0) AND (%MATCH2% <= StrRef_cutoff) BEGIN
					SET strref2 = RESOLVE_STR_REF ((AT MATCH2))
				END ELSE BEGIN
					PATCH_IF (%MATCH2% != ~-1~) BEGIN
						PATCH_WARN ~WARNING: %MATCH2% string out of TLK range~
					END
					SPRINT strref2 ~-1~
				END
				PATCH_IF (NOT IS_AN_INT ~%MATCH3%~) BEGIN
					SPRINT strref3 ~*~
				END ELSE PATCH_IF (%MATCH3% >= 0) AND (%MATCH3% <= StrRef_cutoff) BEGIN
					SET strref3 = RESOLVE_STR_REF ((AT MATCH3))
				END ELSE BEGIN
					PATCH_IF (%MATCH3% != ~-1~) BEGIN
						PATCH_WARN ~WARNING: %MATCH3% string out of TLK range~
					END
					SPRINT strref3 ~-1~
				END
				INNER_ACTION BEGIN
					COPY_EXISTING - ~KIT.IDS~ ~override~
						PRETTY_PRINT_2DA
						COUNT_REGEXP_INSTANCES ~ %name%$~ num_matches
						PATCH_IF (num_matches > 0) BEGIN
							REPLACE_EVALUATE CASE_INSENSITIVE ~^\([A-Za-z0-9]+\)[ ]+%name%$~ BEGIN
								SPRINT ids_index_sprint ~%MATCH1%~
								INNER_PATCH_SAVE ids_index_sprint ~%ids_index_sprint%~ BEGIN
									REPLACE_TEXTUALLY ~^0x~ ~0x0000~
								END
								PATCH_PRINT ~%name% KITIDS = %ids_index_sprint%~
							END
							~%MATCH1% %name%~
						END ELSE BEGIN
							SPRINT ids_index_sprint ~~
							PATCH_WARN ~WARNING: %name% kit was not found in kit.ids~
						END
					APPEND ~KITLIST.2DA~ ~%kit_index% %name% %strref1% %strref2% %strref3% %MATCH4% %ids_index_sprint%~
					PRINT ~%kit_index% %name% %strref1% %strref2% %strref3% %MATCH4% %ids_index_sprint% appended to KITLIST.2DA~
					ACTION_IF (kit_num != kit_index) AND (NOT VARIABLE_IS_SET $remapped_kit(~%kit_num%~)) BEGIN
						ACTION_DEFINE_ASSOCIATIVE_ARRAY remapped_kit BEGIN ~%kit_num%~ => ~%kit_index%~ END
						OUTER_SPRINT log_remapped_kit ~%log_remapped_kit%%TAB%%kit_num%%TAB%=>%TAB%%kit_index%%TAB%%slash%%slash%%name%%LNL%~
					END
				END
			END
			~%kit_index% %name% %strref1% %strref2% %strref3% %MATCH4% %ids_index_sprint%~
		END
	END
COPY_EXISTING ~KITLIST.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// other KIT files                                  \\\\\
/////                                                  \\\\\

ACTION_FOR_EACH file IN CLASWEAP ABCLASRQ ABCLSMOD ABDCDSRQ ABDCSCRQ ALIGNMNT DUALCLAS KITTABLE BACKSTAB CLSWPBON THIEFSKL CLSRCREQ SNEAKATT CRIPPSTR BEGIN
	COPY_EXISTING ~%file%.2DA~ ~override~
		PRETTY_PRINT_2DA
	BUT_ONLY
	COPY - ~EET/temp/array/%file%.2DA~ ~EET/temp/array~
		PRETTY_PRINT_2DA
		COUNT_2DA_ROWS 3 "cntrow"
		FOR (cnt = 1; cnt < cntrow; cnt = cnt + 1) BEGIN
			READ_2DA_ENTRY cnt 0 3 "name"
			PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_RES%.2DA~ ~^%name%[ ]~)) BEGIN
				REPLACE_EVALUATE CASE_INSENSITIVE ~^%name%[ ]+\(.+\)$~ BEGIN
					PATCH_PRINT ~Patching %SOURCE_RES%.2DA: %name%~
					INNER_ACTION BEGIN
						APPEND ~%SOURCE_RES%.2DA~ ~%name% %MATCH1%~
						OUTER_PATCH_SAVE ~MATCH1~ ~%MATCH1%~ BEGIN
							REPLACE_TEXTUALLY ~[ ]+~ ~ ~
						END
						PRINT ~%name% %MATCH1% appended to %SOURCE_FILE%~
					END
				END
				~%name% %MATCH1%~
			END
		END
	COPY_EXISTING ~%file%.2DA~ ~override~
		PRETTY_PRINT_2DA
	BUT_ONLY
END

ACTION_FOR_EACH file IN FALLEN LUABBR NUMWSLOT TRAPLIMT HPCLASS BEGIN
	COPY_EXISTING ~%file%.2DA~ ~override~
		PRETTY_PRINT_2DA
	BUT_ONLY
	COPY - ~EET/temp/array/%file%.2DA~ ~EET/temp/array~
		PRETTY_PRINT_2DA
		COUNT_2DA_ROWS 2 "cntrow"
		FOR (cnt = 1; cnt < cntrow; cnt = cnt + 1) BEGIN
			READ_2DA_ENTRY cnt 0 2 "name"
			PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_RES%.2DA~ ~^%name%[ ]~)) BEGIN
				REPLACE_EVALUATE CASE_INSENSITIVE ~^%name%[ ]+\(.+\)$~ BEGIN
					PATCH_PRINT ~Patching %SOURCE_RES%.2DA: %name%~
					INNER_ACTION BEGIN
						APPEND ~%SOURCE_RES%.2DA~ ~%name% %MATCH1%~
						OUTER_PATCH_SAVE ~MATCH1~ ~%MATCH1%~ BEGIN
							REPLACE_TEXTUALLY ~[ ]+~ ~ ~
						END
						PRINT ~%name% %MATCH1% appended to %SOURCE_FILE%~
					END
				END
				~%name% %MATCH1%~
			END
		END
	COPY_EXISTING ~%file%.2DA~ ~override~
		PRETTY_PRINT_2DA
	BUT_ONLY
END

ACTION_FOR_EACH file IN WEAPPROF CLASCOLR CLASISKL THIEFSCL CLASTHAC BEGIN
	COPY_EXISTING ~%file%.2DA~ ~override~
		PRETTY_PRINT_2DA
		REPLACE_TEXTUALLY ~$~ ~ ~
		REPLACE_TEXTUALLY ~^ $~ ~~
		COUNT_2DA_ROWS 3 "cntrow"
	BUT_ONLY

	COPY - ~EET/temp/array/%file%.2DA~ ~EET/temp/array~
		PRETTY_PRINT_2DA
		REPLACE_TEXTUALLY ~$~ ~ ~
		COUNT_2DA_COLS "cntcol"
		FOR (cnt = 1; cnt < (cntcol - 1); cnt = cnt + 1) BEGIN
			READ_2DA_ENTRY 0 cnt 3 "name"
			PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_RES%.2DA~ ~[ ]%name%[ ]~)) BEGIN
				PATCH_PRINT ~Patching %SOURCE_RES%.2DA: %name%~
				SET updated = 0
				SPRINT col ~dummy_entry dummy_entry %name%~
				FOR (cnt2 = 1; cnt2 < cntrow; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 (cnt + 1) 3 "add"
					SPRINT col ~%col% %add%~
				END
				INNER_ACTION BEGIN
					APPEND_COL ~%SOURCE_RES%.2DA~ ~%col%~
					OUTER_PATCH_SAVE ~col~ ~%col%~ BEGIN //for easier DEBUG reading
						REPLACE_TEXTUALLY ~dummy_entry ~ ~~
						REPLACE_TEXTUALLY ~[ ]+~ ~ ~
					END
					PRINT ~%col% column appended to %SOURCE_FILE%~
				END
			END
		END
	COPY_EXISTING ~%file%.2DA~ ~override~
		REPLACE_TEXTUALLY ~dummy_entry~ ~~
		PRETTY_PRINT_2DA
	BUT_ONLY
END

ACTION_BASH_FOR ~EET/temp/array~ ~^K_.+$~ BEGIN
	COPY + ~%BASH_FOR_FILESPEC%~ ~%BASH_FOR_FILESPEC%~
		PRETTY_PRINT_2DA
		COUNT_2DA_ROWS 2 "cntrow"
		FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
			SET noupdate = 0
			//READ_2DA_ENTRY cnt 0 2 "col1"
			READ_2DA_ENTRY cnt 1 2 "col2"
			SPRINT match ~%col2%~ SPRINT res ~kit~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col2%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 1 2 "%match%" SPRINT col2 ~%match%~ END
			INNER_ACTION BEGIN
				COPY_EXISTING ~%BASH_FOR_RES%.2DA~ ~override~
					PRETTY_PRINT_2DA
					COUNT_2DA_ROWS 2 "cntrow2"
					READ_2DA_ENTRY (cntrow2 - 1) 0 2 "col1"
					SET col1 = col1 + 1
					FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
						READ_2DA_ENTRY cnt2 1 2 "compareWith"
						PATCH_IF (("%col2%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
							SET noupdate = 1
						END
					END
				BUT_ONLY
				ACTION_IF ("%noupdate%" = 0) BEGIN
					APPEND ~%BASH_FOR_RES%.2DA~ ~%col1% %col2%~
					PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
				END
				COPY_EXISTING ~%BASH_FOR_RES%.2DA~ ~override~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
END

/////                                                  \\\\\
///// CHARSND.2DA                                      \\\\\
/////                                                  \\\\\

ACTION_DEFINE_ASSOCIATIVE_ARRAY table_2DA_charsnd BEGIN
	~FEMALE~ => ~BGMAINF~
	~MALE~ => ~BGMAINM~
	~FEMALE1~ => ~BGFEML1~
	~FEMALE2~ => ~BGFEML2~
	~FEMALE3~ => ~BGFEML3~
	~FEMALE4~ => ~BGFEML4~
	~FEMALE5~ => ~BGFEML5~
	~FEMALE6~ => ~BGFEML6~
	~MALE1~ => ~BGMALE1~
	~MALE2~ => ~BGMALE2~
	~MALE3~ => ~BGMALE3~
	~MALE4~ => ~BGMALE4~
	~MALE5~ => ~BGMALE5~
	~MALE6~ => ~BGMALE6~
END

<<<<<<<< .../CHARSND.txt
%index2%
>>>>>>>>

COPY - ~EET/temp/array/CHARSND.2DA~ ~EET/temp/array~
	COUNT_2DA_COLS "cntcol"
	COUNT_2DA_ROWS (cntcol - 1) "cntrow"
	READ_2DA_ENTRIES_NOW table_charsnd (cntcol - 1)
	INNER_ACTION BEGIN
		COPY_EXISTING ~CHARSND.2DA~ ~override~
			PRETTY_PRINT_2DA
			COUNT_2DA_COLS "cntcol2"
			COUNT_2DA_ROWS cntcol2 "cntrow2"
			FOR (cnt1 = 0 ; cnt1 < cntcol2 - 1 ; cnt1 = cnt1 + 1) BEGIN
				INNER_ACTION BEGIN
					COPY - ~.../CHARSND.txt~ ~.../CHARSND.txt~
						REPLACE_TEXTUALLY ~\(index2.+\)~ ~\1 -1~
				END
			END
		BUT_ONLY
		OUTER_FOR (cnt2 = 0 ; cnt2 < cntcol - 1 ; cnt2 = cnt2 + 1) BEGIN
			COPY_EXISTING ~CHARSND.2DA~ ~override~//need to be copied each time to reload data for FILE_CONTAINS_EVALUATED
				READ_2DA_ENTRY_FORMER table_charsnd 0 cnt2 "name"
				PHP_EACH table_2DA_charsnd AS oldName => newName BEGIN
					PATCH_IF ~%name%~ STRING_EQUAL_CASE ~%oldName%~ BEGIN
						SPRINT name ~%newName%~
					END
				END
				PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~CHARSND.2DA~ ~^%name%~)) BEGIN
					PATCH_PRINT ~Patching CHARSND.2DA: %name% subtitles~
					REPLACE_TEXTUALLY ~^\([ ]+MALE .+\)$~ ~\1 %name%~
					FOR (cnt3 = 0 ; cnt3 < cntrow2 ; cnt3 = cnt3 + 1) BEGIN
						READ_2DA_ENTRY cnt3 0 cntcol2 "index1"
						PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~EET/temp/array/CHARSND.2DA~ ~^%index1%~)) BEGIN
							REPLACE_TEXTUALLY ~^\(%index1% .+\)$~ ~\1 -1~
						END
					END
					FOR (cnt4 = 1; cnt4 < cntrow ; cnt4 = cnt4 + 1) BEGIN
						READ_2DA_ENTRY_FORMER table_charsnd cnt4 0 "index2"
						READ_2DA_ENTRY_FORMER table_charsnd cnt4 (cnt2 + 1) "string"
						PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~CHARSND.2DA~ ~^%index2%~)) BEGIN
							APPEND_FILE_EVALUATE ~.../CHARSND.txt~
						END
						PATCH_IF (string > 0) BEGIN
							REPLACE_TEXTUALLY ~^\(%index2% .+\)$~ ~\1 999%string%~
							REPLACE ~999%string%~ ( AT "string" )
						END ELSE BEGIN
							REPLACE_TEXTUALLY ~^\(%index2% .+\)$~ ~\1 %string%~
						END
					END
				END
			BUT_ONLY
		END
		COPY_EXISTING ~CHARSND.2DA~ ~override~
			PRETTY_PRINT_2DA
		BUT_ONLY
	END

/////                                                  \\\\\
///// CLEARXXX.2DA                                     \\\\\
/////                                                  \\\\\

<<<<<<<< .../CLEARXXX.2da
2DA V1.0
0               
                    Projectile Number
>>>>>>>>

ACTION_FOR_EACH file IN CLEARAIR CLEARCLD CLEARTRP CLEARWHR BEGIN
	ACTION_IF (FILE_EXISTS ~EET/temp/array/%file%.2DA~) BEGIN
		ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%file%.2DA~) BEGIN
			COPY ~.../CLEARXXX.2da~ ~override/%file%.2DA~
		END
		COPY + ~EET/temp/array/%file%.2DA~ ~EET/temp/array~
			PRETTY_PRINT_2DA
			COUNT_2DA_ROWS 2 "cntrow"
			FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
				SET noupdate = 0
				READ_2DA_ENTRY cnt 0 2 "col1"
				READ_2DA_ENTRY cnt 1 2 "col2"
				PATCH_IF (IS_AN_INT ~%col2%~) BEGIN
					SET match = col2 + 1 SPRINT res ~ipro~ LPM EET_PCU_outer_res SET col2 = match - 1 SET_2DA_ENTRY cnt 1 2 "%col2%"
					INNER_ACTION BEGIN
						COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
							COUNT_2DA_ROWS 2 "cntrow2"
							FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
								READ_2DA_ENTRY cnt2 0 2 "compareWith"
								PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
									SET noupdate = 1
								END
							END
						BUT_ONLY
						ACTION_IF ("%noupdate%" = 0) BEGIN
							APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2%~
							PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
						END
					END
				END
			END
		COPY_EXISTING ~%file%.2DA~ ~override~
			PRETTY_PRINT_2DA
		BUT_ONLY
	END
END

/////                                                  \\\\\
///// ENTRIES.2DA                                      \\\\\
/////                                                  \\\\\

/*COPY + ~EET/temp/array/ENTRIES.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 10 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 10 "col1"
		READ_2DA_ENTRY cnt 1 10 "col2"
		READ_2DA_ENTRY cnt 2 10 "col3"
		READ_2DA_ENTRY cnt 3 10 "col4"
		READ_2DA_ENTRY cnt 4 10 "col5"
		READ_2DA_ENTRY cnt 5 10 "col6"
		READ_2DA_ENTRY cnt 6 10 "col7"
		READ_2DA_ENTRY cnt 7 10 "col8"
		READ_2DA_ENTRY cnt 8 10 "col9"
		READ_2DA_ENTRY cnt 9 10 "col10"
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 10 "cntrow2"
				FOR (cnt2 = 0; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 10 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2% %col3% %col4% %col5% %col6% %col7% %col8% %col9% %col10%~
				PRINT ~%col1% %col2% %col3% %col4% %col5% %col6% %col7% %col8% %col9% %col10% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
	END*/

/////                                                  \\\\\
///// EXTANIM.2DA                                      \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/EXTANIM.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 20 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		FOR (i = 1; i < 20; i = i + 1) BEGIN
			READ_2DA_ENTRY cnt (i - 1) 20 "col%i%"
		END
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 20 "cntrow2"
				FOR (cnt2 = 0; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 20 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1)
					OR ("%col1%" <= 58111 ) BEGIN //0xE240 - 0xE2FF range reserved by Extended Animations
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2% %col3% %col4% %col5% %col6% %col7% %col8% %col9% %col10% %col11% %col12% %col13% %col14% %col15% %col16% %col17% %col18% %col19% %col20%~
				PRINT ~%col1% %col2% %col3% %col4% %col5% %col6% %col7% %col8% %col9% %col10% %col11% %col12% %col13% %col14% %col15% %col16% %col17% %col18% %col19% %col20% appended to %SOURCE_FILESPEC%~
			END
		END
	END
COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// EXTSPEED.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/EXTSPEED.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 2 "col1"
		READ_2DA_ENTRY cnt 1 2 "col2"
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 2 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1)
					OR ("%col1%" <= 58111 ) BEGIN //0xE240 - 0xE2FF range reserved by Extended Animations
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
			END
		END
	END
COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// HATERACE.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/HATERACE.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 4 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 4 "col1"
		READ_2DA_ENTRY cnt 1 4 "col2" //STRREF
		READ_2DA_ENTRY cnt 2 4 "col3" //IDS
		SPRINT match ~%col3%~ SPRINT res ~race~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col3%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 2 4 "%match%" SPRINT col3 ~%match%~ END
		READ_2DA_ENTRY cnt 3 4 "col4" //STRREF_HELP
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 4 "cntrow2"
				FOR (cnt2 = 0; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 2 4 "compareWith"
					PATCH_IF (("%col3%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					REPLACE_TEXTUALLY ~%col2%~ ~rep_col2~
					REPLACE_TEXTUALLY ~%col4%~ ~rep_col4~
				BUT_ONLY
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2% %col3% %col4%~
				PRINT ~%col1% %col2% %col3% %col4% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PATCH_IF ((col2 > 0) AND (col2 <= StrRef_cutoff)) BEGIN
						REPLACE "%col2%" ( AT "col2" )
					END
					PATCH_IF ((col4 > 0) AND (col4 <= StrRef_cutoff)) BEGIN
						REPLACE "%col4%" ( AT "col4" )
					END
					REPLACE_TEXTUALLY ~rep_col2~ ~%col2%~
					REPLACE_TEXTUALLY ~rep_col4~ ~%col4%~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
	END

/////                                                  \\\\\
///// HIDESPL.2DA                                      \\\\\
/////                                                  \\\\\

COPY_EXISTING_REGEXP GLOB ~SPWI[1-9][5-9][0-9]\.SPL~ ~override~ //Wizard level 1-9 spells index 50+
	~SPPR[1-7][5-9][0-9]\.SPL~ ~override~ //Priest level 1-7 spells index 50+
	INNER_ACTION BEGIN
		ACTION_IF (~%SOURCE_RES%~ STRING_CONTAINS_REGEXP ~50$~ = 1) BEGIN //spell index > 50
			APPEND ~HIDESPL.2DA~ ~%SOURCE_RES% 1 0 0~ UNLESS ~%SOURCE_RES%~
		END
	END
BUT_ONLY
COPY_EXISTING_REGEXP GLOB ~SPWI0[0-9]+\.SPL~ ~override~ //Wizard level 0 spells all indexes (they can be assigned as level 9 spells via SPELLS.2DA)
	INNER_ACTION BEGIN
		APPEND ~HIDESPL.2DA~ ~%SOURCE_RES% 1 0 0~ UNLESS ~%SOURCE_RES%~
	END
BUT_ONLY
ACTION_BASH_FOR ~%patch_dir%/spl~ ~SPWI[1-9][5-9][0-9]\.SPL~ BEGIN //Wizard level 1-9 spells index 50+
	ACTION_IF (~%BASH_FOR_RES%~ STRING_CONTAINS_REGEXP ~50$~ = 1) BEGIN //spell index > 50
		APPEND_OUTER + ~EET/temp/array/HIDESPL.2DA~ ~%BASH_FOR_RES% 1 0 0~ UNLESS ~%BASH_FOR_RES%~
	END
END
ACTION_BASH_FOR ~%patch_dir%/spl~ ~SPPR[1-7][5-9][0-9]\.SPL~ BEGIN //Priest level 1-7 spells index 50+
	ACTION_IF (~%BASH_FOR_RES%~ STRING_CONTAINS_REGEXP ~50$~ = 1) BEGIN //spell index > 50
		APPEND_OUTER + ~EET/temp/array/HIDESPL.2DA~ ~%BASH_FOR_RES% 1 0 0~ UNLESS ~%BASH_FOR_RES%~
	END
END

COPY_EXISTING ~HIDESPL.2DA~ ~override~
	COUNT_2DA_ROWS 3 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET_2DA_ENTRY cnt 2 3 "0"
	END
	PRETTY_PRINT_2DA
BUT_ONLY

OUTER_SPRINT logHide ~~
COPY + ~EET/temp/array/HIDESPL.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	FOR (i=924; i<=999; i=i+1) BEGIN
		REPLACE_TEXTUALLY ~^SPWI%i% .+%LNL%~ ~~
    END
	COUNT_2DA_ROWS 3 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 3 "col1"
		SPRINT match ~%col1%~ SPRINT res ~spl~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 3 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 3 "col2"
		READ_2DA_ENTRY cnt 2 3 "col3"
		INNER_ACTION BEGIN
			LAF NAME_NUM_OF_SPELL_RES STR_VAR spell_res = EVAL ~%col1%~ RET spell_num spell_name END
			ACTION_IF (FILE_EXISTS ~%patch_dir%/spl/%col1%.spl~) BEGIN
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PRETTY_PRINT_2DA
					COUNT_2DA_ROWS 3 "cntrow2"
					FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
						READ_2DA_ENTRY cnt2 0 3 "compareWith"
						PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
							SET noupdate = 1
						END
					END
				BUT_ONLY
				ACTION_IF ("%noupdate%" = 0) BEGIN
					APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2% 0 0~
					PRINT ~Patching %SOURCE_FILESPEC%: %col1% %col2% 0 0 appended (%spell_num%%TAB%%spell_name%)~
					OUTER_SPRINT logHide ~%logHide%##%col1%%TAB%%spell_num%%TAB%%spell_name%%LNL%~
				END
			END ELSE ACTION_IF (NOT FILE_CONTAINS_EVALUATED (~HIDESPL.2DA~ ~^%col1% ~)) BEGIN
				OUTER_SPRINT logHide ~%logHide%%col1%%TAB%%spell_num%%TAB%%spell_name%%LNL%~
			END ELSE BEGIN
				PRINT ~Skipping %SOURCE_RES%.2DA entry: %col1%%TAB%%spell_num%%TAB%%spell_name%~
				OUTER_SPRINT logHide ~%logHide%//%col1%%TAB%%spell_num%%TAB%%spell_name%%LNL%~
			END
		END
	END
COPY_EXISTING ~HIDESPL.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

COPY ~.../blank.txt~ ~EET/temp/HIDESPL.txt~
APPEND_OUTER ~EET/temp/HIDESPL.txt~ ~%logHide%~

/////                                                  \\\\\
///// IMPORT1-3.2DA                                    \\\\\
/////                                                  \\\\\

COPY_EXISTING ~IMPORT01.2DA~ ~override~
	~IMPORT02.2DA~ ~override~
	~IMPORT03.2DA~ ~override~
	SET_2DA_ENTRY 1 0 1 ~*~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// ITEM_USE.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/ITEM_USE.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 4 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 4 "col1"
		SPRINT match ~%col1%~ SPRINT res ~itm~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 4 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 4 "col2"
		SPRINT match ~%col2%~ SPRINT res ~dv~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col2%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 1 4 "%match%" SPRINT col2 ~%match%~ END
		READ_2DA_ENTRY cnt 2 4 "col3"
		READ_2DA_ENTRY cnt 3 4 "col4"
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 4 "cntrow2"
				FOR (cnt2 = 0; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 4 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					REPLACE_TEXTUALLY ~%col3%~ ~rep_col3~
				BUT_ONLY
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2% %col3% %col4%~
				PRINT ~%col1% %col2% %col3% %col4% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PATCH_IF ((col3 > 0) AND (col3 <= StrRef_cutoff)) BEGIN
						REPLACE "%col3%" ( AT "col3" )
					END
					REPLACE_TEXTUALLY ~rep_col3~ ~%col3%~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
	END

/////                                                  \\\\\
///// ITEMANIM.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/ITEMANIM.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~itm~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 2 "col2"
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 2 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
	END

/////                                                  \\\\\
///// ITEMDIAL.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/ITEMDIAL.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 3 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 3 "col1"
		SPRINT match ~%col1%~ SPRINT res ~itm~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 3 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 3 "col2"
		READ_2DA_ENTRY cnt 2 3 "col3"
		SPRINT match ~%col3%~ SPRINT res ~dlg~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col3%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 2 3 "%match%" SPRINT col3 ~%match%~ END
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 3 "cntrow2"
				FOR (cnt2 = 0; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 3 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					REPLACE_TEXTUALLY ~%col2%~ ~rep_col2~
				BUT_ONLY
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2% %col3%~
				PRINT ~%col1% %col2% %col3% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PATCH_IF ((col2 > 0) AND (col2 <= StrRef_cutoff)) BEGIN
						REPLACE "%col2%" ( AT "col2" )
					END
					REPLACE_TEXTUALLY ~rep_col2~ ~%col2%~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
	END

/////                                                  \\\\\
///// ITEMEXCL.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/ITEMEXCL.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~itm~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 2 "col2"
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 2 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
	END

/////                                                  \\\\\
///// MASTAREA.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/MASTAREA.2DA~ ~EET/temp/array~
	~EET/temp/2da/SODMAREA.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~are~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 2 "col2"
		INNER_ACTION BEGIN
			COPY_EXISTING ~MASTAREA.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 2 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				APPEND ~MASTAREA.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to MASTAREA.2DA~
				COPY_EXISTING ~MASTAREA.2DA~ ~override~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
	END

/////                                                  \\\\\
///// MONSUM01-07.2DA                                  \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/MONSUM01.2DA~ ~EET/temp/array~
	~EET/temp/array/MONSUM02.2DA~ ~EET/temp/array~
	~EET/temp/array/MONSUM03.2DA~ ~EET/temp/array~
	~EET/temp/array/MONSUM04.2DA~ ~EET/temp/array~
	~EET/temp/array/MONSUM05.2DA~ ~EET/temp/array~
	~EET/temp/array/MONSUM06.2DA~ ~EET/temp/array~
	~EET/temp/array/MONSUM07.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 1 2 "col2"
		SPRINT match ~%col2%~ SPRINT res ~cre~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col2%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 1 2 "%match%" SPRINT col2 ~%match%~ END
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				SET col1 = cntrow2
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 1 2 "compareWith"
					PATCH_IF (("%col2%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
	END

/////                                                  \\\\\
///// MOVIDESC.2DA                                     \\\\\
/////                                                  \\\\\

ACTION_DEFINE_ASSOCIATIVE_ARRAY table_2DA_moviedesc BEGIN
	"BEREGOST" => "19659"
	"BG4LOGO" => "20698"
	"BGENTER" => "19660"
	"BGSUNRIS" => "62086"
	"BGSUNSET" => "62087"
	"BHAAL" => "19661"
	"BILOGO" => "20699"
	"BLACKPI_" => "99931833"
	"BWDRAGON" => "62089"
	"CAMP" => "19662"
	"CNDLKEEP" => "19663"
	"CREDITS_" => "15591"
	"DUNGEON" => "19664"
	"DURLAG" => "99924075"
	"ELDRCITY" => "19665"
	"ENDCRDI_" => "62091"
	"ENDMOVIE" => "19666"
	"FRARMINN" => "19667"
	"GNOLL" => "19668"
	"INFELOGO" => "62096"
	"INTRO_" => "19669"
	"IRONTHRN" => "19670"
	"MINEFLOD" => "19671"
	"NASHKELL" => "19672"
	"PALACE" => "19673"
	"SEWER" => "19674"
	"TAVERN" => "19675"
	"TSRLOGO" => "99920697"
	"WOTC" => "20697"
	"WRECK" => "99924076"
	"WYVERN" => "19676"
END
COPY_EXISTING ~MOVIDESC.2DA~ ~override~
	PRETTY_PRINT_2DA
	READ_2DA_ENTRIES_NOW movidesc 2
	FOR (index = 1; index < movidesc; ++index) BEGIN
		READ_2DA_ENTRY_FORMER movidesc index 0 movie
		READ_2DA_ENTRY_FORMER movidesc index 1 strref
		TO_UPPER movie
		SET $movidesc("%movie%") = strref
	END
	PHP_EACH table_2DA_moviedesc AS movie => string BEGIN
		TO_UPPER movie
		PATCH_IF !VARIABLE_IS_SET $movidesc("%movie%") BEGIN
			INSERT_2DA_ROW movidesc 2 "%movie% %string%"
			SET $movidesc("%movie%") = string
		END
		PATCH_IF $movidesc("%movie%") != string BEGIN
			REPLACE_TEXTUALLY "%movie%[ %TAB%]+[0-9]+" "%movie% %string%"
			SET $movidesc("%movie%") = string
		END
	END
	REPLACE ~99931833~ @31833
	REPLACE ~99924075~ @24075
	REPLACE ~99920697~ @20697
	REPLACE ~99924076~ @24076
	PRETTY_PRINT_2DA
BUT_ONLY

COPY + ~EET/temp/array/MOVIDESC.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~mve~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 2 "col2"
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 2 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					REPLACE_TEXTUALLY ~%col2%~ ~rep_col2~
				BUT_ONLY
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PATCH_IF ((col2 > 0) AND (col2 <= StrRef_cutoff)) BEGIN
						REPLACE "%col2%" ( AT "col2" )
					END
					REPLACE_TEXTUALLY ~rep_col2~ ~%col2%~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
	END

/////                                                  \\\\\
///// MSECTYPE.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/MSECTYPE.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 2 "col1"
		READ_2DA_ENTRY cnt 1 2 "col2"
		INNER_ACTION BEGIN
			COPY_EXISTING ~MSECTYPE.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 2 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				COPY_EXISTING ~MSECTYPE.2DA~ ~override~
					REPLACE_TEXTUALLY ~%col2%~ ~rep_col2~
				BUT_ONLY
				APPEND ~MSECTYPE.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~MSECTYPE.2DA~ ~override~
					PATCH_IF ((col2 > 0) AND (col2 <= StrRef_cutoff)) BEGIN
						REPLACE "%col2%" ( AT "col2" )
					END
					REPLACE_TEXTUALLY ~rep_col2~ ~%col2%~
				BUT_ONLY
			END
		END
	END
COPY_EXISTING ~MSECTYPE.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// PORTRAIT.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/PORTRAIT.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 2 "col1"
		READ_2DA_ENTRY cnt 1 2 "col2"
		INNER_ACTION BEGIN
			COPY_EXISTING ~PORTRAIT.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 2 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				APPEND ~PORTRAIT.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
			END
		END
	END
COPY_EXISTING ~PORTRAIT.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// RNDXXX.2DA                                       \\\\\
/////                                                  \\\\\

ACTION_FOR_EACH file IN RNDEQUIP RNDMAGIC RNDSCROL RNDTREAS RNDWEP RNDTRES BEGIN
	ACTION_IF (FILE_EXISTS ~EET/temp/array/%file%.2DA~) BEGIN
		COPY + ~EET/temp/array/%file%.2DA~ ~EET/temp/array~
			PRETTY_PRINT_2DA
			SPRINT textToReplace ~2DA[ %TAB%]+V1.0[%newline%]+.+[%newline%]+.+[%newline%]+~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY ~%textToReplace%~ ~~
			END ELSE BEGIN
				PATCH_WARN ~WARNING: could not find %textToReplace% in %SOURCE_FILESPEC%~
			END
			REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z0-9#_-]+\)~ BEGIN
				SPRINT match ~%MATCH1%~ SPRINT res ~itm~ LPM EET_PCU_outer_res
			END ~%match%~
			SPRINT filename "%SOURCE_RES%"
			COUNT_2DA_ROWS 1 "cntrow"
			FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
				PATCH_IF (~%filename%~ STRING_EQUAL_CASE ~RNDEQUIP~) BEGIN
					SPRINT item ~DEQU~
				END ELSE PATCH_IF (~%filename%~ STRING_EQUAL_CASE ~RNDMAGIC~) BEGIN
					SPRINT item ~DMAG~
				END ELSE PATCH_IF (~%filename%~ STRING_EQUAL_CASE ~RNDSCROL~) BEGIN
					SPRINT item ~DSCR~
				END ELSE PATCH_IF (~%filename%~ STRING_EQUAL_CASE ~RNDTREAS~) BEGIN
					SPRINT item ~DTRE~
				END ELSE PATCH_IF (~%filename%~ STRING_EQUAL_CASE ~RNDWEP~) BEGIN
					SPRINT item ~DWEP~
				END ELSE BEGIN //RNDTRES
					READ_2DA_ENTRY cnt 0 1 ~new_name~
					PATCH_IF (FILE_CONTAINS_EVALUATED (~RNDTRES.2DA~ ~^%new_name%[ %TAB%]+~)) BEGIN
						REPLACE_TEXTUALLY ~^%new_name%[ %TAB%]+.+$~ ~deleteMeDummy~
						PATCH_PRINT ~Skipping RNDTRES.2DA patching: already has %new_name% row~
					END
				END
				PATCH_IF (NOT ~%filename%~ STRING_EQUAL_CASE ~RNDTRES~) BEGIN
					SET value = cnt + 1
					PATCH_IF (value < 10) BEGIN
						SPRINT value ~0%value%~
					END
					READ_2DA_ENTRY cnt 0 1 ~old_name~
					SET_2DA_ENTRY cnt 0 1 ~BG%item%%value%~
					DEFINE_ASSOCIATIVE_ARRAY remapped_itm BEGIN ~RN%item%%value%~ => ~BG%item%%value%~ END
					SPRINT log_remapped_itm ~%log_remapped_itm%%TAB%RN%item%%value%%TAB%=>%TAB%BG%item%%value%%TAB%%slash%%slash%%old_name%%LNL%~
					READ_2DA_ENTRY cnt 0 1 ~new_name~
				END
				INNER_ACTION BEGIN
					ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%new_name%.itm~) BEGIN
						COPY_EXISTING ~RNDTRE01.ITM~ ~override/%new_name%.itm~
					END ELSE BEGIN
						WARN ~WARNING: %new_name%.itm already exists in game, possible conflict~
					END
					ACTION_IF (FILE_EXISTS ~%patch_dir%/itm/%new_name%.itm~) BEGIN
						DELETE + ~%patch_dir%/itm/%new_name%.itm~
					END
				END
			END
			REPLACE_TEXTUALLY ~deleteMeDummy~ ~~
		COPY_EXISTING ~rndtres.2da~ ~override~
			APPEND_FILE ~EET/temp/array/%file%.2DA~
			PRETTY_PRINT_2DA
		BUT_ONLY
	END
END

/////                                                  \\\\\
///// SCRPDESC.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/SCRPDESC.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 3 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 3 "col1"
		READ_2DA_ENTRY cnt 1 3 "col2"
		READ_2DA_ENTRY cnt 2 3 "col3"
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 3 "cntrow2"
				FOR (cnt2 = 0; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 3 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					REPLACE_TEXTUALLY ~%col2%~ ~rep_col2~
					REPLACE_TEXTUALLY ~%col3%~ ~rep_col3~
				BUT_ONLY
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2% %col3%~
				PRINT ~%col1% %col2% %col3% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PATCH_IF ((col2 > 0) AND (col2 <= StrRef_cutoff)) BEGIN
						REPLACE "%col2%" ( AT "col2" )
					END
					PATCH_IF ((col3 > 0) AND (col3 <= StrRef_cutoff)) BEGIN
						REPLACE "%col3%" ( AT "col3" )
					END
					REPLACE_TEXTUALLY ~rep_col2~ ~%col2%~
					REPLACE_TEXTUALLY ~rep_col3~ ~%col3%~
				BUT_ONLY
			END
		END
	END
	PRETTY_PRINT_2DA

/////                                                  \\\\\
///// SONGLIST.2DA                                     \\\\\
/////                                                  \\\\\

COPY_EXISTING ~SONGLIST.2DA~ ~override~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 3 "last_entry"
	PATCH_PRINT ~last song number = %last_entry%~
BUT_ONLY

ACTION_DEFINE_ASSOCIATIVE_ARRAY table_2DA_songlist BEGIN
	"BC1" => "BC3"
	"BC2" => "BC4"
	"BD1" => "BD4"
	"BD2" => "BD5"
	"BF1" => "BF3"
	"BF2" => "BF4"
	"BP1" => "BP3"
	"BP2" => "BP4"
	"TAV1" => "TAV5"
	"TAV2" => "TAV6"
	"TAV3" => "TAV7"
	"TAV4" => "TAV8"
	"THEME" => "BGTHEME"
END

COPY + ~EET/temp/array/SONGLIST.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	PHP_EACH table_2DA_songlist AS oldName => newName BEGIN
		REPLACE_TEXTUALLY ~ %oldName% ~ ~ %newName% ~
		REPLACE_TEXTUALLY ~ %oldName%\.MUS~ ~ %newName%.MUS~
	END
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 3 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 3 "col1"
		READ_2DA_ENTRY cnt 1 3 "col2"
		READ_2DA_ENTRY cnt 2 3 "col3"
		SPRINT col3temp ~%col3%~
		PHP_EACH table_2DA_songlist AS oldName => newName BEGIN
			PATCH_IF (("%col3temp%" STRING_EQUAL_CASE "%newName%.MUS")=1) BEGIN
				SPRINT col3temp ~%oldName%.MUS~
			END
		END
		INNER_ACTION BEGIN
			ACTION_IF (FILE_EXISTS ~%bgee_dir%/music/%col3temp%~) BEGIN
				COPY_EXISTING ~SONGLIST.2DA~ ~override~
					PRETTY_PRINT_2DA
					COUNT_2DA_ROWS 3 "cntrow2"
					FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
						READ_2DA_ENTRY cnt2 2 3 "compareCol3"
						PATCH_IF (("%col3%" STRING_EQUAL_CASE "%compareCol3%")=1) BEGIN
							READ_2DA_ENTRY cnt2 0 3 "compareCol1"
							PATCH_IF (NOT VARIABLE_IS_SET $remapped_mus(~%col1%~)) BEGIN
								DEFINE_ASSOCIATIVE_ARRAY remapped_mus BEGIN ~%col1%~ => ~%compareCol1%~ END
								SPRINT log_remapped_mus ~%log_remapped_mus%%TAB%%col1%%TAB%=>%TAB%%compareCol1%%TAB%%slash%%slash%%col2%%LNL%~
							END
							PATCH_PRINT ~%col3% referenced in SONGLIST.2DA already exists within the file~
							SET cnt2 = cntrow2
							SET noupdate = 1
						END
					END
				BUT_ONLY
				ACTION_IF ("%noupdate%" = 0) BEGIN
					ACTION_IF (NOT VARIABLE_IS_SET $remapped_mus(~%col1%~)) BEGIN
						ACTION_DEFINE_ASSOCIATIVE_ARRAY remapped_mus BEGIN ~%col1%~ => ~%last_entry%~ END
						OUTER_SPRINT log_remapped_mus ~%log_remapped_mus%%TAB%%col1%%TAB%=>%TAB%%last_entry%%TAB%%slash%%slash%%col2%%LNL%~
					END
					APPEND ~SONGLIST.2DA~ ~%last_entry% %col2% %col3%~
					APPEND ~SONGLIST.IDS~ ~%last_entry% %col2%~
					PRINT ~Appended %last_entry% %col2% %col3% music reference~
					OUTER_SET last_entry = last_entry + 1
				END
			END ELSE BEGIN
				ACTION_IF (NOT VARIABLE_IS_SET $remapped_mus(~%col1%~)) BEGIN
					ACTION_DEFINE_ASSOCIATIVE_ARRAY remapped_mus BEGIN ~%col1%~ => ~0~ END
					OUTER_SPRINT log_remapped_mus ~%log_remapped_mus%%TAB%%col1%%TAB%=>%TAB%0%TAB%%slash%%slash%%col2%%LNL%~
				END
				PRINT ~%col3% referenced in SONGLIST.2DA does not exist~
			END
		END
	END
COPY_EXISTING ~SONGLIST.2DA~ ~override~
	//rearrangements to change music played in menu
	//REPLACE_TEXTUALLY ~BG2Theme[ %TAB%]+THEME.MUS~ ~pasteOldTheme~
	//REPLACE_TEXTUALLY ~ThemeT[ %TAB%]+THEMET.mus~ ~BG2Theme THEME.MUS~
	//REPLACE_TEXTUALLY ~OldTheme[ %TAB%]+oldthm.mus~ ~ThemeT THEMET.mus~
	//REPLACE_TEXTUALLY ~pasteOldTheme~ ~OldTheme oldthm.mus~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// SPAWNGRP.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/SPAWNGRP.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~^[ ]*RDGnoll~ ~dummy RDGnoll~
	COUNT_2DA_COLS "cntcol"
	FOR (cnt = 1; cnt < "%cntcol%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		FOR (i = 1; i <= 10; i = i + 1) BEGIN
			READ_2DA_ENTRY (i - 1) cnt 3 "row%i%"
		END
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_COLS "cntcol2"
				FOR (cnt2 = 0; cnt2 < ("%cntcol2%" - 1); cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY 0 cnt2 3 "compareWith"
					PATCH_IF (("%row1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				APPEND_COL ~%SOURCE_RES%.2DA~ ~%row1% %row2% %row3% %row4% %row5% %row6% %row7% %row8% %row9% %row10%~
				PRINT ~%row1% %row2% %row3% %row4% %row5% %row6% %row7% %row8% %row9% %row10% column appended to %SOURCE_FILESPEC%~
			END
		END
	END
COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// SPELLS.2DA                                       \\\\\
/////                                                  \\\\\

//overwrite instead, in patch 2.0 there are 2 missing columns
/*COPY_EXISTING ~SPELLS.2DA~ ~override~
	REPLACE_TEXTUALLY ~50~ ~99~
	SET_2DA_ENTRY 1 9 3 ~199~ //the cap for level 9 spells can be set to 199, for which spells 100-199 refer to SPWI0**.SPL
	PRETTY_PRINT_2DA
BUT_ONLY*/

/////                                                  \\\\\
///// SNDRESRF.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/SNDRESRF.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~are~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 2 "col2"
		SPRINT match ~%col2%~ SPRINT res ~wav~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col2%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 1 2 "%match%" SPRINT col2 ~%match%~ END
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 2 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
					PRETTY_PRINT_2DA
				BUT_ONLY
			END
		END
	END

/////                                                  \\\\\
///// SPELDESC.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/SPELDESC.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~spl~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 2 "col2"
		INNER_ACTION BEGIN
			COPY_EXISTING ~SPELDESC.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 2 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				COPY_EXISTING ~SPELDESC.2DA~ ~override~
					REPLACE_TEXTUALLY ~%col2%~ ~rep_col2~
				BUT_ONLY
				APPEND ~SPELDESC.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
				COPY_EXISTING ~SPELDESC.2DA~ ~override~
					PATCH_IF ((col2 > 0) AND (col2 <= StrRef_cutoff)) BEGIN
						REPLACE "%col2%" ( AT "col2" )
					END
					REPLACE_TEXTUALLY ~rep_col2~ ~%col2%~
				BUT_ONLY
			END
		END
	END
COPY_EXISTING ~SPELDESC.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// STRTGOLD.2DA                                     \\\\\
/////                                                  \\\\\

APPEND ~STRTGOLD.2DA~ ~SORCERER                4       1       1           10~ UNLESS ~SORCERER~
APPEND ~STRTGOLD.2DA~ ~MONK                    4       1       1           10~ UNLESS ~MONK~
COPY_EXISTING ~STRTGOLD.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// TOOLTIP.2DA                                      \\\\\
/////                                                  \\\\\

COPY_EXISTING ~TOOLTIP.2DA~ ~override~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~$~ ~ ~
BUT_ONLY

INCLUDE ~EET/lib/tooltip.tpa~

COPY - ~EET/temp/array/TOOLTIP.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 3 "cntrow"
	COUNT_2DA_COLS "cntcol"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SPRINT strings ~~
		READ_2DA_ENTRY cnt 0 3 "col1"
		SPRINT match ~%col1%~ SPRINT res ~itm~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 3 "%match%" SPRINT col1 ~%match%~ END
		PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~TOOLTIP.2DA~ ~^%col1%[ ]~)) BEGIN
			FOR (cnt2 = 1; cnt2 < cntcol; cnt2 = cnt2 + 1) BEGIN
				READ_2DA_ENTRY cnt cnt2 3 "colx"
				PATCH_IF (~%colx%~ STRING_EQUAL_CASE ~-1~) BEGIN
					SPRINT strings ~%strings% %colx% ~
				END ELSE BEGIN
					SPRINT strings ~%strings% @%colx% ~
				END
			END
			INNER_ACTION BEGIN
				PRINT ~Patching TOOLTIP.2DA: %col1% %strings%~
				LAF ~ADD_ITEM_TOOLTIPS~ STR_VAR item = EVAL ~%col1%~ tooltips = EVAL ~%strings%~ END
			END
		END
	END

/////                                                  \\\\\
///// TRACKING.2DA                                     \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/TRACKING.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	SPRINT textToReplace ~^AR3001 .+[%newline%]*AR3004 .+[%newline%]*AR3005 .+[%newline%]*AR3006 .+[%newline%]*AR3007 .+[%newline%]*AR3008 .+[%newline%]*AR3009 .+[%newline%]*AR3010 .+[%newline%]*AR3012 .+[%newline%]*AR3013 .+[%newline%]*AR3014 .+[%newline%]*AR3015 .+[%newline%]*AR3016 .+[%newline%]*AR3017 .+[%newline%]*AR3018 .+[%newline%]*AR3019 .+[%newline%]*AR3020 .+[%newline%]*AR3021 .+[%newline%]*AR3022 .+[%newline%]*AR3024 .+[%newline%]*AR3025 .+[%newline%]*AR3026 .+[%newline%]*AR3027 .+[%newline%]*AR4500 .+[%newline%]*AR5006 .+[%newline%]*AR5007 .+[%newline%]*AR5013 .+[%newline%]*AR5200 .+[%newline%]*AR5201 .+[%newline%]*AR5202 .+[%newline%]*AR5203 .+[%newline%]*AR5204 .+[%newline%]*AR5509 .+[%newline%]*AR6000 .+[%newline%]*AR6001 .+[%newline%]*AR6002 .+[%newline%]*AR6003 .+[%newline%]*AR6004 .+[%newline%]*AR6005 .+[%newline%]*AR6006 .+[%newline%]*AR6007 .+[%newline%]*AR6008 .+[%newline%]*AR6009 .+[%newline%]*AR6010 .+[%newline%]*AR6011 .+[%newline%]*AR6012 .+[%newline%]*AR6013 .+[%newline%]*AR6100 .+[%newline%]*AR6101 .+[%newline%]*AR6102 .+[%newline%]*AR6103 .+[%newline%]*AR6104 .+[%newline%]*AR6105 .+[%newline%]*AR6106 .+[%newline%]*AR6107 .+[%newline%]*AR6108 .+[%newline%]*AR6109 .+[%newline%]*AR6110 .+[%newline%]*AR6200 .+[%newline%]*AR6300 .+[%newline%]*AR6400 .+$~
	COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
	PATCH_IF (num_matches > 0) BEGIN
		REPLACE_TEXTUALLY ~%textToReplace%~ ~~
	END ELSE BEGIN
		PATCH_WARN ~WARNING: could not find %textToReplace% in %SOURCE_FILESPEC%~
	END
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET noupdate = 0
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~are~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 2 "col2"
		INNER_ACTION BEGIN
			COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
				COUNT_2DA_ROWS 2 "cntrow2"
				FOR (cnt2 = 1; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
					READ_2DA_ENTRY cnt2 0 2 "compareWith"
					PATCH_IF (("%col1%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
						SET noupdate = 1
					END
				END
			BUT_ONLY
			ACTION_IF ("%noupdate%" = 0) BEGIN
				OUTER_PATCH_SAVE col2_new ~%col2%~ BEGIN
					REPLACE_TEXTUALLY ~O_~ ~~
				END
				ACTION_IF ((col2_new > 0) AND (col2_new <= StrRef_cutoff)) BEGIN
					OUTER_SET strref = RESOLVE_STR_REF ((AT col2_new))
					OUTER_PATCH_SAVE col2 ~%col2%~ BEGIN
						REPLACE_TEXTUALLY ~^\(O*_*\)[0-9]+$~ ~\1%strref%~
					END
				END
				APPEND ~%SOURCE_RES%.2DA~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
			END
		END
	END
COPY_EXISTING ~%SOURCE_RES%.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// XPBONUS.2DA                                      \\\\\
/////                                                  \\\\\

COPY_EXISTING ~XPBONUS.2DA~ ~override~
	REPLACE_TEXTUALLY ~DISARM_TRAP.+$~ ~DISARM_TRAP   10   10   10   10   10   17   17   17   17   17   27   27   27   27   27   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32~
	REPLACE_TEXTUALLY ~PICK_LOCK.+$~   ~PICK_LOCK     25   25   25   25   25   40   40   40   40   40   95   95   95   95   95   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15~
	REPLACE_TEXTUALLY ~LEARN_SPELL.+$~ ~LEARN_SPELL   10   20   30   40   50   60   70   80   90   0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// XPLEVEL.2DA                                      \\\\\
/////                                                  \\\\\

COPY_EXISTING ~XPLEVEL.2DA~ ~override~
	PRETTY_PRINT_2DA
	COUNT_2DA_COLS "cntcol"
	COUNT_2DA_ROWS cntcol "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET_2DA_ENTRY cnt (cntcol - 1) cntcol "-1"
	END
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// XPLIST.2DA                                       \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/array/XPLIST.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	SPRINT textToReplace ~^2DA[ %TAB%]+V1.0[%newline%]+.+[%newline%]+.+[%newline%]+HEADS .+[%newline%]*SMITH .+[%newline%]*SMNPAR .+[%newline%]*SOLAR1 .+[%newline%]*SOLAR2 .+[%newline%]*PLOT01A .+[%newline%]*PLOT01B .+[%newline%]*PLOT01C .+[%newline%]*PLOT01D .+[%newline%]*PLOT01E .+[%newline%]*PLOT01F .+[%newline%]*PLOT01G .+[%newline%]*PLOT01H .+[%newline%]*PLOT2A .+[%newline%]*PLOT2B .+[%newline%]*PLOT2C .+[%newline%]*PLOT3A .+[%newline%]*PLOT3B .+[%newline%]*PLOT3C .+[%newline%]*PLOT4A .+[%newline%]*PLOT4B .+[%newline%]*PLOT4C .+[%newline%]*PLOT5A .+[%newline%]*PLOT5B .+[%newline%]*PLOT5C .+[%newline%]*PLOT5D .+[%newline%]*PLOT6A .+[%newline%]*PLOT6B .+[%newline%]*PLOT6C .+[%newline%]*PLOT6D .+[%newline%]*PLOT6E .+[%newline%]*PLOT6F .+[%newline%]*PLOT7A .+[%newline%]*PLOT7B .+[%newline%]*PLOT7C .+[%newline%]*PLOT7D .+[%newline%]*PLOT7E .+[%newline%]*PLOT7F .+[%newline%]*PLOT7G .+[%newline%]*PLOT7H .+[%newline%]*PLOT8A .+[%newline%]*PLOT8B .+[%newline%]*PLOT8C .+[%newline%]*PLOT8D .+[%newline%]*PLOT8E .+[%newline%]*PLOT8F .+[%newline%]*PLOT9A .+[%newline%]*PLOT10A .+[%newline%]*PLOT10B .+[%newline%]*PLOT11A .+[%newline%]*PLOT11B .+[%newline%]*PLOT11C .+[%newline%]*PLOT11D .+[%newline%]*PLOT11E .+[%newline%]*PLOT11F .+[%newline%]*PLOT13A .+[%newline%]*PLOT13B .+[%newline%]*PLOT14A .+[%newline%]*PLOT14B .+[%newline%]*PLOT14C .+[%newline%]*PLOT15A .+[%newline%]*PLOT18A .+[%newline%]*PLOT18B .+[%newline%]*SENDAI .+[%newline%]*YAGA .+[%newline%]*ABAZIGAL .+[%newline%]*GROMNIR .+[%newline%]*BALTH .+[%newline%]*PLOT21A .+[%newline%]*PLOT23A .+[%newline%]*CHALL01 .+[%newline%]*CHALL02 .+[%newline%]*PLOT24A .+[%newline%]*PLOT24B .+[%newline%]*PLOT25A .+[%newline%]*PLOT26A .+[%newline%]*PLOT27A .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+[%newline%]*QUEST6 .+$~
	COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
	PATCH_IF (num_matches > 0) BEGIN
		REPLACE_TEXTUALLY ~%textToReplace%~ ~~
	END ELSE BEGIN
		PATCH_WARN ~WARNING: could not find %textToReplace% in %SOURCE_FILESPEC%~
	END
COPY_EXISTING ~XPLIST.2DA~ ~override~
	APPEND_FILE ~EET/temp/array/XPLIST.2DA~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// ACHIEVEM.2DA                                     \\\\\
/////                                                  \\\\\

COPY_EXISTING ~ACHIEVEM.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY
COPY + ~EET/temp/array/ACHIEVEM.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~var~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_FILE%~ ~^%col1%[ ]+~)) BEGIN
			READ_2DA_ENTRY cnt 1 2 "col2"
			INNER_ACTION BEGIN
				APPEND ~%SOURCE_FILE%~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
			END
		END
	END
COPY_EXISTING ~%SOURCE_FILE%~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// FOGAREA.2DA                                      \\\\\
/////                                                  \\\\\

COPY_EXISTING ~FOGAREA.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY
COPY + ~EET/temp/array/FOGAREA.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 9 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 9 "col1"
		PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_FILE%~ ~^%col1%[ ]+~)) BEGIN
			REPLACE_EVALUATE CASE_INSENSITIVE ~^\(%col1%[ ]+.*\)$~ BEGIN
				INNER_ACTION BEGIN
					APPEND ~%SOURCE_FILE%~ ~%MATCH1%~
					PRINT ~%MATCH1% appended to %SOURCE_FILESPEC%~
				END
			END ~%MATCH1%~
		END
	END
COPY_EXISTING ~%SOURCE_FILE%~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// FOGPT.2DA                                        \\\\\
/////                                                  \\\\\

COPY_EXISTING ~FOGPT.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY
COPY + ~EET/temp/array/FOGPT.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 6 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 6 "col1"
		PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_FILE%~ ~^%col1%[ ]+~)) BEGIN
			REPLACE_EVALUATE CASE_INSENSITIVE ~^\(%col1%[ ]+.*\)$~ BEGIN
				INNER_ACTION BEGIN
					APPEND ~%SOURCE_FILE%~ ~%MATCH1%~
					PRINT ~%MATCH1% appended to %SOURCE_FILESPEC%~
				END
			END ~%MATCH1%~
		END
	END
COPY_EXISTING ~%SOURCE_FILE%~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// ITEMSPEC.2DA                                     \\\\\
/////                                                  \\\\\

COPY_EXISTING ~ITEMSPEC.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY
COPY + ~EET/temp/array/ITEMSPEC.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~itm~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_FILE%~ ~^%col1%[ ]+~)) BEGIN
			READ_2DA_ENTRY cnt 1 2 "col2"
			INNER_ACTION BEGIN
				APPEND ~%SOURCE_FILE%~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
			END
		END
	END
COPY_EXISTING ~%SOURCE_FILE%~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// PARTYAI.2DA                                      \\\\\
/////                                                  \\\\\

COPY_EXISTING ~PARTYAI.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY
COPY + ~EET/temp/array/PARTYAI.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~dv~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_FILE%~ ~^%col1%[ ]+~)) BEGIN
			READ_2DA_ENTRY cnt 1 2 "col2"
			INNER_ACTION BEGIN
				APPEND ~%SOURCE_FILE%~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
			END
		END
	END
COPY_EXISTING ~%SOURCE_FILE%~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// RACEFEAT.2DA                                     \\\\\
/////                                                  \\\\\

COPY_EXISTING ~RACEFEAT.2DA~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY
COPY + ~EET/temp/array/RACEFEAT.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 2 "col1"
		PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_FILE%~ ~^%col1%[ ]+~)) BEGIN
			READ_2DA_ENTRY cnt 1 2 "col2"
			INNER_ACTION BEGIN
				APPEND ~%SOURCE_FILE%~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
			END
		END
	END
COPY_EXISTING ~%SOURCE_FILE%~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// SMTABLES.2DA                                     \\\\\
/////                                                  \\\\\

COPY_EXISTING ~SMTABLES.2DA~ ~override~
	COUNT_2DA_ROWS 2 "smtables_cnt"
	PRETTY_PRINT_2DA
BUT_ONLY
COPY + ~EET/temp/array/SMTABLES.2DA~ ~EET/temp/array~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 2 "col1"
		READ_2DA_ENTRY cnt 1 2 "col2"
		INNER_ACTION BEGIN
			ACTION_IF (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_FILE%~ ~^%col1%[ ]+%col2%$~)) BEGIN
				APPEND ~%SOURCE_FILE%~ ~%col1% %col2%~
				PRINT ~%col1% %col2% appended to %SOURCE_FILESPEC%~
				OUTER_SET smtables_cnt = smtables_cnt + 1
				ACTION_IF (cnt != smtables_cnt) BEGIN
					ACTION_DEFINE_ASSOCIATIVE_ARRAY remapped_sum BEGIN ~%cnt%~ => ~%smtables_cnt%~ END
					OUTER_SPRINT log_remapped_sum ~%log_remapped_sum%%TAB%%col1%%TAB%=>%TAB%0%TAB%%slash%%slash%%col2%%LNL%~
				END
			END
			ACTION_IF (FILE_EXISTS ~EET/temp/2da/%col2%.2DA~) BEGIN
				ACTION_IF (FILE_EXISTS_IN_GAME ~%col2%.2da~) BEGIN
					OUTER_SPRINT copy_dir ~EET/temp/array~
					OUTER_SET exists = 1
					MOVE + ~EET/temp/2da/%col2%.2DA~ ~EET/temp/array~
					COPY_EXISTING ~%col2%.2da~ ~override~
						COUNT_2DA_ROWS 4 "col1"
						SET col1 = col1 + 1
						PRETTY_PRINT_2DA
					BUT_ONLY
				END ELSE BEGIN
					OUTER_SPRINT copy_dir ~EET/temp/2da~
					OUTER_SET exists = 0
				END
				COPY + ~%copy_dir%/%col2%.2DA~ ~%copy_dir%~
					PRETTY_PRINT_2DA
					COUNT_2DA_ROWS 4 "cntrow2"
					FOR (cnt2 = 0; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
						READ_2DA_ENTRY cnt2 1 4 "col2"
						SPRINT match ~%col2%~ SPRINT res ~cre~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col2%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt2 1 4 "%match%" SPRINT col2 ~%match%~ END
						READ_2DA_ENTRY cnt2 2 4 "col3"
						SPRINT match ~%col3%~ SPRINT res ~bam~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col3%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt2 2 4 "%match%" SPRINT col3 ~%match%~ END
						READ_2DA_ENTRY cnt2 3 4 "col4"
						SPRINT match ~%col4%~ SPRINT res ~bam~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col4%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt2 3 4 "%match%" SPRINT col4 ~%match%~ END
						PATCH_IF (exists = 1) AND (NOT FILE_CONTAINS_EVALUATED (~%SOURCE_FILE%~ ~^[^ ]+[ ]+%col2%[ ]+~)) BEGIN
							INNER_ACTION BEGIN
								APPEND ~%SOURCE_FILE%~ ~%col1% %col2% %col3% %col4%~
								PRINT ~%col1% %col2% %col3% %col4% appended to %SOURCE_FILESPEC%~
							END
						END
					END
			END
		END
	END
COPY_EXISTING ~%SOURCE_FILE%~ ~override~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// INTERDIA.2DA, BGBANTER.2DA, BDBANTER.2DA         \\\\\
/////                                                  \\\\\

ACTION_IF (FILE_EXISTS ~EET/temp/2da/BDBANTER.2DA~) BEGIN
	COPY + ~EET/temp/2da/BDBANTER.2DA~ ~EET/temp/2da~
		PRETTY_PRINT_2DA
		COUNT_2DA_ROWS 2 "cntrow"
		FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
			READ_2DA_ENTRY cnt 0 2 "col1"
			SPRINT match ~%col1%~ SPRINT res ~dv~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
			READ_2DA_ENTRY cnt 1 2 "col2"
			SPRINT match ~%col2%~ SPRINT res ~dlg~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col2%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 1 2 "%match%" SPRINT col2 ~%match%~ END
			//READ_2DA_ENTRY cnt 2 2 "col3"
			//SPRINT match ~%col3%~ SPRINT res ~dlg~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col3%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 2 2 "%match%" SPRINT col3 ~%match%~ END
		END
		PRETTY_PRINT_2DA
END ELSE BEGIN
<<<<<<<< .../BDBANTER.2DA
2DA      V1.0
NONE
         FILE
>>>>>>>>
	COPY + ~.../BDBANTER.2DA~ ~EET/temp/2da~
END

COPY + ~EET/temp/2da/BGBANTER.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 2 "cntrow"
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 2 "col1"
		SPRINT match ~%col1%~ SPRINT res ~dv~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 2 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 2 "col2"
		SPRINT match ~%col2%~ SPRINT res ~dlg~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col2%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 1 2 "%match%" SPRINT col2 ~%match%~ END
		//READ_2DA_ENTRY cnt 2 2 "col3"
		//SPRINT match ~%col3%~ SPRINT res ~dlg~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col3%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 2 2 "%match%" SPRINT col3 ~%match%~ END
		PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~EET/temp/2da/BDBANTER.2DA~ ~^[ %TAB%]*%col1%[ %TAB%]~)) BEGIN
			INNER_ACTION BEGIN
				//PRINT ~Patching BDBANTER.2DA: %dv% ***~
				APPEND_OUTER + ~EET/temp/2da/BDBANTER.2DA~ ~%col1% ***~
			END
		END
	END
	PRETTY_PRINT_2DA
COPY + ~EET/temp/2da/BDBANTER.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// NPCLEVEL.2DA, BGNPCLVL.2DA, NPCLVLDS.2DA         \\\\\
/////                                                  \\\\\

COPY_EXISTING ~NPCLEVEL.2DA~ ~override~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~^Imoen2.+[%newline%]*~ ~~
	REPLACE_TEXTUALLY ~^Imoen ~ ~Imoen2 ~
	PRETTY_PRINT_2DA
BUT_ONLY

COPY + ~EET/temp/2da/BGNPCLVL.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~^Imoen ~ ~Imoen2 ~
	REPLACE_TEXTUALLY ~ QUAYLE ~ ~QUAYLE_ ~
	REPLACE_TEXTUALLY ~ XAN ~ ~ XAN_ ~
	REPLACE_TEXTUALLY ~ XZAR ~ ~ XZAR_ ~
	PRETTY_PRINT_2DA

COPY + ~EET/temp/2da/NPCLVLDS.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~^Imoen ~ ~Imoen2 ~
	REPLACE_TEXTUALLY ~Imoen6~ ~Imoen6_~
	REPLACE_TEXTUALLY ~Viconi6~ ~Viconi6_~
	REPLACE_TEXTUALLY ~Edwin7~ ~Edwin7_~
	REPLACE_TEXTUALLY ~Jaheir7~ ~Jaheir7_~
	REPLACE_TEXTUALLY ~Minsc7~ ~Minsc7_~
	PRETTY_PRINT_2DA

/////                                                  \\\\\
///// PDIALOG.2DA, BGDIALOG.2DA, BDDIALOG.2DA          \\\\\
/////                                                  \\\\\

COPY_EXISTING ~PDIALOG.2DA~ ~override~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~^Imoen .*[%newline%]*~ ~~
	REPLACE_TEXTUALLY ~^XAN[ ]+TTXANP ~ ~TTXAN TTXANP ~
	PRETTY_PRINT_2DA
BUT_ONLY

COPY + ~EET/temp/2da/BGDIALOG.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	PATCH_FOR_EACH var IN BDRASAAD BDMINSC BDDYNAHE BDKHALID BDJAHEIR BDVICONI BDEDWIN BDNEERA BDDORN BDBAELOT BDVOGHIL BDMKHIIN CORWIN BDCLARA BDSAFANA BDGLINT BDCAELAR BDIMOEN BEGIN
		REPLACE_TEXTUALLY ~^%var% .*[%newline%]*~ ~~
	END
	COUNT_2DA_ROWS 4 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 4 "col1"
		SPRINT match ~%col1%~ SPRINT res ~dv~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col1%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 0 4 "%match%" SPRINT col1 ~%match%~ END
		READ_2DA_ENTRY cnt 1 4 "col2"
		SPRINT match ~%col2%~ SPRINT res ~dlg~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col2%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 1 4 "%match%" SPRINT col2 ~%match%~ END
		READ_2DA_ENTRY cnt 2 4 "col3"
		SPRINT match ~%col3%~ SPRINT res ~dlg~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col3%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 2 4 "%match%" SPRINT col3 ~%match%~ END
		READ_2DA_ENTRY cnt 3 4 "col4"
		SPRINT match ~%col4%~ SPRINT res ~bcs~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col4%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 3 4 "%match%" SPRINT col4 ~%match%~ END
		//READ_2DA_ENTRY cnt 4 4 "col5"
		//SPRINT match ~%col5%~ SPRINT res ~dlg~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col5%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 4 4 "%match%" SPRINT col5 ~%match%~ END
		//READ_2DA_ENTRY cnt 5 4 "col6"
		//SPRINT match ~%col6%~ SPRINT res ~dlg~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col6%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 5 4 "%match%" SPRINT col6 ~%match%~ END
		//READ_2DA_ENTRY cnt 6 4 "col7"
		//SPRINT match ~%col7%~ SPRINT res ~bcs~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col7%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 6 4 "%match%" SPRINT col7 ~%match%~ END
		//READ_2DA_ENTRY cnt 7 4 "col8"
		//SPRINT match ~%col8%~ SPRINT res ~bcs~ LPM EET_PCU_outer_res PATCH_IF (NOT ~%col8%~ STRING_EQUAL_CASE ~%match%~) BEGIN SET_2DA_ENTRY cnt 7 4 "%match%" SPRINT col8 ~%match%~ END
	END
	PRETTY_PRINT_2DA

//only temporary to prevent EET_end.tp2 from appending BDIMOEN.DLG to IMOEN2J.DLG
COPY + ~EET/temp/2da/BDDIALOG.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~^IMOEN ~ ~IMOEN_ ~
	PRETTY_PRINT_2DA

/////                                                  \\\\\
///// STARTARE.2DA, BGSTARTA.2DA, SODSTRTA.2DA         \\\\\
/////                                                  \\\\\

APPEND ~STARTARE.2DA~ ~START_MP_XP_CAP 8000000~ UNLESS ~START_MP_XP_CAP~
COPY_EXISTING ~STARTARE.2DA~ ~override~
	REPLACE_TEXTUALLY ~AR0015~ ~TU0015~
	REPLACE_TEXTUALLY ~START_MP_XP_CAP[ %TAB%]+[0-9]+$~ ~START_MP_XP_CAP 8000000~
	PRETTY_PRINT_2DA
BUT_ONLY

APPEND_OUTER ~EET/temp/2da/BGSTARTA.2DA~ ~START_MP_XP_CAP 8000000~ UNLESS ~START_MP_XP_CAP~
COPY + ~EET/temp/2da/BGSTARTA.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~START_AREA[ %TAB%]+AR2600$~ ~START_AREA BG2600~
	REPLACE_TEXTUALLY ~START_XP[ %TAB%]+[0-9]+$~ ~START_XP 0~
	REPLACE_TEXTUALLY ~START_XP_CAP[ %TAB%]+[0-9]+$~ ~START_XP_CAP 8000000~ //~START_XP_CAP 161000~
	REPLACE_TEXTUALLY ~START_MP_XP_CAP[ %TAB%]+[0-9]+$~ ~START_MP_XP_CAP 8000000~
	PRETTY_PRINT_2DA

COPY + ~EET/temp/2da/SODSTRTA.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~START_XP_CAP[ %TAB%]+[0-9]+$~ ~START_XP_CAP 8000000~ //~START_XP_CAP 500000~
	REPLACE_TEXTUALLY ~START_MP_XP_CAP[ %TAB%]+[0-9]+$~ ~START_MP_XP_CAP 8000000~ //~START_MP_XP_CAP 161000~
	PRETTY_PRINT_2DA

/////                                                  \\\\\
///// TBPPARTY.2DA, TBPPART_.2DA                       \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/2da/TBPPART_.2DA~ ~EET/temp/2da~
	REPLACE_TEXTUALLY ~BPARTY01~ ~BPARTY1_~
	REPLACE_TEXTUALLY ~BPARTY02~ ~BPARTY2_~
	REPLACE_TEXTUALLY ~BPARTY03~ ~BPARTY3_~
	REPLACE_TEXTUALLY ~BPARTY04~ ~BPARTY4_~
	REPLACE_TEXTUALLY ~BPARTY05~ ~BPARTY5_~
	REPLACE_TEXTUALLY ~BPARTY06~ ~BPARTY6_~
BUT_ONLY

/////                                                  \\\\\
///// CLASTEXT.2DA, BGCLATXT.2DA, SODCLTXT.2DA         \\\\\
/////                                                  \\\\\

COPY_EXISTING ~CLASTEXT.2DA~ ~override~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~^\(GRIZZLY_BEAR[ ]+[-0-9]+[ ]+[-0-9]+[ ]+[-0-9]+[ ]+[-0-9]+[ ]+[-0-9]+[ ]+[-0-9]+[ ]+[-0-9]+\)$~ ~\1 -1 -1~
	PRETTY_PRINT_2DA
BUT_ONLY

COPY + ~EET/temp/2da/BGCLATXT.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~^FERALAN ~ ~ARCHER ~
	REPLACE_TEXTUALLY ~^FALLEN_FERALAN ~ ~FALLEN_ARCHER ~
	REPLACE_TEXTUALLY ~^WILDMAGE ~ ~WILD_MAGE ~
	REPLACE_EVALUATE CASE_INSENSITIVE ~^\(FALLEN_BLACKGUARD .+\)$~ BEGIN
		PATCH_IF (VARIABLE_IS_SET fallen_blackguard) BEGIN
			SPRINT MATCH1 ~~
		END
		SET fallen_blackguard = 1
	END ~%MATCH1%~
	COUNT_2DA_ROWS 9 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		PATCH_FOR_EACH cnt2 IN 3 4 5 6 8 BEGIN
			READ_2DA_ENTRY cnt cnt2 9 "strref"
			PATCH_IF ((strref > 0) AND (strref <= StrRef_cutoff)) BEGIN
				SET strref = RESOLVE_STR_REF ((AT strref))
				SET_2DA_ENTRY cnt cnt2 9 "strref"
			END
		END
	END
	PRETTY_PRINT_2DA

COPY + ~EET/temp/2da/SODCLTXT.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~^WILDMAGE ~ ~WILD_MAGE ~
	COUNT_2DA_ROWS 9 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		PATCH_FOR_EACH cnt2 IN 3 4 5 6 8 BEGIN
			READ_2DA_ENTRY cnt cnt2 9 "strref"
			PATCH_IF ((strref > 0) AND (strref <= StrRef_cutoff)) BEGIN
				SET strref = RESOLVE_STR_REF ((AT strref))
				SET_2DA_ENTRY cnt cnt2 9 "strref"
			END
		END
	END
	PRETTY_PRINT_2DA

/////                                                  \\\\\
///// RACETEXT.2DA, BGRACTXT.2DA, SODRACE.2DA          \\\\\
/////                                                  \\\\\

COPY_EXISTING ~RACETEXT.2DA~ ~override~
	REPLACE 31709 @31709
BUT_ONLY

COPY + ~EET/temp/2da/BGRACTXT.2DA~ ~EET/temp/2da~
	~EET/temp/2da/SODRACE.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	COUNT_2DA_ROWS 6 "cntrow"
	FOR (cnt = 0; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		FOR (cnt2 = 2; cnt2 < 6; cnt2 = cnt2 + 1) BEGIN
			READ_2DA_ENTRY cnt cnt2 6 "strref"
			PATCH_IF ((strref > 0) AND (strref <= StrRef_cutoff)) BEGIN
				SET strref = RESOLVE_STR_REF ((AT strref))
				SET_2DA_ENTRY cnt cnt2 6 "strref"
			END
		END
	END
	PRETTY_PRINT_2DA

/////                                                  \\\\\
///// INTERACT.2DA, SODINTER.2DA                       \\\\\
/////                                                  \\\\\

COPY + ~EET/temp/2da/INTERACT.2DA~ ~EET/temp/2da~
	~EET/temp/2da/SODINTER.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~IMOEN~ ~IMOEN2~
	PRETTY_PRINT_2DA

/////                                                  \\\\\
///// REPUTATI.2DA, SODREPUT.2DA                       \\\\\
/////                                                  \\\\\

COPY_EXISTING ~REPUTATI.2DA~ ~override~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~$~ ~ ~
	REPLACE_TEXTUALLY ~^ $~ ~~
	COUNT_2DA_ROWS 3 "cntrow"
BUT_ONLY

COPY - ~EET/temp/array/REPUTATI.2DA~ ~EET/temp/array~
	~EET/temp/2da/SODREPUT.2DA~ ~EET/temp/2da~
	PRETTY_PRINT_2DA
	REPLACE_TEXTUALLY ~$~ ~ ~
	COUNT_2DA_COLS "cntcol"
	FOR (cnt = 1; cnt < (cntcol - 1); cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY 0 cnt 3 "name"
		PATCH_IF (NOT FILE_CONTAINS_EVALUATED (~REPUTATI.2DA~ ~[ ]%name%[ ]~)) BEGIN
			PATCH_PRINT ~Patching REPUTATI.2DA: %name%~
			SET updated = 0
			SPRINT col ~dummy_entry dummy_entry %name%~
			FOR (cnt2 = 1; cnt2 < cntrow; cnt2 = cnt2 + 1) BEGIN
				READ_2DA_ENTRY cnt2 (cnt + 1) 3 "add"
				SPRINT col ~%col% %add%~
			END
			INNER_ACTION BEGIN
				APPEND_COL ~REPUTATI.2DA~ ~%col%~
				OUTER_PATCH_SAVE ~col~ ~%col%~ BEGIN //for easier DEBUG reading
					REPLACE_TEXTUALLY ~dummy_entry ~ ~~
					REPLACE_TEXTUALLY ~[ ]+~ ~ ~
				END
				PRINT ~%col% column appended to %SOURCE_FILE%~
			END
		END
	END
COPY_EXISTING ~REPUTATI.2DA~ ~override~
	REPLACE_TEXTUALLY ~dummy_entry~ ~~
	PRETTY_PRINT_2DA
BUT_ONLY

/////                                                  \\\\\
///// SAVENAME.2DA                                     \\\\\
/////                                                  \\\\\

OUTER_SPRINT savename ~~
OUTER_SET cnt = 24
OUTER_FOR (i=4000200; i<=4000214; i=i+1) BEGIN
	OUTER_SET cnt = cnt + 1
	OUTER_SET strref = RESOLVE_STR_REF ((AT i))
	OUTER_SPRINT savename ~%savename%%cnt% %strref% %cnt% 1%LNL%~
END
APPEND ~SAVENAME.2DA~ ~%savename%~
COPY_EXISTING ~SAVENAME.2DA~ ~override~
	SET_2DA_ENTRY 1 3 4 "1" //4
	SET_2DA_ENTRY 4 3 4 "1" //4
	PRETTY_PRINT_2DA
BUT_ONLY
