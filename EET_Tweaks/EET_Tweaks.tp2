BACKUP ~EET_Tweaks/backup~
AUTHOR ~K4thos (swit)~
VERSION ~beta 0.1~
README ~EET_Tweaks/help/[%LANGUAGE%]readme.htm~ ~EET_Tweaks/help/[en_US]readme.htm~
ASK_EVERY_COMPONENT
//AUTO_TRA ~EET_Tweaks/lang/%s~//%~

ALWAYS
	INCLUDE ~EET_Tweaks/lib/always.tph~
END

LANGUAGE ~English~
	~en_US~
	~EET_Tweaks/lang/en_US/prompts.tra~
	~EET_Tweaks/lang/en_US/setup.tra~
LANGUAGE ~Polski (Polish)~
	~pl_PL~
	~EET_Tweaks/lang/pl_PL/prompts.tra~
	~EET_Tweaks/lang/pl_PL/setup.tra~

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 0: Teleport spell                                \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN ~Teleport spell~
DESIGNATED 0
REQUIRE_PREDICATE GAME_IS ~eet~ ~This component is compatible only with EET.~

LOAD_TRA ~EET_Tweaks/lang/%LANGUAGE%/0.tra~

COMPILE ~EET_Tweaks/0/K#TELSPL.d~

//modify both scripts and dialogue
<<<<<<<< EET_Tweaks-inlined/0/K#TELCUT.baf
IF
  True()
THEN
  RESPONSE #100
    CutSceneId(Player1)
    CreateVisualEffectObject("SPDIMNDR",Player1)
    CreateVisualEffectObject("SPDIMNDR",Player2)
    CreateVisualEffectObject("SPDIMNDR",Player3)
    CreateVisualEffectObject("SPDIMNDR",Player4)
    CreateVisualEffectObject("SPDIMNDR",Player5)
    CreateVisualEffectObject("SPDIMNDR",Player6)
    Wait(3)
    FadeToColor([20.0],0)
    Wait(1)
    LeaveAreaLUAPanic("%area%","",[%Xcoordinate%.%Ycoordinate%],%Orientation%)
    LeaveAreaLUA("%area%","",[%Xcoordinate%.%Ycoordinate%],%Orientation%)
    ActionOverride(Player2,LeaveAreaLUA("%area%","",[%Xcoordinate%.%Ycoordinate%],%Orientation%))
    ActionOverride(Player3,LeaveAreaLUA("%area%","",[%Xcoordinate%.%Ycoordinate%],%Orientation%))
    ActionOverride(Player4,LeaveAreaLUA("%area%","",[%Xcoordinate%.%Ycoordinate%],%Orientation%))
    ActionOverride(Player5,LeaveAreaLUA("%area%","",[%Xcoordinate%.%Ycoordinate%],%Orientation%))
    ActionOverride(Player6,LeaveAreaLUA("%area%","",[%Xcoordinate%.%Ycoordinate%],%Orientation%))
    MultiPlayerSync()
    Wait(1)
    FadeFromColor([20.0],0)
    CreateVisualEffectObject("SPDIMNDR",Myself)
    ActionOverride(Player2,CreateVisualEffectObject("SPDIMNDR",Myself))
    ActionOverride(Player3,CreateVisualEffectObject("SPDIMNDR",Myself))
    ActionOverride(Player4,CreateVisualEffectObject("SPDIMNDR",Myself))
    ActionOverride(Player5,CreateVisualEffectObject("SPDIMNDR",Myself))
    ActionOverride(Player6,CreateVisualEffectObject("SPDIMNDR",Myself))
    Wait(3)
    EndCutSceneMode()
END
>>>>>>>>

<<<<<<<< EET_Tweaks-inlined/0/area-et.baf
IF
  Global("K#BeenIn%area%","GLOBAL",0)
  //AreaCheck("%area%")
THEN
  RESPONSE #100
    SetGlobal("K#BeenIn%area%","GLOBAL",1)
    Continue()
END
>>>>>>>>

<<<<<<<< EET_Tweaks-inlined/0/K#TELSPL-eb.d
EXTEND_BOTTOM K#TELSPL 0
	IF ~OR(2) Global("K#BeenIn%area%","GLOBAL",1) Global("K#DebugMode","GLOBAL",1)~ THEN REPLY ~%string%~ DO ~ClearAllActions()
StartCutScene("K#%area%")
DestroySelf()~ EXIT
END
>>>>>>>>

COPY - ~EET_Tweaks/0/EET-teleport.tbl~ ~EET_Tweaks/0/EET-teleport.tbl~
	COUNT_2DA_ROWS 4 cntrow
	FOR (cnt = 1; cnt < "%cntrow%"; cnt = cnt + 1) BEGIN
		SET update = 0
		READ_2DA_ENTRY cnt 0 4 "area"
		READ_2DA_ENTRY cnt 1 4 "Xcoordinate"
		READ_2DA_ENTRY cnt 2 4 "Ycoordinate"
		READ_2DA_ENTRY cnt 3 4 "Orientation"
		INNER_ACTION BEGIN
			ACTION_IF (("%area%" STRING_EQUAL_CASE "%area_last%")=0) BEGIN
				EXTEND_TOP ~%area%.BCS~ ~EET_Tweaks-inlined/0/area-et.baf~ EVALUATE_BUFFER
				COPY - ~EET_Tweaks-inlined/0/K#TELCUT.baf~ ~EET_Tweaks-inlined/0/K#%area%.baf~
				COMPILE ~EET_Tweaks-inlined/0/K#%area%.baf~ EVALUATE_BUFFER
				COPY - ~%tra_path%/%LANGUAGE%/areas.tra~ ~%tra_path%/%LANGUAGE%/areas.tra~
					REPLACE_TEXTUALLY ~%slash%%slash%.*~ ~~
					COUNT_2DA_ROWS 3 cntrow2
					FOR (cnt2 = 0; cnt2 < "%cntrow2%"; cnt2 = cnt2 + 1) BEGIN
						READ_2DA_ENTRY cnt2 0 3 "compareWith"
						READ_2DA_ENTRY cnt2 2 3 "string"
						PATCH_IF (("@%area%" STRING_EQUAL_CASE "%compareWith%")=1) BEGIN
							INNER_PATCH_SAVE string "%string%" BEGIN
								REPLACE_TEXTUALLY "###" " "
								REPLACE_TEXTUALLY ~"~ ~~ //"
								REPLACE_TEXTUALLY "~" ""
							END
							SET update = 1
							SET cnt2 = cntrow2
						END
					END
				ACTION_IF ("%update%" = 1) BEGIN 
					COMPILE ~EET_Tweaks-inlined/0/K#TELSPL-eb.d~ EVALUATE_BUFFER
				END ELSE BEGIN
					WARN ~Translation for %area% used in K#TELSPL.DLG not found.~
				END
			END
		END
		SPRINT ~area_last~ ~%area%~
	END

COPY ~EET_Tweaks/0/K#TELSPL.SPL~ ~override~
	SAY 0x8 @2000000
	SAY 0x50 @2000001

COPY ~EET_Tweaks/0/K#TELSPL.ITM~ ~override~
	SAY 0xc @2000000
	SAY 0x54 @2000001

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 1: Consistent NPC appearance                     \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN ~Consistent NPC appearance~
DESIGNATED 1
REQUIRE_PREDICATE GAME_IS ~eet bgt~ ~This component is compatible only with EET and BGT.~

OUTER_SET valid_answer = 0
OUTER_SET button = 0

OUTER_WHILE (valid_answer = 0) BEGIN
	ACTION_IF ("%button%" = 1) BEGIN //BG:EE
		OUTER_SET option = 0
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 2) BEGIN //BG2:EE
		OUTER_SET option = 1
		OUTER_SET valid_answer = 1
	END ELSE BEGIN
		PRINT ~Which game should be used as a portraits and colours base for NPCs that are joinable in both BG:EE and BG2:EE?
 1] BG:EE
 2] BG2:EE~
		ACTION_READLN ~button~
		ACTION_IF NOT (IS_AN_INT %button%) BEGIN
			OUTER_SET button = 0
		END
	END
END

INCLUDE ~EET_TWEAKS/lib/1.tph~

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 2: Consistent NPC voices                         \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN ~Consistent NPC voices~
DESIGNATED 2
REQUIRE_PREDICATE GAME_IS ~eet bgt~ ~This component is compatible only with EET and BGT.~
REQUIRE_PREDICATE ("%LANGUAGE%" STRING_EQUAL_CASE ~pl_PL~) ~This component is only for Polish language (unless someone will suggest changes for other languages in future).~

LOAD_TRA ~EET_Tweaks/lang/%LANGUAGE%/2.tra~

INCLUDE ~EET_TWEAKS/lib/2_%LANGUAGE%.tph~ //no point in bloating the main file, especially if there will be more languages added in future

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 3: Adjust BG:EE XP CAP                           \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN ~Adjust BG:EE XP CAP~
DESIGNATED 3
REQUIRE_PREDICATE GAME_IS ~eet~ ~This component is compatible only with EET.~

OUTER_SET valid_answer = 0
OUTER_SET button = 0
OUTER_SPRINT value ~dummy~

OUTER_WHILE (valid_answer = 0) BEGIN
	ACTION_IF ("%button%" = 1) BEGIN //89,000
		OUTER_SET value = 89000
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 2) BEGIN //161,000
		OUTER_SET value = 161000
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 3) BEGIN //custom value
		OUTER_WHILE NOT (IS_AN_INT %value%) OR (%value% < 1) BEGIN
			PRINT ~Type in the integer value for XP CAP:~
			ACTION_READLN ~value~
		END
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 4) BEGIN //disable
		OUTER_SET value = 100000000
		OUTER_SET valid_answer = 1
	END ELSE BEGIN
		PRINT ~What value should be used for BG:EE XP CAP?
 1]  89,000 - BG2:EE starting XP
 2] 161,000 - BG:EE XP CAP (default)
 3] custom value
 4] disable XP CAP~
		ACTION_READLN ~button~
		ACTION_IF NOT (IS_AN_INT %button%) BEGIN
			OUTER_SET button = 0
		END
	END
END

COPY_EXISTING ~BALDUR.BCS~ ~override~
	DECOMPILE_AND_PATCH BEGIN
		PATCH_FOR_EACH number IN 1 2 3 4 5 6 BEGIN
			SPRINT textToReplace ~GlobalLT("ENDOFBG1","GLOBAL",2)[%newline%]*XPGT(Player%number%,[0-9]+)[%newline%]*THEN[%newline%]*RESPONSE #100[%newline%]*ChangeStat(Player%number%,XP,[0-9]+,SET)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY ~%textToReplace%~ ~GlobalLT("ENDOFBG1","GLOBAL",2)
  XPGT(Player%number%,%value%)
THEN
  RESPONSE #100
    ChangeStat(Player%number%,XP,%value%,SET)~
			END ELSE BEGIN
				PATCH_WARN ~Warning: could not find EET XP CAP data in %SOURCE_FILESPEC%~
			END
		END
	END
BUT_ONLY

ACTION_IF (value = "100000000") BEGIN
	PRINT ~XP CAP has been disabled~
END ELSE BEGIN
	PRINT ~XP CAP set to %value%~
END

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 4: Adjust BG2:EE XP CAP                          \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN ~Adjust BG2:EE XP CAP~
DESIGNATED 4
REQUIRE_PREDICATE GAME_IS ~eet~ ~This component is compatible only with EET.~

OUTER_SET valid_answer = 0
OUTER_SET button = 0
OUTER_SPRINT value ~dummy~

OUTER_WHILE (valid_answer = 0) BEGIN
	ACTION_IF ("%button%" = 1) BEGIN //2,950,000
		OUTER_SET value = 2950000
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 2) BEGIN //8,000,000
		OUTER_SET value = 8000000
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 3) BEGIN //custom value
		OUTER_WHILE NOT (IS_AN_INT %value%) OR (%value% < 10) BEGIN
			PRINT ~Type in the integer value for XP CAP:~
			ACTION_READLN ~value~
		END
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 4) BEGIN //disable
		OUTER_SET value = "-1"
		OUTER_SET valid_answer = 1
	END ELSE BEGIN
		PRINT ~What value should be used for BG2:EE SoA XP CAP?
 1] 2,950,000 - BG2 without expansion XP CAP
 2] 8,000,000 - BG2:EE XP CAP (default)
 3] custom value
 4] disable XP CAP~
		ACTION_READLN ~button~
		ACTION_IF NOT (IS_AN_INT %button%) BEGIN
			OUTER_SET button = 0
		END
	END
END

COPY_EXISTING ~XPCAP.2DA~ ~override~
	REPLACE_TEXTUALLY ~[1-9][0-9]+~ ~%value%~ EVALUATE_BUFFER //numbers >=10 only, otherwise, it changes 2DA as well
	BUT_ONLY
COPY_EXISTING ~STARTARE.2DA~ ~override~
	REPLACE_TEXTUALLY ~START_XP_CAP[ 	]+[-0-9]+~ ~%value%~ EVALUATE_BUFFER
	BUT_ONLY

ACTION_IF (value = "-1") BEGIN
	PRINT ~XP CAP has been disabled~
END ELSE BEGIN
	PRINT ~XP CAP set to %value%~
END

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 5: Additional BG2:EE SoA XP CAP                  \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN ~Additional BG2:SoA XP CAP~
DESIGNATED 5
REQUIRE_PREDICATE GAME_IS ~eet~ ~This component is compatible only with EET.~

OUTER_SET valid_answer = 0
OUTER_SET button = 0
OUTER_SPRINT value ~dummy~

OUTER_WHILE (valid_answer = 0) BEGIN
	ACTION_IF ("%button%" = 1) BEGIN //2,500,000
		OUTER_SET value = 2500000
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 2) BEGIN //2,950,000
		OUTER_SET value = 2950000
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 3) BEGIN //custom value
		OUTER_WHILE NOT (IS_AN_INT %value%) OR (%value% < 1) BEGIN
			PRINT ~Type in the integer value for XP CAP:~
			ACTION_READLN ~value~
		END
		OUTER_SET valid_answer = 1
	END ELSE BEGIN
		PRINT ~What value should be used for BG2:EE SoA XP CAP?
 1] 2,500,000 - BG2:ToB starting XP for NPC
 2] 2,950,000 - BG2 without expansion XP CAP
 3] custom value~
		ACTION_READLN ~button~
		ACTION_IF NOT (IS_AN_INT %button%) BEGIN
			OUTER_SET button = 0
		END
	END
END

<<<<<<<< EET_Tweaks-inlined/6/baldur-eb.baf
IF
  GlobalLT("ENDOFBG2","GLOBAL",2)
  XPGT(Player%number%,%value%)
THEN
  RESPONSE #100
    ChangeStat(Player%number%,XP,%value%,SET)
    Continue()
END
>>>>>>>>

ACTION_FOR_EACH number IN 1 2 3 4 5 6 BEGIN
	EXTEND_BOTTOM ~BALDUR.BCS~ ~EET_Tweaks-inlined/6/baldur-eb.baf~ EVALUATE_BUFFER
END

PRINT ~XP CAP set to %value%~

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 6: Adjust XP for Traps, Spells and Lockpicking   \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN ~Adjust XP for Traps, Spells and Lockpicking~
DESIGNATED 6
REQUIRE_PREDICATE GAME_IS ~eet bg2ee~ ~This component is compatible only with EET and BG2:EE.~

OUTER_SET valid_answer = 0
OUTER_SET button = 0
OUTER_SPRINT value ~dummy~

OUTER_WHILE (valid_answer = 0) BEGIN
	ACTION_IF ("%button%" = 1) BEGIN //150%
		OUTER_SET value = 150
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 2) BEGIN //75%
		OUTER_SET value = 75
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 3) BEGIN //50%
		OUTER_SET value = 50
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 4) BEGIN //25%
		OUTER_SET value = 25
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 5) BEGIN //10%
		OUTER_SET value = 10
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 6) BEGIN //0%
		OUTER_SET value = 0
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 7) BEGIN //custom value
		OUTER_WHILE NOT (IS_AN_INT %value%) OR (%value% < 0) BEGIN
			PRINT ~Type in the integer percentage value:~
			ACTION_READLN ~value~
		END
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 8) BEGIN //BG1 (default)
		OUTER_SPRINT DISARM_TRAP ~DISARM_TRAP   10   10   10   10   10   17   17   17   17   17   27   27   27   27   27   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32   32~
		OUTER_SPRINT PICK_LOCK   ~PICK_LOCK     25   25   25   25   25   40   40   40   40   40   95   95   95   95   95   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15   15~
		OUTER_SPRINT LEARN_SPELL ~LEARN_SPELL   10   20   30   40   50   60   70   80   90   0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0~
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 9) BEGIN //BG2
		OUTER_SPRINT DISARM_TRAP ~DISARM_TRAP   1000 1000 1000 1000 1000 1750 1750 1750 1750 1750 2750 2750 2750 2750 2750 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250 3250~
		OUTER_SPRINT PICK_LOCK   ~PICK_LOCK     250  250  250  250  250  400  400  400  400  400  950  950  950  950  950  1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550 1550~
		OUTER_SPRINT LEARN_SPELL ~LEARN_SPELL   1000 2000 3000 4000 5000 6000 7000 8000 9000 0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0~
		OUTER_SET valid_answer = 1
	END ELSE BEGIN
		PRINT ~How would you like to do adjust XP for Disarming Traps, Lockpicking and Spell learning?
 1] Use XP values from BG1:EE (default)
 2] Use XP values from BG2:EE
 3] Disable XP gain for these actions~
		ACTION_READLN ~button~
		ACTION_IF NOT (IS_AN_INT %button%) BEGIN
			OUTER_SET button = 0
		END
	END
END

COPY_EXISTING ~XPBONUS.2DA~ ~override~
	PATCH_IF ("%button%" <= 7) BEGIN
		COUNT_2DA_COLS "cntcol"
		COUNT_2DA_ROWS "%cntcol%" "cntrows"
		FOR (cnt = 0; cnt < "%cntrows%"; cnt = cnt + 1) BEGIN
			FOR (cnt2 = 1; cnt2 < "%cntcol%"; cnt2 = cnt2 + 1) BEGIN
				READ_2DA_ENTRY cnt cnt2 "%cntcol%" "XP_value"
				PATCH_IF ("%XP_value%" > 0) BEGIN
					SET XP_value = ("%XP_value%" * "%value%" / 100)
					PATCH_IF ("%XP_value%" < 1) BEGIN
						SET XP_value = 1
					END
					SET_2DA_ENTRY cnt cnt2 cntcol ~%XP_value%~
				END
			END
		END
	END ELSE BEGIN
		REPLACE_TEXTUALLY ~DISARM_TRAP.+$~ ~%DISARM_TRAP%~
		REPLACE_TEXTUALLY ~PICK_LOCK.+$~   ~%PICK_LOCK%~
		REPLACE_TEXTUALLY ~LEARN_SPELL.+$~ ~%LEARN_SPELL%~
	END
	PRETTY_PRINT_2DA
BUT_ONLY

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 7: Adjust XP for killing creatures               \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN ~Adjust XP for killing creatures~
DESIGNATED 7
REQUIRE_PREDICATE GAME_IS ~eet bg2ee~ ~This component is compatible only with EET and BG2:EE.~

OUTER_SET valid_answer = 0
OUTER_SET button = 0
OUTER_SPRINT value ~dummy~

OUTER_WHILE (valid_answer = 0) BEGIN
	ACTION_IF ("%button%" = 1) BEGIN //150%
		OUTER_SET value = 150
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 2) BEGIN //75%
		OUTER_SET value = 75
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 3) BEGIN //50%
		OUTER_SET value = 50
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 4) BEGIN //25%
		OUTER_SET value = 25
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 5) BEGIN //10%
		OUTER_SET value = 10
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 6) BEGIN //0%
		OUTER_SET value = 0
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 7) BEGIN //custom value
		OUTER_WHILE NOT (IS_AN_INT %value%) OR (%value% < 0) BEGIN
			PRINT ~Type in the integer percentage value:~
			ACTION_READLN ~value~
		END
		OUTER_SET valid_answer = 1
	END ELSE BEGIN
		PRINT ~Adjust XP for killing creatures:
 1] Increase to 150%
 2] Decrease to 75%
 3] Decrease to 50%
 4] Decrease to 25%
 5] Decrease to 10%
 6] No XP for killing creatures
 7] custom value~//%~
		ACTION_READLN ~button~
		ACTION_IF NOT (IS_AN_INT %button%) BEGIN
			OUTER_SET button = 0
		END
	END
END

COPY_EXISTING_REGEXP GLOB ~.+\.CRE~ ~override~
	READ_LONG 0x14 "XP_value"
	PATCH_IF ("%XP_value%" > 0) BEGIN
		PATCH_IF ("%value%" > 0) BEGIN
			SET XP_value = ("%XP_value%" * "%value%" / 100)
			PATCH_IF ("%XP_value%" < 1) BEGIN
				SET XP_value = 1
			END
			WRITE_LONG 0x14 "%XP_value%"
		END ELSE BEGIN
			WRITE_LONG 0x14 0
		END
	END
BUT_ONLY

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 8: Adjust XP for quests                          \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN ~Adjust XP for quests~
DESIGNATED 8
REQUIRE_PREDICATE GAME_IS ~eet bg2ee~ ~This component is compatible only with EET and BG2:EE.~

OUTER_SET valid_answer = 0
OUTER_SET button = 0
OUTER_SPRINT value ~dummy~

OUTER_WHILE (valid_answer = 0) BEGIN
	ACTION_IF ("%button%" = 1) BEGIN //150%
		OUTER_SET value = 150
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 2) BEGIN //75%
		OUTER_SET value = 75
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 3) BEGIN //50%
		OUTER_SET value = 50
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 4) BEGIN //25%
		OUTER_SET value = 25
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 5) BEGIN //10%
		OUTER_SET value = 10
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 6) BEGIN //0%
		OUTER_SET value = 0
		OUTER_SET valid_answer = 1
	END ELSE ACTION_IF ("%button%" = 7) BEGIN //custom value
		OUTER_WHILE NOT (IS_AN_INT %value%) OR (%value% < 0) BEGIN
			PRINT ~Type in the integer percentage value:~
			ACTION_READLN ~value~
		END
		OUTER_SET valid_answer = 1
	END ELSE BEGIN
		PRINT ~Adjust XP for quests:
 1] Increase to 150%
 2] Decrease to 75%
 3] Decrease to 50%
 4] Decrease to 25%
 5] Decrease to 10%
 6] No XP for quests
 7] custom value~//%~
		ACTION_READLN ~button~
		ACTION_IF NOT (IS_AN_INT %button%) BEGIN
			OUTER_SET button = 0
		END
	END
END

COPY_EXISTING ~XPLIST.2da~ ~override~
	COUNT_2DA_COLS "cntcol"
	COUNT_2DA_ROWS "%cntcol%" "cntrows"
	FOR (cnt = 0; cnt < "%cntrows%"; cnt = cnt + 1) BEGIN
		READ_2DA_ENTRY cnt 0 "%cntcol%" "name"
		PATCH_PRINT ~Patching '%name%' XPLIST.2da row~
		FOR (cnt2 = 2; cnt2 < "%cntcol%"; cnt2 = cnt2 + 1) BEGIN
			READ_2DA_ENTRY cnt cnt2 "%cntcol%" "XP_value"
			SET add_prefix = 0
			PATCH_IF NOT (IS_AN_INT %XP_value%) BEGIN
				INNER_PATCH_SAVE ~XP_value~ ~%XP_value%~ BEGIN
					REPLACE_TEXTUALLY ~P_~ ~~
				END
				SET add_prefix = 1
			END
			PATCH_IF ("%XP_value%" > 0) BEGIN
				SET XP_value = ("%XP_value%" * "%value%" / 100)
				PATCH_IF ("%XP_value%" < 1) BEGIN
					SET XP_value = 1
				END
				PATCH_IF ("%add_prefix%" = 1) BEGIN
					INNER_PATCH_SAVE ~XP_value~ ~%XP_value%~ BEGIN
						REPLACE_TEXTUALLY ~^~ ~P_~
					END
				END
				SET_2DA_ENTRY cnt cnt2 cntcol ~%XP_value%~
			END
		END
	END
	PRETTY_PRINT_2DA
BUT_ONLY

ACTION_FOR_EACH ext IN BCS DLG BEGIN
	COPY_EXISTING_REGEXP GLOB ~.+\.%ext%~ ~override~
		DECOMPILE_AND_PATCH BEGIN
			REPLACE_EVALUATE ~AddexperienceParty(\([1-9][0-9]*\))~
				BEGIN
					SET "XP_value" = "%MATCH1%"
					PATCH_IF ("%XP_value%" > 0) BEGIN
						SET XP_value = ("%XP_value%" * "%value%" / 100)
						PATCH_IF ("%XP_value%" < 1) BEGIN
							SET XP_value = 1
						END
					END
				END
				~AddexperienceParty(%XP_value%)~
			REPLACE_EVALUATE ~AddXPObject(\(.*\),\([1-9][0-9]*\))~
				BEGIN
					SET "XP_value" = "%MATCH2%"
					PATCH_IF ("%XP_value%" > 0) BEGIN
					SET XP_value = ("%XP_value%" * "%value%" / 100)
						PATCH_IF ("%XP_value%" < 1) BEGIN
							SET XP_value = 1
						END
					END
				END
				~AddXPObject(%MATCH1%,%XP_value%)~
			REPLACE_EVALUATE ~ChangeStat(\(.*\),XP,\([1-9][0-9]*\),ADD)~
				BEGIN
					SET "XP_value" = "%MATCH2%"
					PATCH_IF ("%XP_value%" > 0) BEGIN
					SET XP_value = ("%XP_value%" * "%value%" / 100)
						PATCH_IF ("%XP_value%" < 1) BEGIN
							SET XP_value = 1
						END
					END
				END
				~ChangeStat(%MATCH1%,XP,%XP_value%,ADD)~
		END
	BUT_ONLY
END

COPY_EXISTING_REGEXP GLOB ~.+\.SPL~ ~override~
	READ_LONG 0x64 "abil_off" ELSE 0
	READ_SHORT 0x68 "abil_num" ELSE 0
	READ_LONG 0x6a "fx_off" ELSE 0
	FOR (index = 0 ; index < abil_num ; index = index + 1) BEGIN
		READ_SHORT ("%abil_off%" + 0x1e + (0x28 * "%index%")) "abil_fx_num"
		READ_SHORT ("%abil_off%" + 0x20 + (0x28 * "%index%")) "abil_fx_idx"
		FOR (index2 = 0 ; index2 < abil_fx_num ; index2 = index2 + 1) BEGIN
			READ_SHORT ("%fx_off%" + (0x30 * ("%abil_fx_idx%" + "%index2%"))) "opcode"
			PATCH_IF ("%opcode%" = 104) BEGIN //XP bonus
				SET "offset" = ("%fx_off%" + 0x + (0x30 * ("%abil_fx_idx%" + "%index2%")))
				READ_LONG offset "XP_value" //Value
				READ_ offset "XP_type" //Modifier type
				PATCH_IF ((XP_value > 0) AND (XP_type = 0)) BEGIN
					SET XP_value = ("%XP_value%" * "%value%" / 100)
					PATCH_IF ("%XP_value%" < 1) BEGIN
						SET XP_value = 1
					END
					WRITE_LONG offset "%XP_value%"
				END
			END
		END
	END
	READ_SHORT 0x70 "fx_num" ELSE 0
	FOR (index3 = 0 ; index3 < fx_num ; index3 = index3 + 1) BEGIN
		READ_SHORT ("%fx_off%" + (0x30 * "%index3%")) "opcode"
		PATCH_IF ("%opcode%" = 104) BEGIN //XP bonus
			SET "offset" = ("%fx_off%" + 0x + (0x30 * "%index3%"))
			READ_LONG offset "XP_value" //Value
			READ_ offset "XP_type" //Modifier type
			PATCH_IF ((XP_value > 0) AND (XP_type = 0)) BEGIN
				SET XP_value = ("%XP_value%" * "%value%" / 100)
				PATCH_IF ("%XP_value%" < 1) BEGIN
					SET XP_value = 1
				END
				WRITE_LONG offset "%XP_value%"
			END
		END
	END
BUT_ONLY

COPY_EXISTING_REGEXP GLOB ~.+\.ITM~ ~override~
	READ_LONG 0x64 "abil_off" ELSE 0
	READ_SHORT 0x68 "abil_num" ELSE 0
	READ_LONG 0x6a "fx_off" ELSE 0
	FOR (index = 0 ; index < abil_num ; index = index + 1) BEGIN
		READ_SHORT ("%abil_off%" + 0x1e + (0x38 * "%index%")) "abil_fx_num"
		READ_SHORT ("%abil_off%" + 0x20 + (0x38 * "%index%")) "abil_fx_idx"
		FOR (index2 = 0 ; index2 < abil_fx_num ; index2 = index2 + 1) BEGIN
			READ_SHORT ("%fx_off%" + (0x30 * ("%abil_fx_idx%" + "%index2%"))) "opcode"
			PATCH_IF ("%opcode%" = 104) BEGIN //XP bonus
				SET "offset" = ("%fx_off%" + 0x + (0x30 * ("%abil_fx_idx%" + "%index2%")))
				READ_LONG offset "XP_value" //Value
				READ_ offset "XP_type" //Modifier type
				PATCH_IF ((XP_value > 0) AND (XP_type = 0)) BEGIN
					SET XP_value = ("%XP_value%" * "%value%" / 100)
					PATCH_IF ("%XP_value%" < 1) BEGIN
						SET XP_value = 1
					END
					WRITE_LONG offset "%XP_value%"
				END
			END
		END
	END
	READ_SHORT 0x70 "fx_num" ELSE 0
	FOR (index3 = 0 ; index3 < fx_num ; index3 = index3 + 1) BEGIN
		READ_SHORT ("%fx_off%" + (0x30 * "%index3%")) "opcode"
		PATCH_IF ("%opcode%" = 104) BEGIN //XP bonus
			SET "offset" = ("%fx_off%" + 0x + (0x30 * "%index3%"))
			READ_LONG offset "XP_value" //Value
			READ_ offset "XP_type" //Modifier type
			PATCH_IF ((XP_value > 0) AND (XP_type = 0)) BEGIN
				SET XP_value = ("%XP_value%" * "%value%" / 100)
				PATCH_IF ("%XP_value%" < 1) BEGIN
					SET XP_value = 1
				END
				WRITE_LONG offset "%XP_value%"
			END
		END
	END
BUT_ONLY

COPY_EXISTING_REGEXP GLOB ~.+\.EFF~ ~override~
	READ_LONG 0x10 "opcode"
	PATCH_IF ("%opcode%" = 104) BEGIN //XP bonus
		READ_LONG 0x "XP_value" //Value
		READ_ 0x "XP_type" //Modifier type
		PATCH_IF ((XP_value > 0) AND (XP_type = 0)) BEGIN
			SET XP_value = ("%XP_value%" * "%value%" / 100)
			PATCH_IF ("%XP_value%" < 1) BEGIN
				SET XP_value = 1
			END
			WRITE_LONG offset "%XP_value%"
		END
	END
BUT_ONLY

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 9: 3E Thief Sneak Attack                         \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN ~3E Thief Sneak Attack~
DESIGNATED 9
REQUIRE_PREDICATE GAME_IS ~eet bg2ee~ ~This component is compatible only with EET and BG2:EE.~

LOAD_TRA ~EET_Tweaks/lang/%LANGUAGE%/9.tra~

ACTION_IF (FILE_EXISTS ~%USER_DIRECTORY%/Baldur.ini~) BEGIN
	COPY ~%USER_DIRECTORY%/Baldur.ini~ ~%USER_DIRECTORY%~
		SPRINT textToReplace ~'3E Thief Sneak Attack'~
		COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
		PATCH_IF (num_matches > 0) BEGIN
			REPLACE_TEXTUALLY ~\(%textToReplace%,[ 	]+\)'.'~ ~\1'1'~
		END ELSE BEGIN
			REPLACE_TEXTUALLY ~INSERT INTO options ROWS (~ ~INSERT INTO options ROWS (
	'Game Options',	'3E Thief Sneak Attack',	'1',~
		END
	BUT_ONLY
END ELSE BEGIN
<<<<<<<< EET_Tweaks-inlined/9/Baldur.ini
CREATE TABLE options (
	section string,
	name string,
	value string
);
INSERT INTO options ROWS (
	'Game Options',	'3E Thief Sneak Attack',	'1',
);
>>>>>>>>
	COPY ~EET_Tweaks-inlined/9/Baldur.ini~ ~%USER_DIRECTORY%/Baldur.ini~ EVALUATE_BUFFER
END

COPY ~EET_Tweaks/9/SNEAKATT.2DA~ ~override~
	~EET_Tweaks/9/CRIPPSTR.2DA~ ~override~
	~EET_Tweaks/9/BACKSTAB.SPL~ ~override~

STRING_SET ~3042~ @0 //change "The backstab seems to have failed." to "Successful Sneak Attack"
//STRING_SET ~~ @1 //failed sneak attack message
STRING_SET ~9561~ @2 //Thief kit description
STRING_SET ~25211~ @3 //Stalker kit description
STRING_SET ~25213~ @4 //Assassin kit description
STRING_SET ~25216~ @5 //Swashbuckler kit description
STRING_SET ~74298~ @6 //Shadowdancer kit description

//10013 //Your weapon is unsuitable for backstab.
//12128 //Backstab Damage
//16471 //Backstab Double Damage
//16472 //Backstab Triple Damage
//16473 //Backstab Quadruple Damage
//16474 //Backstab Quintuple Damage
//16475 //Backstab Sextuple Damage
//74094 //Backstab Septuple Damage
//74095 //Backstab Octuple Damage
//74096 //Backstab Nonuple Damage

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// 10: IWD:EE Bard Songs                             \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

//BEGIN ~IWD:EE Bard Songs~
//DESIGNATED 9
//REQUIRE_PREDICATE GAME_IS ~eet bg2ee~ ~This component is compatible only with EET and BG2:EE.~



